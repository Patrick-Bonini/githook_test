<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <!-- I don't like this but it was a request to have everything appear on one standard web page 
		     FUTURE:REMOVECSS
		 -->
    <style>
			th, td {
			padding-bottom: 1px;
			}
		   td img{
			display: block;
			margin-left: auto;
			margin-right: auto;
			margin-bottom:1px;
			margin-top: 1px;
			}
			p {
			
			margin-bottom:3px;
			margin-top: 1px;
			}
			<!--
			img
			{
			image-rendering: auto;
            max-width: none;
			}--></style>
    <meta name="description" content="[%=Variables.CompanyName%] Messaging APIs"/>
  </head>
  <body>
    <h1><a name="Messagi"/><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging APIs</h1>
    <p><MadCap:variable name="Variables.CompanyName"/> provides enterprise messaging Application Programming Interfaces (APIs) that  enable you to develop applications for use with <MadCap:variable name="Variables.CompanyName"/> <MadCap:variable name="Product-Names.pubsub_brand_only"/>. Each <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API includes sample applications, release notes, and developer documentation.</p>
    <p>These <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging APIs are designed to be used as a base messaging layer that help various client applications to communicate over the <MadCap:variable name="Variables.CompanyName"/> message bus. </p>
    <p>The <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging APIs are provided for the following languages. The links below go to pages that provide more details about the APIs, such as getting started information, reference guides, and release notes:</p>
    <ul>
      <li><MadCap:xref href="C-API/C-api-home.htm"> C API </MadCap:xref>—This API is designed to provide high message throughput and low latency with the lowest CPU utilization possible.</li>
      <li><MadCap:xref href="dotNet-API/net-api-home.htm">C# / .NET API</MadCap:xref>—This API is an object-oriented, managed wrapper for the C API.</li>
      <li><MadCap:xref href="Go-API/go-home.htm">Go API</MadCap:xref>—This API enables cloud-based and enterprise-scale server-based applications to use <MadCap:variable name="Variables.CompanyName"/> messaging.</li>
      <li><MadCap:xref href="iOS-API/iOS-api-home.htm">iOS API</MadCap:xref>—This API is an iOS native wrapper of the C API specifically designed for high message throughput and low latency. It is also fully integrated with iOS application lifecycle.</li>
      <li><MadCap:xref href="Java-API/java-api-home.htm">Java API</MadCap:xref> — This API delivers high message-throughput utilizing modern Java features and programming models.</li>
      <li><MadCap:xref href="JavaRTO-API/java-rto-home.htm">Java RTO API</MadCap:xref>—This API is a low-latency Java Native Interface (JNI) wrapper for the C API.</li>
      <li><MadCap:xref href="JCSMP-API/jcsmp-api-home.htm">JCSMP API</MadCap:xref>— This API is a classic, object‑oriented Java API that delivers high message-throughput with low-latency.</li>
      <li><MadCap:xref href="JavaScript-API/js-home.htm">JavaScript API</MadCap:xref>—This API enables Web and mobile applications to <MadCap:variable name="Variables.CompanyName"/> messaging.</li>
      <li><MadCap:xref href="../Solace-JMS-API/jms-get-started-open.htm">JMS API</MadCap:xref> —This API provides a common way for Java programs to create, send, receive, and read an enterprise messaging system's messages.</li>
      <li><MadCap:xref href="NodeJS-API/node-js-home.htm">Node.js API</MadCap:xref>—This API enables server side Web-connected enterprise applications to use <MadCap:variable name="Variables.CompanyName"/> messaging and take advantage of the event-based programming enabled by Node.js.</li>
      <li><MadCap:xref href="Python-API/python-home.htm">Python API</MadCap:xref>—This API enables cloud-based and enterprise-scale server-based applications to use <MadCap:variable name="Variables.CompanyName"/> messaging.</li>
    </ul>
    <p>For a list of which features each API currently supports, see <MadCap:xref href="../API-Developer-Guide/Feature-Support-PubSub-Messaging-APIs.htm">Feature Support in [%=Product-Names.pubsub_brand_only%] Messaging APIs</MadCap:xref>.</p>
    <p MadCap:conditions="Default.HideFromAllOutput">HIDE FOR NOW&gt; The enterprise APIs are designed to be used as a base messaging layer, helping various client applications to communicate over the Solace message bus. This document provides required information on how to use the APIs to create new or integrate existing applications for use with the Solace Messaging Platform, which routes messages based on their assigned hierarchical topics.</p>
    <p MadCap:conditions="Default.HideFromAllOutput">The Solace  messaging APIs include:</p>
    <ul MadCap:conditions="Default.HideFromAllOutput">
      <li>JCSMP—A 100% pure Java implementation, JCSMP is an object‑oriented, classic Java API that delivers high message throughput.</li>
      <li>JMS API—The Solace JMS implementation allows Java applications to access a Solace PubSub+ event broker using the standard JMS API. For more information, refer to <MadCap:xref href="../Solace-JMS-API/jms-get-started-open.htm">Solace JMS API</MadCap:xref>.</li>
      <li>.NET API—This API is an object-oriented, managed wrapper for the C API.</li>
      <li>JavaScript—This API enables Web and mobile applications to use Solace messaging. For more information, refer to <MadCap:xref href="JavaScript-API/js-home.htm">Solace JavaScipt API</MadCap:xref>.</li>
      <li>Node.js API—This API enables server side Web-connected enterprise applications to use Solace messaging and take advantage of the event-based programming enabled by Node.js.</li>
      <li>iOS API—This API is an iOS native wrapper of the C API specifically designed for high message throughput and low latency. It is also fully integrated with iOS application life cycle.</li>
      <li>C API—This API provides high message throughput and low latency with the lowest possible CPU utilization.</li>
      <li>Java Real-Time Optimized (RTO) API—This API is a low-latency Java Native Interface (JNI) wrapper for the C API.</li>
    </ul>
  </body>
</html>
