<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Client Support</h1>
    <p>An event broker offers clients on the end of an AMQP connection the same degree of support as other types of event broker clients except for the limitations or restrictions noted in the following table. For information about conformance with respect to the AMQP 1.0 specification, see <MadCap:xref href="AMQP-Protocol-Conformance.htm">AMQP Protocol Conformance</MadCap:xref>.</p>
    <p> </p>
    <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <col class="TableStyle-Table_Num-Column-Column1" style="width: 221px;"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Solace Event Broker Feature</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Level of Client Support for AMQP</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Access Control Lists (ACLs)</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Special rules with respect to the reply-to #P2P topic prefix reserved by Solace for each individual client are of limited use for clients, which have no means to learn their assigned #P2P reply-to prefix.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Guaranteed Messaging</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>The event broker supports client publishing and subscribing with the following exceptions:</p>
            <ul>
              <li>When Guaranteed Messaging is not enabled, clients will receive a close frame with an indication of <code>amqp:not-implemented</code> and appropriate descriptive text.</li>
              <li>Endpoint creation: Clients create arbitrary durable queues and topic endpoints when they bind as consumers, or bind to any existing queue or topic endpoint created through some other means, and create temporary queue and topic endponts.</li>
              <li>Queue subscription management: Clients cannot add or remove subscriptions on queues they bind to.</li>
              <li>Transactions: Both local and XA transactional messaging are not supported.</li>
              <li>DMQ eligible: All messages published by clients are treated as if DMQE (Dead Message Queue Eligible) is true.</li>
              <li>Retransmission of an unacknowledged message sent to a client will only happen on client reconnect, and never due to a retransmit timeout as done for an SMF client.</li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Direct Messaging</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>The event broker supports client direct publishing, but not subscribing.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">TCP Transport</td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">The event broker supports AMQP over TCP.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">WebSocket Transport</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">WebSocket transport is not supported for AMQP.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Authentication</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>AMQP uses the Simple Authentication and Security Layer (SASL) for authentication. The event broker supports ANONYMOUS, PLAIN, and EXTERNAL SASL mechanisms.</p>
            <ul>
              <li>The ANONYMOUS mechanism must be used for the Solace basic authentication type of none.</li>
              <li>The PLAIN mechanism must be used for Solace basic authentication types of internal, ldap, or radius. In this case the authcid and password fields of the sasl.init frame are used to establish identity.</li>
              <li>The EXTERNAL mechanism must be used for Solace client-certificate authentication. In this case the identity is established through the fields of the provided client certificate in the normal manner.</li>
            </ul>
            <p class="Note">If an client attempts to connect without a SASL exchange, and thus not provide any identity, the event broker will accept the connection only in the <i>basic/none</i> case, and assign the client to the “default” client-username.</p>
            <p>Kerberos is not supported.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Compression</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Compressed client connections are not supported.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">Deliver-To-One</td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">The Deliver-To-One feature is not supported for AMQP.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Eliding</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">All messages published by a client are treated as non-eligible for eliding.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Keepalive</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">The event broker uses the client-profile TCP keepalives on the connection. The event broker never imposes an AMQP keepalive requirement on the client, although it respects  AMQP keepalives requested by the client.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Sequenced-Topics</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Sequenced-topics are not supported for clients.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">PubSub+ Cache</td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">PubSub+ Cache query functionality is provided by Solace APIs.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Subscription Managers</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Clients cannot manage subscriptions on behalf of other clients.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">SSL/TLS</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">The event broker supports TLS negotiation by the broker exposing a separate, encrypted-only port with the expectation that every connection starts with a TLS exchange. After this, the client and broker continue with the normal AMQP frame exchange.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">JMS Message Types</td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">StreamMessage and MapMessage are not supported.</td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
