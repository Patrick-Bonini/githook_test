<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Sessions</h1>
    <p>When a Context is established, one or more Sessions can be created within that Context. A Session creates a single, client connection to an event broker for sending and receiving messages.</p>
    <p>A Session provides the following primary services:</p>
    <ul>
      <li>client connection</li>
      <li>update and retrieve Session properties</li>
      <li>retrieve Session statistics</li>
      <li>add and remove subscriptions</li>
      <li>create destinations and endpoints</li>
      <li>publish and receive Direct messages</li>
      <li>publish Guaranteed messages</li>
      <li>make requests/replies (or create Requestors for JCSMP)</li>
      <li>create Guaranteed message Flows to receive Guaranteed messages</li>
      <li>create Browsers (for the JCSMP and .NET APIs only)</li>
      <li>create cache sessions</li>
    </ul>
    <p>When configuring a Session, the following must be provided:</p>
    <ul>
      <li>Session properties to define the operating characteristics of the client connection to the event broker.</li>
      <li>A message callback for Direct messages that are received.</li>
      <li>An event handling callback for events that occur for the Session (optional for JCSMP).</li>
    </ul>
    <table class="TableStyle-Table_Num" style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 95%;" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Session APIs</p>
      </caption>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API
                    </th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">
                       Use
                    </th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">com.solacesystems.jcsmp.JCSMPSession</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Java RTO</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">com.solacesystems.solclientj.core.<br/>handle.SessionHandle</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">solClient_opaqueSession_pt</p>
            <p class="Tbl_BodyCode">solClient_session_create(...)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">SolaceSystems.Solclient.Messaging.<br/>ISession</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">JavaScript and Node.js</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_BodyCode">solace.Session</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>The figure below shows some of the fundamental processing components that are dependent on a Session.</p>
    <p class="GraphicCaption">Session and its Aggregates</p>
    <p class="GraphicCaption">
      <img src="Images/Session_components.jpg" MadCap:mediastyle="@media print { max-width: 500px; }" style="max-width: 500px;" alt=""/>
    </p>
    <h2 class="with-rule"><a name="core_messaging_api_concepts_2465013491_285228"/>Handles</h2>
    <p>Handles are used in the Java RTO API. The Java RTO API is an implementation of Java Native Interface (JNI)-wrapped C, and is essentially an object-oriented abstraction of the C API.</p>
    <p>A Handle is a Java interface representing a C object. Handles are created by <code>Solclient.Allocator</code> and are unbound (not associated with any C object) when created. Handles can be bound to (associated with) a C object through the Java RTO API.</p>
    <p>When a Handle is bound to a C object, that C object can be manipulated through the Java RTO API.</p>
    <p>Handles have the word <code>Handle</code> appended to their class name, as in <code>ContextHandle</code> or <code>MessageHandle</code>.</p>
  </body>
</html>
