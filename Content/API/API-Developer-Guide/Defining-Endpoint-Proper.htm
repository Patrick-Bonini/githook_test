<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1>Defining Endpoint Properties</h1>
    <p>When a client application dynamically creates an endpoint, the properties used to define that endpoint are obtained from the following sources (in the order presented):</p>
    <ul>
      <li>Endpoint properties and/or provision flags that are passed-in with an endpoint provision API function or method.        <p>A client can only provide a limited set of endpoint properties and/or provision flags (as listed in <MadCap:xref href="#receiving_guaranteed_messages_1016811797_699761">Client-Configurable Endpoint Properties</MadCap:xref>) when dynamically creating a durable endpoint (see <MadCap:xref href="Provisioning-Durable-End.htm#Dynamically-Create">Provisioning Durable Endpoints Using the [%=Manifest-Products-APIs.PubSub-GenericAll-Messaging-API%]s</MadCap:xref>).</p></li>
      <li>Properties used for CLI-provisioned endpoints.			<p>Client-created endpoints will be given the same endpoint properties as CLI‑provisioned endpoints; excepting any endpoint properties and/or provision flags passed-in by the client—as noted above—which take precedence. These CLI-provisioned endpoint properties can be taken from an endpoint that an administrator has specifically provisioned and, through two mechanisms:</p><ul><li><MadCap:xref href="../../Messaging/Guaranteed-Msg/Endpoints.htm#Endpoint">Endpoint Templates</MadCap:xref> have a <code>name-filter</code> that allows them to match an endpoint name to an endpoint template. This allows client created queues or topic endpoints the ability to dynamically copy attributes from the specified endpoint template. Refer to <MadCap:xref href="../../Messaging/Guaranteed-Msg/Configuring-Endpoint-Templates.htm#Setting">Setting Name Filters to Match Queue Names </MadCap:xref>or <MadCap:xref href="../../Messaging/Guaranteed-Msg/Configuring-Endpoint-Templates.htm#Setting19">Setting Name Filters to Match Topic Endpoint Names</MadCap:xref> for more information. This feature applies only to Solace PubSub+ event broker 9.4.0 release and higher.</li><li>Client Profiles have an optional <code>copy-from-template-on-create</code> command that can be used to copy custom values from an endpoint template to a client created endpoint. However, if no customized endpoint template to be copied is explicitly set, the system defaults for CLI‑provisioned endpoints are used. For more information on this topic, go to <MadCap:xref href="../../Security/Configuring-Client-Profiles.htm#Config-Defaults-for-Endpoints">Configuring Initial Values for Client-Created Endpoints</MadCap:xref>. <br/>For event brokers before the 9.4.0 release, you can use the <code>copy-from-on-create</code> command to specify a CLI‑provisioned queue or topic endpoint with custom values, and those values will be applied to any new client‑created endpoints.</li></ul></li>
    </ul>
    <h2 class="with-rule"><a name="receiving_guaranteed_messages_1016811797_699761"/>Client-Configurable Endpoint Properties</h2>
    <p>When creating durable queues or topic endpoints, a client application can configure the following endpoint parameters through endpoint properties and/or provision flags that are passed-in with an endpoint provision API function or method:</p>
    <ul>
      <li>Access Type (exclusive or non-exclusive)—Determines the behavior when multiple Guaranteed Message Flows are bound to a Queue endpoint. (Only Queues can have multiple Flows bound.)<ul><li>Exclusive—Multiple consumer Flows can be bound to the queue (up to 1,000), but only one Flow out of all the bound Flows is able to receive messages at a time (that is, only one Flow can be active). The first Flow to bind to the queue can consume messages from it, and when that Flow disconnects, the next oldest Flow to bind becomes active and can begin receiving messages, and so on.</li><li>Non-exclusive—All bound consumer Flows are able to receive messages, and when multiple Flows are bound to a non‑exclusive Queue, they receive messages in a round-robin fashion.</li></ul></li>
      <li>Maximum Message Size—The maximum size (in bytes) for any one message stored in the endpoint. If a message’s size exceeds this value, the message is not queued to the endpoint.</li>
      <li>Message Discard Behavior—Specifies how a durable endpoint should handle ingress messages discards that occur due to any of the following conditions. (This property does not affect how an endpoint handles message discards for reasons other than those listed below.)
			
			<ul><li>the published message causes the configured message quota for the endpoint to be exceeded</li><li>the published message exceeds the maximum message size allowed for the endpoint</li><li>the client published to a topic it has also subscribed to and has an active flow with “No Local Delivery”</li><li>(for queues only) the message is published directly to a queue, but the queue is shutdown</li></ul><p>By default, the Message Discard Behavior property is enabled for queues and is not enabled for topic endpoints.</p><p>If the Message Discard Behavior property <b>is enabled</b> for an endpoint, failure to spool a message because of one or more of the conditions above results in that message being discarded, and a negative acknowledgment (that is a “nack”) is returned to the sender. In this case, the message cannot be spooled to any other queue or topic endpoint (regardless of whether those endpoints have the Message Discard Behavior property enabled or disabled).</p><p class="Note"> A nack is only sent to the client if the message was originally published with a Non-Persistent or Persistent delivery mode. If the message was published with a Direct delivery mode, but was changed to Non-Persistent because of a Topic match, and was then discarded, a nack is not returned to the sender. The publishing application is responsible for deciding how to handle the nack—not the messaging API. Solace messaging APIs do not retransmit nacked messages.</p><p>If the Message Discard Behavior property <b>is not enabled</b> for an endpoint, and it encounters one or more of the above conditions, the endpoint discards the ingress message ‘silently’ (that is, it discards the message but returns an acknowledgment to the sender). In this case, the message can be spooled by other endpoints—f they do not encounter any of the conditions listed above.</p><p class="Note">The Message Discard Behavior property also affects the behavior of transacted sessions. If acks are being returned to the sender, then the transacted session commit succeeds. If a nack is returned to the sender, then the commit fails. For the enterprise messaging APIs, see <MadCap:xref href="Using-Local-Transactions.htm">Using Local Transactions</MadCap:xref>.</p></li>
      <li>Maximum Message Redelivery—Specifies the maximum number of times a queue can attempt to redeliver a message to a client. If the number of redelivery attempts for a given message exceeds the Maximum Message Redelivery value, the message is either discarded, or, if a Dead Message Queue (DMQ) has been provisioned on the event broker, the message is removed and placed in the DMQ. (For information on DMQs and making messages eligible for DMQs, see <MadCap:xref href="Creating-Messages-1.htm#DMQ-Elig">Setting Dead Message Queue Eligibility</MadCap:xref>.)
        <p>The valid range is 0 through 255. 0 mean retry forever and is the default value.</p></li>
      <li>Permissions—The permission level on the endpoint for clients other than the owner (that is, the client or administrator that provisioned the endpoint). The owner always has the highest permission level. The following permission levels, from greatest to least, can be assigned.<ul><li>Delete—A client has the permissions of Modify-Topic with the ability to delete the endpoint.</li><li>Modify-Topic—A client has the permissions of Consume and the ability to change a Topic subscription that attracts messages to the topic endpoint.</li><li>Consume—A client may read and consume messages from the endpoint. When a client consumes a message, it is acknowledged, which subsequently removes the message from the endpoint.</li><li>Read-Only—A client may read messages from the endpoint but not consume them.</li><li>None—No client other than the owner may access the endpoint.</li></ul></li>
      <li>Quota—The maximum amount of message spool disk space (in megabytes) permitted for the endpoint. If this quota is exceeded, message cannot be queued to the endpoint. This provides load‑balancing; however, messages can be delivered to consuming clients out of order.</li>
      <li>Respect Message TTL—Specifies whether the endpoint recognizes Time-to-Live (TTL) eligibility flags set on published messages. If message TTLs are recognized, expired messages can automatically be removed from the endpoint. For information on setting TTL eligibility when publishing messages see <MadCap:xref href="Creating-Messages-1.htm#TTL">Setting Time-To-Lives</MadCap:xref>.</li>
    </ul>
  </body>
</html>
