<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Publishing Messages in Transactions</h1>
    <p>To publish Guaranteed messages in a Transaction, a producer flow must first be established in the Transacted Session:</p>
    <ul>
      <li>For JCSMP, the client application must acquire an <code>XMLMessageProducer</code> from the Transacted Session.</li>
      <li>For the Java RTO, C, and .NET APIs, when a Transacted Session is successfully created a producer flow is automatically created in that Transacted Session if the following Transacted Session properties are enabled (this is the default behavior):<ul><li>Java RTO API: <code>TransactedSessionHandle.PROPERTIES.HAS_PRODUCER</code></li><li>C API: <code>SOLCLIENT_TRANSACTEDSESSION_PROP_HAS_PRODUCER</code></li><li>.NET API: <code>TransactedSessionProperties.HasProducer</code></li></ul></li>
    </ul>
    <p>After establishing a producer flow, Guaranteed messages can be published through one of the send methods or functions listed below.</p>
    <p>In a Transaction, the event broker stages the published messages, and they are not delivered to their destinations on the event broker until the client issues a commit. A successful commit will deliver the messages to their destinations and remove the staging information.</p>
    <table style="caption-side: top;width: 95%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption"><a name="using_local_transactions_93849435_629047"/>To Send Messages in Transactions</p>
      </caption>
      <col width="119px" class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Use</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">XMLMessageProducer.send(...<code>)</code></p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Java RTO</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">TransactedSessionHandle.send(...)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">solClient_transactedSession_sendMsg(...)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_BodyCode">ITransactedSession.send(...)</p>
          </td>
        </tr>
      </tbody>
    </table>
    <h2 class="with-rule"><a name="How"/>How Endpoints’ Message Discard Behavior Affects Transactions</h2>
    <p>When a message published in a Transaction cannot be successfully spooled to any of its destination endpoints on a commit, the message is discarded. In this case, whether or not the commit is successful depends on the endpoint’s Message Discard Behavior property, which determines how the endpoint handles a discarded message.</p>
    <p>If the Message Discard Behavior property for the endpoint is not enabled, the message is ‘silently’ discarded (that is, the endpoint discards the message but returns a commit success response to the client), and the commit completes. In this case, the message can be spooled to other endpoints that it may have been destined for.</p>
    <p class="Note">When provisioning a Queue, by default the Message Discard Behavior property is enabled; when provisioning a Topic Endpoint, by default the property is not enabled.</p>
    <p>For information on the Message Discard Behavior endpoint property and the conditions that can cause an endpoint to not spool and then discard a message, refer to <MadCap:xref href="Defining-Endpoint-Proper.htm">Defining Endpoint Properties</MadCap:xref>.</p>
  </body>
</html>
