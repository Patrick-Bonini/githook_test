<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Configuring Logging</h1>
    <p>This section provides information for using messaging API logging, and includes the following APIs:</p>
    <ul>
      <li>
        <MadCap:xref href="#java-api">JCSMP</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#javaRTO-api">Java RTO API</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#C-and-Net-api">C and .NET APIs</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#javascript-and-nodejs-api">JavaScript and Node.js APIs</MadCap:xref>
      </li>
    </ul>
    <p>For information on logging in the <MadCap:variable name="Manifest-Products-APIs.api-product-java-short"/>, see <MadCap:xref href="../API-Developer-Guide-Java/Java-API-Logging.htm#Java-API-Logging">Configuring Logging in the [%=Manifest-Products-APIs.api-product-java-short%]</MadCap:xref>. </p>
    <h2 class="with-rule"><a name="java-api"/>JCSMP</h2>
    <p>JCSMP uses Apache Commons Logging to support different logging frameworks, such as <code>log4j</code> or <code>java.util.logging</code> for the application’s logging framework.</p>
    <p class="Note">To turn on logging of Kerberos events, set the Java system property to the following: -<code>Dsun.security.krb5.debug=true</code>.</p>
    <table class="TableStyle-Table_Num" style="width: 528px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Supported Log Levels for Java</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Level</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Fatal</p>
          </td>
          <td rowspan="2" class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">These log levels are reserved for internal errors and should be a cause for investigation. Contact Solace customer support for log events at this level. </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Error</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Warn</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Indicates an application error (for example, invalid parameters passed in or unsupported use of the APIs).</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">Info</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">Typically used for state changes at a high level (for example, connect/disconnect/reconnect).</p>
            <p class="Tbl_Body">It is also used for unusual events that do not indicate any error, but they are unexpected and might need investigation.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Debug</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">This log level is voluminous and typically requires Solace customer support to interpret.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">Trace</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">Not used.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>When a log level is set at a given level, all log events with log levels less severe than the selected level are filtered out, all log levels equally or more severe are included. For example, if the <code>Error</code> log filter level is selected, only <code>Error</code> and <code>Fatal</code> events are included.</p>
    <p>Java designers should be familiar with such logging frameworks because they are an established standard for Java-based systems. However, you should consider the following points:</p>
    <ul>
      <li>When using log4j<MadCap:conditionalText MadCap:conditions="Default.HideFromAllOutput"> (<a href="http://logging.apache.org/log4j/)" target="_blank" class="link-internal">http://logging.apache.org/log4j/</a>)</MadCap:conditionalText>, the directory in which the <code>log4j.properties</code> file and <code>log4j.jar</code> file exist is on the classpath.</li>
      <li>When using log4j, including the <code>log4j.jar</code> library file without <code>log4j.properties</code> in the classpath negatively impacts performance.</li>
    </ul>
    <h2 class="with-rule"><a name="javaRTO-api"/>Java RTO API</h2>
    <p>The Java RTO API uses Java's default java.util.logging framework. Log levels in The Java RTO API correspond with certain log levels in the C API. The table below shows the mapping of log levels between the APIs.</p>
    <table class="TableStyle-Table_Num" style="width: 529px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Supported Log Levels for Java RTO</p>
      </caption>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Java RTO Level</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Matching C Level</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td rowspan="2" class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Severe</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Critical</p>
          </td>
          <td rowspan="2" class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">These log levels are reserved for internal errors and should be a cause for investigation. Contact Solace customer support for log events at this level.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Error</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Warning</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Warn</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Indicates an application error (for example, invalid parameters passed in or unsupported use of the APIs).</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">Info</p>
          </td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">Notice</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">Reserved for unusual events that do not indicate any error, but they are unexpected and might need investigation.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Fine</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Info</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Typically used for state changes at a high level (for example, connect/disconnect/reconnect).</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">Finest</p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">Debug</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">This log level is voluminous and typically requires Solace customer support to interpret.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>When a log level is set at a given level, all log events with log level less severe than the selected level are filtered out; all log levels equally or more severe are included. For example, if the <code>Warning</code> log filter level is selected, only <code>Warning</code> and <code>Severe</code> events are included. In contrast, if the <code>Fine</code> log filter level is selected, <code>Fine</code>, <code>Info</code>, <code>Warning</code>, and <code>Severe</code> events are included, and the <code>Finest</code> level is filtered out.</p>
    <h2 class="with-rule"><a name="C-and-Net-api"/>C and .NET APIs</h2>
    <p>Logging in the C and .NET APIs does not have any external dependencies. These APIs support logging levels in accordance with syslog (RFC 3164). The table below lists the supported log levels. </p>
    <table class="TableStyle-Table_Num" style="width: 528px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Supported Log Levels for C and .NET</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Level</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Critical</p>
          </td>
          <td rowspan="2" class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">These log levels are reserved for internal errors and should be a cause for investigation. Contact Solace customer support for log events at this level.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Error</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Warn</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Indicates an application error (for example, invalid parameters passed in or unsupported use of the APIs).</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">Notice</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">Reserved for unusual events that do not indicate any error, but they are unexpected and might need investigation.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Info</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Typically used for state changes at a high level (for example, connect/disconnect/reconnect).</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">Debug</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">This log level is voluminous and typically requires Solace customer support to interpret.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>When a log level is set at a given level, all log events with log level less severe than the selected level are filtered out; all log levels equally or more severe are included. For example, if the <code>Error</code> log filter level is selected, only <code>Error</code> and <code>Critical</code> events are included. In contrast, if <code>Info</code> log filter level is selected, <code>Info</code>, <code>Notice</code>, <code>Warn</code>, <code>Error</code> and <code>Critical</code> events are included, and the <code>Debug</code> level is filtered out.</p>
    <p>Logging levels and a log event callback or delegate can be set when the APIs are initialized.</p>
    <table class="TableStyle-Table_Num" style="width: 528px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">To Set Up a Log Callback or Delegate</p>
      </caption>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col width="407px" class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Set Through</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">solClient_log_setCallback(...)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_BodyCode">ContextFactoryProperties.LogDelegate</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p style="font-weight: bold;">Related Samples</p>
    <p>For an example of how to redirect C API and .NET API generated logs to stdout, see the <code>RedirectLogs</code> sample.</p>
    <p>You can see the example in the <code>Logging.java</code> sample file that demonstrates how to work with logs generated by the API.</p>
    <p>You can find these examples on <a href="https://www.solace.dev/" class="link-offsite">Solace Developers</a>. </p>
    <h2 class="with-rule"><a name="javascript-and-nodejs-api"/>JavaScript and Node.js APIs</h2>
    <p>The default log level of the JavaScript and Node.js APIs is <code>INFO</code>. If you want to change the log level, use the <code>solace.SolclientFactory.setLogLevel</code> method after calling <code>solace.SolclientFactory.init</code>. The table below lists the supported log levels. </p>
    <p>For example:</p>
    <ul>
      <li>
        <p>To load the debug variation of the JavaScript API, select the version 10 API profile, and set the log level to <code>TRACE</code>, add the following to the entry point of your application:</p>
        <p class="Code">&lt;head&gt;<br/>    &lt;script src="solclient-debug.js"&gt;&lt;/script&gt;<br/>    &lt;script type="text/javascript"&gt;<br/>        var properties = new solace.SolclientFactoryProperties();<br/>        properties.profile = solace.SolclientFactoryProfiles.version10;<br/>        solace.SolclientFactory.init(properties);<br/>        solace.SolclientFactory.setLogLevel(solace.Loglevel.TRACE);<br/>    &lt;/script&gt;<br/>&lt;/head&gt;</p>
      </li>
      <li>
        <p>To load the debug variation of the Node.js API, select the version 10 API profile, and set the log level to <code>TRACE</code>, add the following to the entry point of your application:</p>
        <p class="Code">var solace = require('solclientjs').debug;<br/>var properties = new solace.SolclientFactoryProfiles();<br/>properties.profile = solace.SolclientFactoryProfiles.version10;<br/>solace.SolclientFactory.init(properties);<br/>solace.SolclientFactory.setLogLevel(solace.LogLevel.TRACE);</p>
        <p>For more information about JavaScript and Node.js behavior profiles, see <MadCap:xref href="Initializing-and-Monitoring-APIs.htm">Initializing and Monitoring APIs</MadCap:xref>. For more information about JavaScript and Node.js API variations, see  <MadCap:xref href="../Messaging-APIs/Code-and-Compile-Guideli.htm">Code and Compile Guidelines</MadCap:xref>.<br/></p>
      </li>
    </ul>
    <table class="TableStyle-Table_Num" style="width: 528px;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0">
      <caption>Supported Log Levels for JavaScript and Node.js</caption>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Level</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Fatal</p>
          </td>
          <td rowspan="2" class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">These log levels are reserved for internal errors and should be a cause for investigation. Contact Solace customer support for log events at this level.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Error</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Warn</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Indicates an application error (for example, invalid parameters passed in or unsupported use of the APIs).</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">Info</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">Reserved for unusual events that do not indicate any error, but they are unexpected and might need investigation.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Debug</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Typically used for state changes at a high level (for example, connect/disconnect/reconnect). It is also used for unusual events that do not indicate any error, but they are unexpected and might need investigation.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">Trace</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">This log level is voluminous and typically requires Solace customer support to interpret.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>When a log level is set at a given level, all log events with log level less severe than the selected level are filtered out; all log levels equally or more severe are included. For example, if the <code>Error</code> log filter level is selected, only <code>Error</code> and <code>Fatal</code> events are included.</p>
  </body>
</html>
