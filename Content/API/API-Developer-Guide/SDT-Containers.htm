<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>SDT Containers</h1>
    <p>The messaging APIs support two types of composite containers:</p>
    <ul>
      <li>
        <u>Map</u>
        <p>A map is a structured data container in which each data field is associated with a key. A map allows the application to perform keyed lookups. Keyed lookups allow direct access to data, which means that the publisher and receiver do not have to agree on the exact format of the data.</p>
        <p>A map can contain maps and streams.</p>
        <p>Maps support the following operations:</p>
        <ul>
          <li>Adding data to fields with associated keys. In the C and .NET APIs, data fields are added at the end of the container; therefore, the add routine might not detect duplicate keys.</li>
          <li>Deleting data fields according to their keys.</li>
          <li>Iterating sequentially through the data fields stored in the map.</li>
          <li>Retrieving elements accorded to their keys.</li>
        </ul>
      </li>
      <li>
        <u>Stream</u>
        <p>A stream is a structured data container that is a sequence of unkeyed data fields. A stream is processed faster than a map, but a stream can only be accessed sequentially from beginning to end, and the sender and receiver must agree on a predefined data structure. A stream can contain maps and streams.</p>
        <p>Streams support the following operations:</p>
        <ul>
          <li>Adding/appending fields to the end of the stream.</li>
          <li>Iterating sequentially through the fields stored in the stream.</li>
        </ul>
      </li>
    </ul>
    <p>For a comprehensive list of the available container methods and functions that can be used for operations such as setting data for and getting data from fields, and iterating through or deleting fields, refer to <MadCap:xref href="../Messaging-APIs/Solace-APIs-Overview.htm">APIs &amp; Protocols</MadCap:xref> for the appropriate messaging API. The table below lists relevant interfaces or function groups.</p>
    <table class="TableStyle-Table_Num" style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 95%;" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Available Container Methods and Functions</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/>Â Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Use</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <ul>
              <li>
                <p class="Tbl_Body"><code>SDTMap</code> interface</p>
              </li>
              <li>
                <p class="Tbl_Body"><code>SDTStream</code> interface</p>
              </li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <ul>
              <li>
                <p class="Tbl_Body"><code>solClient_container</code> functions</p>
              </li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <ul>
              <li>
                <p class="Tbl_Body"><code>ISDTContainer</code> interface, which provides:</p>
              </li>
              <li>
                <p class="Tbl_Body"><code>ISDTContainer</code> methods</p>
              </li>
              <li>
                <p class="Tbl_Body"><code>IMapContainer</code> methods</p>
              </li>
              <li>
                <p class="Tbl_Body"><code>IStreamContainer</code> methods</p>
              </li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">JavaScript and Node.js</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <ul>
              <li>
                <p class="Tbl_Body"><code>solace.SDTMapContainer</code> methods</p>
              </li>
              <li>
                <p class="Tbl_Body"><code>solace.SDTStreamContainer</code> methods</p>
              </li>
            </ul>
          </td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
