<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1><a name="top"/>End-to-End Payload Compression</h1>
    <p>The <MadCap:variable name="Product-Names.pubsub_brand_only"/> APIs can perform end-to-end payload compression to allow for: </p>
    <ul>
      <li>
        <p>faster message throughput </p>
      </li>
      <li>
        <p>reduced bandwidth usage</p>
      </li>
      <li>
        <p>improved performance in your applications</p>
      </li>
    </ul>
    <p>While end-to-end payload compression creates more work for individual <MadCap:variable name="Product-Names.pubsub_brand_only"/> APIs, it enables faster aggregate rates of message publishing and message receiving. The <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker offers transport message compression that compresses the entire message, see <MadCap:xref href="../../Messaging/Message-Compression.htm#top">Streaming Compressed Connections</MadCap:xref>. However, when you send and receive large messages, compressing the entire message creates a lot of work for the event broker, which can result in slower throughput. If your application needs to send and receive large messages, we recommend you use end-to-end payload compression to improve performance.</p>
    <ol>
      <li>
        <p>
          <MadCap:xref href="#Consider">Considerations When Compressing Message Payloads</MadCap:xref>
        </p>
      </li>
      <li>
        <p>
          <MadCap:xref href="#Compress">Compressing Message Payloads in the [%=Product-Names.pubsub_brand_only%] APIs</MadCap:xref>
        </p>
      </li>
    </ol>
    <MadCap:snippetBlock src="Snippets/message-payload-compression.flsnp"/>
    <h3><a name="Compress"/>Compressing Message Payloads in the <MadCap:variable name="Product-Names.pubsub_brand_only"/> APIs</h3>
    <p>Your publisher application can compress the binary payload of a message before you publish it. To compress a message payload, you must set a property that tells the API you want end-to-end payload compression enabled. The payload compression level property can be set to an integer from 0-9:</p>
    <ul>
      <li>
        <p><code>0</code>—Payload compression is disabled. This is the default setting.</p>
      </li>
      <li>
        <p><code>1 - 9</code>—Payload compression is enabled. 1 is the lowest level of compression with the fastest data throughput, and 9 is the highest level of compression with the slowest data throughput.</p>
      </li>
    </ul>
    <p>Your payload compression level should be adjusted according to your network and performance requirements.</p>
    <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p>The table below shows how to set the end-to-end payload compression property in your publisher applications:</p>
      </caption>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">How to set End-to-End Payload Compression Level</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Set <code>JCSMPProperties.PAYLOAD_COMPRESSION_LEVEL</code> when you configure your session properties. For example:</p>
            <pre xml:space="preserve">
JCSMPProperties properties = new JCSMPProperties();	
properties.setProperty(JCSMPProperties.PAYLOAD_COMPRESSION_LEVEL, Integer.valueOf(9)); // Payload compression enabled with max compression					</pre>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/java/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API JCSMP reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Java RTO</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Not currently supported</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">JMS</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Not currently supported</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1"><p>Set <code>SOLCLIENT_SESSION_PROP_PAYLOAD_COMPRESSION_LEVEL</code> when you configure your session properties. For example:</p><pre xml:space="preserve">
sessionProps[propIndex++] = SOLCLIENT_SESSION_PROP_PAYLOAD_COMPRESSION_LEVEL;
sessionProps[propIndex++] = "9";  /* Payload compression enabled with max compression */					</pre><p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/c/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API C reference</a></p><![CDATA[                   ]]></td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">.NET</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Not currently supported</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">JavaScript and Node.js</td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1"><p>Set <code>payloadCompressionLevel</code> when you configure your session properties. For example:</p><pre xml:space="preserve">
publisher.session = solace.SolclientFactory.createSession({
    // solace.SessionProperties
    // ...
    payloadCompressionLevel: 9 // Payload compression enabled with max compression        
});						</pre><p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/js/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API JavaScript reference</a>.</p><![CDATA[
                                           ]]></td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
