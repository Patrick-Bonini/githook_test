<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h4>Recommendation</h4>
        <ul>
            <li>The Client Keep-alive interval should be set to the same order of magnitude as the TCP Keep-alive setting on the client profile.</li>
        </ul>
        <p>There are two types of keep-alive mechanisms between the client application and the event broker.</p>
        <p>There is the TCP Keep-alive that operates at the TCP level that is sent by the event broker to the client application. This is the TCP Keep-alive mechanism described in RFC 1122. The client application’s TCP stack responds to the event broker’s TCP Keep-alive probe.  By default, the event broker sends out a keep-alive message after it detects idle connection for 3 seconds.  It then sends 5 probes at the interval of 1 keep-alive probe per second.  Hence, the event broker will flag a client to have failed TCP keep-alive if it receives no response after 8 seconds.</p>
        <p>There is also the Client API Keep-alive that occurs concurrently to the TCP Keep-alive.  This is the API’s built-in keep-alive mechanism, and operates on top of TCP at the API level. This is sent from the API to the event broker. By default, a Client Keep-alive is sent at the interval of once every 3 seconds, and up to 3 keep-alive responses can be missed before the API declares that the event broker is unreachable; that is, after  9 seconds.</p>
        <p>These keep-alive mechanisms exist so that they will be able to advise the application or the event broker that its peer has died before it's able to notify the corresponding party.  The keep-alive mechanism is also used to prevent disconnection due to network inactivity.  However, if either mechanism is set much more aggressively, that is, with a shorter detecting time, than the other, the connection can be prematurely disconnected. For example, if the Client API Keep-alive is set at a 500 ms interval with 3 keep-alive responses while the TCP Keep-alive remains unchanged at the default, then the client API Keep-alive will trigger aggressive disconnection.</p>
    </body>
</html>