<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Using Selectors</h1>
    <p>Selectors enable clients to specify which messages that they are interested in receiving, as determined by the messages’ header field and property values. A selector is a string up to a maximum of 2,000 bytes that uses a conditional expression syntax that is a subset of SQL92. For detailed information on message selector syntax, refer to the <i class="Emphasis">Java Message Service Specification – Version 1.1</i>.</p>
    <p>When a selector is used, a client only receives a message if the selector evaluates to <code>true</code> when the message’s header field and property values are substituted for their corresponding identifiers in the selector. The event broker filters out messages that do not match.</p>
    <p>Selectors can be set for:</p>
    <ul>
      <li>Flows bound to a Queue or Topic Endpoint. Refer to <MadCap:xref href="#Setting-Selectors">Setting Selectors on Endpoints</MadCap:xref>.</li>
      <li>Browsers or Browser Flows. Refer to <MadCap:xref href="Browsing-Guaranteed-Mess.htm">Browsing Guaranteed Messages</MadCap:xref>.</li>
    </ul>
    <h2><a name="Performa"/>Performance Considerations When Using Selectors</h2>
    <MadCap:snippetBlock src="Snippets/Selector-Considerations.flsnp"/>
    <h2><a name="Selector"/>Selector Identifier Mapping between JMS and <MadCap:variable name="Variables.CompanyName"/> APIs</h2>
    <p>The following table lists  standard JMS identifiers and their equivalent Solace identifiers. Solace identifiers are encoded in structured data maps of Solace SMF messages as reserved keys. Both types of identifiers can be used to define selectors.</p>
    <p>For example, <code>JMSCorrelatonID</code> is encoded in the map with the key <code>ci</code>. If you are using the JMS API and you want to match only messages where the correlation ID, which is a string, is "myCorrelationId", you could write a selector expression in JMS like this:</p>
    <p class="Code">JMSCorrelationID = 'myCorrelationId'</p>
    <p>If you are using a Solace messaging API, you could write the same expression like this:</p>
    <p class="Code">ci = 'myCorrelatonId'</p>
    <p class="Note">JMS may have no set methods for some Solace identifiers, such as message sequence number (<code>sn</code>), but it is still possible to select on the <code>sn</code> identifier.</p>
    <table style="caption-side: top;width: 95%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Selector Identifiers</p>
      </caption>
      <col width="25%" class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"> </th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">JMS Identifier</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Solace Identifier</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Relevant Solace Message Property</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td rowspan="12" class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <b>Message Header Fields</b>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSCorrelationID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ci</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">CorrelationId</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSDeliveryMode</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>NA</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">DeliveryMode</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSMessageID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">mi</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ApplicationMessageId</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_BodyCode">JMSPriority</p>
          </td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">Priority</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSReplyTo</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">rt</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ReplyTo</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSTimestamp</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ts</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">SenderTimestamp</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSType</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">mt</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ApplicationMessageType</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_BodyCode">si</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">SenderID</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">sn</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">SequenceNo</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ex</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">Expiration</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ct</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">HttpContentType</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_BodyCode">ce</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">HttpContentEncoding</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td rowspan="3" class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <b>JMS-Defined Properties</b>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSXGroupSeq</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Treated as user‑specified</p>
          </td>
          <td rowspan="3" class="TableStyle-Table_Num-BodyG-Column1-Body1">Solace messaging APIs can access JMSX properties  as user properties with the same property name as used in JMS.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSXGroupID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Treated as user‑specified</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSXUserID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>&lt;client-username&gt;</code>
            </p>
            <p class="Note">The JMSXUserID property is only available when using Basic client authentication and if the<code> jmsx-user-id-enabled</code> Connection Factory property is enabled.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">
              <b>User-Defined Message Properties</b>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">User‑specified</p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">User‑specified</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">NA</td>
        </tr>
      </tbody>
    </table>
    <h2 class="with-rule"><a name="Setting-Selectors"/>Setting Selectors on Endpoints</h2>
    <p>A selector can be set on a Flow that binds to either a Queue or a Topic Endpoint. A selector functions differently on each endpoint type:</p>
    <ul>
      <li>Queue
        <p>Selectors act as egress filters on Queues.</p><p>When a Flow binds to an exclusive Queue, the selector defined for the Flow filters the messages to be consumed by the client. Non-selected messages remain in the Queue and can be consumed by clients on subsequent Flows with different selectors that might bind.</p><p>When a Flow binds to a non-exclusive Queue, messages are consumed by bound clients in a round-robin fashion according to their selectors. Once a message is consumed, it is no longer available for subsequent clients.</p></li>
      <li>Topic Endpoint
        <p>Selectors act as ingress filters on Topic Endpoints.</p><p>When a Flow binds to a Topic Endpoint, messages that match the Topic subscription are received by the Topic Endpoint. When a selector is defined for the Flow, messages whose message header fields and properties do not match the corresponding identifiers defined in the selector are not queued to the Topic Endpoint.</p><p>If a Flow disconnects from a durable Topic Endpoint, and the selector is changed, all existing messages are removed when the Flow binds again. To prevent removing messages for a Topic Endpoint when rebinding, the selector used must be an identical string to the one used in the previous bind.</p></li>
    </ul>
    <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <caption valign="top">
        <p class="TblCaption">To Set Selectors on a Flow</p>
      </caption>
      <col width="25%" class="TableStyle-Table_Num-Column-Column1"/>
      <col width="75%" class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">
                        Use
                    </th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ConsumerFlowProperties.setSelector(...)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Java RTO</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">FlowHandle.PROPERTIES.SELECTOR</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">SOLCLIENT_FLOW_PROP_SELECTOR</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">FlowProperties.Selector</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">JavaScript and Node.js</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">Not applicable</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p style="font-weight: bold;">Related Samples</p>
    <p>For an example of how to set selectors for a Flow, refer to the <code>messageSelectorsOnQueue</code> sample for the appropriate messaging API.</p>
  </body>
</html>
