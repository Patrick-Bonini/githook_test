<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1><a name="top"/>Provisioning and Deprovisioning Durable Endpoints</h1>
    <p>There are two ways that durable queues or topic endpoints can be provisioned on an event broker:</p>
    <ul>
      <li>An administrator can manually provision a durable endpoint through the <MadCap:variable name="Product-Names.pubsubmanager_short"/>, SEMP, the Solace CLI, or SolAdmin.
			<ul><li>Even for administrator provisioned endpoints, the <MadCap:variable name="Manifest-Products-APIs.PubSub-GenericAll-Messaging-API"/> for JCSMP, JavaScript, Node.js, Java RTO, or .NET, which are object-oriented, require you to create a logical queue or topic endpoint instance to  use when creating a consumer flow.</li></ul></li>
      <li>In a connected Session, a client can dynamically provision a durable endpoint through the messaging API. To dynamically provision a durable endpoint, call a method or function listed in the table below and pass in endpoint properties and provision flags. For more information, see <MadCap:xref href="Defining-Endpoint-Proper.htm">Defining Endpoint Properties</MadCap:xref>.
			<p class="Note">Clients can provision durable endpoints through the API without immediately creating consuming Flows to them.</p></li>
    </ul>
    <p style="font-weight: bold;">Related Samples</p>
    <p>For an example of how to dynamically provision durable endpoints, see:</p>
    <ul>
      <li><a href="https://github.com/SolaceSamples/solace-samples-java-jcsmp/blob/master/src/main/java/com/solace/samples/jcsmp/features/QueueProvisionAndBrowse.java" class="link-offsite">QueueProvisionAndBrowse.java</a> for the JCSMP API</li>
      <li><a href="https://github.com/SolaceSamples/solace-samples-javarto/blob/master/src/main/java/com/solace/samples/javarto/features/QueueProvision.java" class="link-offsite">QueueProvision.java</a> for the Java RTO API</li>
      <li><a href="https://github.com/SolaceSamples/solace-samples-c/blob/master/src/intro/QueueSubscriber.c" class="link-offsite">QueueSubscriber.c</a> for the C API</li>
      <li><a href="https://github.com/SolaceSamples/solace-samples-dotnet/blob/master/src/QueueConsumer/QueueConsumer.cs" class="link-offsite">QueueConsumer.cs</a> for the .NET API</li>
    </ul>
    <h2 class="with-rule"><a name="Dynamically-Create"/>Provisioning Durable Endpoints Using the <MadCap:variable name="Manifest-Products-APIs.PubSub-GenericAll-Messaging-API"/>s</h2>
    <p>To dynamically provision a durable endpoint using the <MadCap:variable name="Manifest-Products-APIs.PubSub-GenericAll-Messaging-API"/>s, complete the following steps: </p>
    <ol>
      <li>
				Create a local API representation of an endpoint.   <![CDATA[                ]]><ul><li>For the Java RTO, JavaScript, Node.js, JCSMP, and .NET APIs,  this is  a queue or endpoint object.</li><li>For the C  API, this is a list of queue or endpoint properties.
			</li></ul></li>
      <li>
				Pass the object or property list to the appropriate method or function to provision the endpoint or queue on the event broker.
			</li>
    </ol>
    <table class="TableStyle-Table_Num" style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 95%;" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p>The following table shows how to create an API representation of a durable endpoint or queue and provision it on the event broker:</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Use</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <pre xml:space="preserve">
// Create local queue or endpoint object: 
JCSMPFactory.createQueue(...) 
JCSMPFactory.createDurableTopicEndpoint(...)
								
// Provision the queue or endpoint on the event broker:
JCSMPSession.provision(...)	</pre>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/java/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JCSMP reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Java RTO</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <pre xml:space="preserve">
// Create local queue or endpoint object: 
Solclient.Allocator.newQueue(...) 
Solclient.Allocator.newTopicEndpoint(...)
								
// Provision the queue or endpoint on the event broker:
SessionHandle.provision(...)	</pre>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/jrto/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Java RTO reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <pre xml:space="preserve">
// Set local queue or endpoint properties in an array: 
provisionIndex = 0; 
provisionProps[provisionIndex++] = ...;	
							
// Provision the queue or endpoint on the event broker:
solClient_session_endpointProvision(( char ** ) provisionProps, ...)	</pre>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/c/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for C reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <pre xml:space="preserve">
// Create local queue or endpoint object: 
ContextFactory.CreateQueue(...) 
ContextFactory.CreateDurableTopicEndpointEx(...)
								
// Provision the queue or endpoint on the event broker:
ISession.Provision(...)
</pre>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/net/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for .NET reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">JavaScript and Node.js</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <pre xml:space="preserve">
// Set local queue or endpoint properties in a QueueDescriptor object: 
new QueueDescriptor(...) 	
							
// Provision the queue or endpoint on the event broker:
session.provisionEndpoint(...)
</pre>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/js/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JavaScript reference</a> or the <a href="../../API-Developer-Online-Ref-Documentation/nodejs/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Node.js reference</a>.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <table class="TableStyle-Table_Num" style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 95%;" cellspacing="0" MadCap:conditions="Default.HideFromAllOutput">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">To Dynamically Provision Endpoints</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Use</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>JCSMPSession.provision(...)</code>
            </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Java RTO</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>SessionHandle.provision(...)</code>
            </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>solClient_session_endpointProvision(...)</code>
            </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>ISession.Provision(...)</code>
            </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">JavaScript and Node.js</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <ul>
              <li>
                <p><code>provisionEndpoint()</code> function:</p>
                <p>
                  <code>session.provisionEndpoint(queueDescriptor, queueProperties, true, "creating a queue")</code>
                </p>
              </li>
              <li>
                <p>Missing Resource Creation Strategy:</p>
                <p>
                  <code>queueProperties = {createIfMissing: true, ...};</code>
                </p>
              </li>
            </ul>
          </td>
        </tr>
      </tbody>
    </table>
    <h4>Using the Missing Resource Creation Strategy in the JavaScript and Node.js APIs</h4>
    <p>Another way to provision a queue or endpoint on the event broker is with the Missing Resource Creation Strategy. To use the Missing Resource Creation Strategy, set <code>createIfMissing</code> to <code>true</code> in the <code>createMessageConsumer()</code> function:</p>
    <pre xml:space="preserve">
subscriber.messageSubscriber = subscriber.session.createMessageConsumer({
    // set solace.MessageConsumerProperties
    queueDescriptor: { name: subscriber.queueName, type: solace.QueueType.QUEUE },
    createIfMissing: true
});	</pre>
    <p>When you set <code>createIfMissing</code> to <code>true</code>, the <code>createMessageConsumer()</code> function creates the queue and signals the event broker to provision one with the same name if it does not already exist. The queue you provision on the  event broker may be configured with queue templates or setting <code>QueueProperties</code> directly when you create your <code>MessageConsumer</code> object. When you use the Missing Resource Creation Strategy, queue templates will override only the provided queue attributes if the name of the queue you create matches the template <code>name-filter</code>. For information about queue templates see <MadCap:xref href="../../Messaging/Guaranteed-Msg/Endpoints.htm#Endpoint">Endpoints</MadCap:xref>, and for instructions on how to configure a queue template using the <MadCap:variable name="Variables.CompanyName"/> CLI see <MadCap:xref href="../../Messaging/Guaranteed-Msg/Configuring-Endpoint-Templates.htm">Configuring Endpoint Templates</MadCap:xref>. For an example of how to dynamically provision durable endpoints with the missing resource creation strategy, see:</p>
    <ul>
      <li><a href="https://github.com/SolaceSamples/solace-samples-javascript/blob/master/src/basic-samples/GuaranteedSubscriber/GuaranteedSubscriber.js" class="link-offsite">GuaranteedSubscriber.js</a> for the JavaScript API</li>
      <li><a href="https://github.com/SolaceSamples/solace-samples-nodejs/blob/master/src/features/QueueConsumer.js" class="link-offsite">QueueConsumer.js</a> for the Node.js API</li>
    </ul>
    <h2 class="with-rule"><a name="Remove-Durables"/>Deprovisioning Durable Endpoints Using the <MadCap:variable name="Manifest-Products-APIs.PubSub-GenericAll-Messaging-API"/>s</h2>
    <p>You can deprovision durable endpoints in two ways:</p>
    <ul>
      <li>An administrator can remove a durable endpoint on an event broker through the <MadCap:variable name="Product-Names.pubsubmanager_short"/>, Solace CLI, SEMP, or SolAdmin.</li>
      <li>In a connected Session, a client can remove a durable endpoint that was provisioned through the API, as follows: Call a method or function listed in the table below and pass in the endpoint to remove (that is, the object for the JCSMP, Java RTO, JavaScript, Node.js, and .NET APIs, or the endpoint name and type for the C API) and the provision flags to indicate whether the “deprovisioning” should be done synchronously or asynchronously. For more information, see the <MadCap:xref href="../Messaging-APIs/Solace-APIs-Overview.htm">APIs &amp; Protocols</MadCap:xref> documentation or the appropriate messaging API.</li>
    </ul>
    <p class="Note">A client can only remove an endpoint if it originally provisioned the endpoint (that is, if it is the owner of the endpoint) or if the endpoint is provisioned with Delete permission level, which allows other clients to remove the endpoint (refer to <MadCap:xref href="Defining-Endpoint-Proper.htm">Defining Endpoint Properties</MadCap:xref>).<br/><br/>Endpoints created via a management interface (<MadCap:variable name="Product-Names.pubsubmanager_short"/>, SolAdmin, CLI or SEMP) can be deprovisioned and deleted only by management. That is, if the endpoint was created by management, it cannot be deprovisioned by a client using an API, regardless of the configured permission.</p>
    <table style="caption-side: top;width: 95%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">To dynamically deprovision durable endpoints, use the appropriate method or function listed below:</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Use</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">JCSMP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>JCSMPSession.deprovision(...)</code>
            </p>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/java/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JCSMP reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Java RTO</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>SessionHandle.deprovision(...)</code>
            </p>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/jrto/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Java RTO reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">C</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>solClient_session_endpointDeprovision(...)</code>
            </p>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/c/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for C reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">.NET</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">
              <code>ISession.Deprovision(...)</code>
            </p>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/net/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for .NET reference</a>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">JavaScript and Node.js</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p>
              <code>session.deprovisionEndpoint(...)</code>
            </p>
            <p>For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/js/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JavaScript reference</a> or the <a href="../../API-Developer-Online-Ref-Documentation/nodejs/index.html" class="link-internal"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Node.js reference</a>.</p>
          </td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
