<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-ca">
  <head>
    <title/>
  </head>
  <body>
    <h1>Multi-Protocol Integration</h1>
    <p>One of the key roles of the Solace PubSub+ event broker is to act as a multi-protocol message bus allowing various diverse applications to communicate. REST messaging is one of many messaging protocols supported on event brokers. However, to perform high-speed topic routing and Guaranteed Messaging, event brokers convert all messages to SMF, which is the format used by the event broker internally when processing messages.</p>
    <p>Just like the Java Message Service (JMS) API and other Solace APIs, REST messaging allows users to create fully-featured messages. The following figure and description provides an overview of the mapping between REST messaging HTTP POST requests, internal SMF format, and standard JMS messages. For full details of how to encode a REST message using HTTP, refer to <MadCap:xref href="../RESTMessagingPrtl/Solace-REST-Overview.htm">REST Messaging Protocol</MadCap:xref>.</p>
    <p>
      <img src="../../Resources/Images/REST-Messaging-Concepts/Multi Protocol Integration.png" style="visibility: visible;mso-wrap-style: square;width: 624px;height: 315px;" alt=""/>
    </p>
    <p>The Request URI of the HTTP POST contains the target destination and destination type for the message. These are mapped into the SMF headers and are available in the JMS API message headers as well.</p>
    <p>Most often, the HTTP POST will also contain HTTP header fields, which add further properties to the message. This is where, for example, the reply wait time can be specified for request/reply or how the content type and encoding will be communicated. If the event broker requires these message properties, they are carried in the SMF message headers. If they are related to end-to-end message delivery, they are carried as message properties. In JMS, these properties are available as custom Solace JMS extended properties following the conventions supported by the JMS API.</p>
    <p>Messages can also contain custom application properties. These are encoded in the HTTP POST using the described <MadCap:xref href="../RESTMessagingPrtl/Solace-REST-Message-Encoding.htm#Solace">Solace User Property &lt;Name&gt; </MadCap:xref>“Solace-User-Property” format as outlined in <MadCap:xref href="../RESTMessagingPrtl/Solace-REST-Overview.htm">REST Messaging Protocol</MadCap:xref>. These properties travel end-to-end with the message and are available in all Solace APIs and in JMS through the custom property interface. These properties are an excellent place to encode application-specific message details like message format or any other message processing properties.</p>
    <p>The HTTP POST request body contains the message contents. The contents are encoded in  the SMF message as outlined in <MadCap:xref href="../RESTMessagingPrtl/Solace-REST-Overview.htm">Solace REST Messaging Protocol</MadCap:xref>. REST messaging supports both the text and binary bytes message formats.</p>
  </body>
</html>
