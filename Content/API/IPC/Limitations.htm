<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    </head>
  <body>
    <h1>Limitations</h1>
    <p>IPC has the following limitations:</p>
    <ul>
      <li>Only Direct messaging is supported; Guaranteed messaging is not supported over IPC connections.</li>
      <li>Applications communicating over shared memory must have the same memory architectureâ€”that is, 32-bit applications can only communicate over shared memory with other 32-bit applications, and 64-bit applications with other 64-bit applications.</li>
      <li>For <MadCap:variable name="Variables.Appliance Release Version"/> , there is no security model for IPC; incoming IPC connections are accepted without a security check of the connecting peer.</li>
      <li>There is no explicit support for Message VPNs, as there is when connecting to a Solace PubSub+ event broker through a session. Applications can form pseudo Messaging VPNs by simply controlling which other applications they choose to connect to, but there is no explicit Message VPN checks for incoming connections.</li>
      <li>There is no support for Access Control Lists (ACL) functionality as there is when connecting to an event broker through a session.</li>
      <li>IPC connections between applications use unsecured TCP connections. However, the connection between an event broker and a SolGateway application, which enables IPC applications running on a host to communicate with an event broker and interact with other Solace PubSub+ applications, can optionally use Transport Layer Security (TLS)/ Secure Sockets Layer (SSL) protocols to encrypt the Solace Message Format (SMF) data that is exchanged. In this case, the SMF data is transported using TLS/SSL over TCP instead of plain text over TCP.</li>
    </ul>
  </body>
</html>
