<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1><![CDATA[
            ]]><a name="IPC_Overview"/>IPC Guide</h1>
    <p>This section provides an introduction to the Inter-Process Communications (IPC) capabilities of the Solace messaging APIs for C (<i>SolClient</i>) and Java RTO (<i>solclientj</i>). IPC allows applications to communicate directly with each other and to communicate with Solace PubSub+.</p>
    <p>IPC functionality is available as part of the IPC add-on to the C messaging API. It is distributed separately from the standard package for the C API and is dependent on the standard package. For more information, refer to <code>READMEâ€‘IPC.txt</code> included with the distributed C API package.</p>
    <p>For Java RTO, IPC functionality is distributed in a separate Java RTO API package which includes both the Java RTO API and the IPC feature.</p>
    <p>The primary use-case for the IPC capability is to facilitate communications between applications co-residing on a host. Instead of communicating through connections to a Solace PubSub+ event broker, the applications can establish direct communication channels to each other. Typically, this is done to achieve ultra-low latency communications among the applications, or to reduce the bandwidth used by the applications on both the host and the event broker.</p>
  </body>
</html>
