<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.HideFromAllOutput">
  <head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <meta name="description" content="Find code samples, open source projects and tools that should help you make the most of Solace PubSub+."/>
    <meta name="keywords" content="code, labs, codelabs, open source, GitHub, PubSub, PubSub+, integration guides, "/>
    <meta name="author" content="Solace Corporation"/>
  </head>
  <body>
    <h1>Spring Boot Auto-Configuration for the JCSMP</h1>
    <p>This project provides a Spring Boot Auto-Configuration implementation and a Spring Boot Starter pom for the <MadCap:variable name="Variables.CompanyName"/> JCSMP API. The goal of this project is to make it easier to use the <MadCap:variable name="Variables.CompanyName"/> the JCSMP API with Spring Boot auto-configuration through the @Autowired annotation. This project is used internally within <MadCap:variable name="Variables.CompanyName"/> to enable Spring Boot applications and as such it will be maintained and updated as our internal needs require.</p>
    <p>The artifacts are published to Maven Central so it should be familiar and intuitive to use this project in your applications. If you find the JCSMP  properties that this project does not yet support, simply raise an issue and we’ll look into adding this support, or you can submit a pull request with the update.</p>
    <p>One item to note as described below is that this project introduces a new factory for <MadCap:variable name="Variables.CompanyName"/> JCSMP sessions: <code>SpringJCSMPFactory</code>. Over time the JCSMP  may introduce a similar factory and remove the need for this custom extension. For now, this is included in the auto-configuration jar for ease of use.</p>
    <h4>Use Spring Initializr to Bootstrap your Solace Java Spring Boot Project</h4>
    <p>Spring Initializr generates your Spring Boot project skeleton for you based on a few simple choices, such as your preferred language, Spring Boot version, and the dependencies you need to build your microservice. Make sure to choose the <MadCap:variable name="Variables.CompanyName"/> dependency!</p>
    <p><b>Try it out</b>: <a href="https://start.spring.io/#!dependencies=solace" class="link-offsite" target="_blank">https://start.spring.io/#!dependencies=solace</a></p>
    <h3>Source Code</h3>
    <div class="row">
      <div class="col-lg col-md col-sm">
        <div class="source-code">
          <p>Repo <img src="../../Resources/Images/github-icon.png" alt=""/> </p>
          <ul>
            <li>
              <a href="https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-java-spring-boot-starter" target="_blank">SolaceProducts/solace-spring-boot/solace-spring-boot-starters/solace-java-spring-boot-starter</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </body>
</html>
