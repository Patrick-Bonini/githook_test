<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title></title>
        <link href="../../Resources/Stylesheets/mqtt_311_prtcl.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 class="Heading1">2 MQTT Control Packet format</h1>
        <p MadCap:conditions="Default.HideFromAllOutput"><b>***NOTE&#160;TO&#160;WRITERS:</b> Highlighted content in this topic is that way on purpose. It is intended to show differences in this spec of MQTT. Do not remove the spans.</p>
        <h2 class="Heading2"><a name="_Toc430864883"></a>2.1 Structure of an MQTT Control Packet</h2>
        <p>The MQTT protocol works by exchanging a series of MQTT Control Packets in a defined way. This section describes the format of these packets.</p>
        <p>An MQTT Control Packet consists of up to three parts, always in the following order as illustrated in <a href="#_Figure_2.1_-">Figure 2.1 - Structure of an MQTT Control Packet</a>.</p>
        <p class="GraphicCaptionWord"><a name="_Figure_2.1_-"></a>Figure 2.1 – Structure of an MQTT Control Packet</p>
        <table class="table_1">
            <col style="width: 482pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_6">Fixed header, present in all MQTT Control Packets</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p class="p_6">Variable header, present in some MQTT Control Packets</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p class="p_6">Payload, present in some MQTT Control Packets</p>
                </td>
            </tr>
        </table>
        <h2 class="Heading2"><a name="_Toc430864884"></a>2.2 Fixed header</h2>
        <p>Each MQTT Control Packet contains a fixed header. <a href="#_Figure_2.2_-" class="selected"><span class="Hyperlink">Figure 2.2 - Fixed header format</span></a> illustrates the fixed header format.</p>
        <p class="GraphicCaptionWord"><a name="_Figure_2.2_-"></a>Figure 2.2 - Fixed header format</p>
        <table class="table_1">
            <col style="width: 80pt;" />
            <col style="width: 52pt;" />
            <col style="width: 45pt;" />
            <col style="width: 45pt;" />
            <col style="width: 54pt;" />
            <col style="width: 54pt;" />
            <col style="width: 54pt;" />
            <col style="width: 45pt;" />
            <col style="width: 50pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_5">Bit</p>
                </td>
                <td class="td_2">
                    <p class="p_5">7</p>
                </td>
                <td class="td_2">
                    <p class="p_5">6</p>
                </td>
                <td class="td_2">
                    <p class="p_5">5</p>
                </td>
                <td class="td_2">
                    <p class="p_5">4</p>
                </td>
                <td class="td_2">
                    <p class="p_5">3</p>
                </td>
                <td class="td_2">
                    <p class="p_5">2</p>
                </td>
                <td class="td_2">
                    <p class="p_5">1</p>
                </td>
                <td class="td_2">
                    <p class="p_5">0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>byte 1</p>
                </td>
                <td colspan="4" class="td_4">
                    <p class="p_6">MQTT Control Packet type</p>
                </td>
                <td colspan="4" class="td_4">
                    <p class="p_6">Flags specific to each MQTT Control Packet type</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>byte 2…</p>
                </td>
                <td colspan="8" class="td_4">
                    <p class="p_6">Remaining Length</p>
                </td>
            </tr>
        </table>
        <h3 class="Heading3"><a name="_Toc430864885"></a>2.2.1 MQTT Control Packet type</h3>
        <p>Represented as a 4-bit unsigned value, the values are listed in <a href="#_Table_2.1_-"><span class="Hyperlink">Table 2.1 - Control packet types</span></a>.</p>
        <h5 class="Heading5"><a name="_Table_2.1_-"></a><a name="_Toc430865019"></a><span class="span_18">Table 2.1 - Control packet types</span>
        </h5>
        <table class="table_1">
            <col style="width: 83pt;" />
            <col style="width: 74pt;" />
            <col style="width: 81pt;" />
            <col style="width: 239pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_5">Name</p>
                </td>
                <td class="td_2">
                    <p class="p_5">Value</p>
                </td>
                <td class="td_2">
                    <p class="p_5">Direction of flow</p>
                </td>
                <td class="td_2">
                    <p class="p_5">Description</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p class="p_6">0</p>
                </td>
                <td class="td_2">
                    <p>Forbidden</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>CONNECT</p>
                </td>
                <td class="td_4">
                    <p class="p_6">1</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                </td>
                <td class="td_4">
                    <p>Client request to connect to Server</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>CONNACK</p>
                </td>
                <td class="td_4">
                    <p class="p_6">2</p>
                </td>
                <td class="td_2">
                    <p>Server to Client</p>
                </td>
                <td class="td_4">
                    <p>Connect acknowledgment</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBLISH</p>
                </td>
                <td class="td_4">
                    <p class="p_6">3</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                    <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; or</p>
                    <p>Server to Client</p>
                </td>
                <td class="td_4">
                    <p>Publish message</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBACK</p>
                </td>
                <td class="td_4">
                    <p class="p_6">4</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                    <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; or</p>
                    <p>Server to Client </p>
                </td>
                <td class="td_4">
                    <p>Publish acknowledgment</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREC</p>
                </td>
                <td class="td_4">
                    <p class="p_6">5</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                    <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; or</p>
                    <p>Server to Client </p>
                </td>
                <td class="td_4">
                    <p>Publish received (assured delivery part 1)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREL</p>
                </td>
                <td class="td_4">
                    <p class="p_6">6</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                    <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; or</p>
                    <p>Server to Client </p>
                </td>
                <td class="td_4">
                    <p>Publish release (assured delivery part 2)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBCOMP</p>
                </td>
                <td class="td_4">
                    <p class="p_6">7</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                    <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; or</p>
                    <p>Server to Client </p>
                </td>
                <td class="td_4">
                    <p>Publish complete (assured delivery part 3)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p class="p_6">8</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                </td>
                <td class="td_4">
                    <p>Client subscribe request</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBACK</p>
                </td>
                <td class="td_4">
                    <p class="p_6">9</p>
                </td>
                <td class="td_2">
                    <p>Server to Client</p>
                </td>
                <td class="td_4">
                    <p>Subscribe acknowledgment</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p class="p_6">10</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                </td>
                <td class="td_4">
                    <p>Unsubscribe request</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBACK</p>
                </td>
                <td class="td_4">
                    <p class="p_6">11</p>
                </td>
                <td class="td_2">
                    <p>Server to Client</p>
                </td>
                <td class="td_4">
                    <p>Unsubscribe acknowledgment</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGREQ</p>
                </td>
                <td class="td_4">
                    <p class="p_6">12</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                </td>
                <td class="td_4">
                    <p>PING request</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGRESP</p>
                </td>
                <td class="td_4">
                    <p class="p_6">13</p>
                </td>
                <td class="td_2">
                    <p>Server to Client</p>
                </td>
                <td class="td_4">
                    <p>PING response</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>DISCONNECT</p>
                </td>
                <td class="td_4">
                    <p class="p_6">14</p>
                </td>
                <td class="td_2">
                    <p>Client to Server</p>
                </td>
                <td class="td_4">
                    <p>Client is disconnecting</p>
                </td>
            </tr>
            <tr style="height: 3pt;">
                <td class="td_3">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p class="p_6">15</p>
                </td>
                <td class="td_2">
                    <p>Forbidden</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
            </tr>
        </table>
        <h3 class="Heading3"><a name="_Toc430864886"></a>2.2 Flags</h3>
        <p>The remaining bits [3-0] of byte 1 in the fixed header contain flags specific to each MQTT Control Packet type as listed in the <a href="#_Table_2.2_-" class="selected"><span class="Hyperlink">Table 2.2 - Flag Bits</span></a> below. <span class="span_17">Where a flag bit is marked as “Reserved” in Table 2.2 - Flag Bits, it is reserved for future use and MUST be set to the value listed in that table</span> <span class="span_14">[MQTT-2.</span><span class="span_14">2</span><span class="span_14">.2-1]</span>. <span class="span_17">If invalid flags are received, the receiver MUST close the Network Connection [MQTT-2.</span><span class="span_14">2</span><span class="span_14">.2-</span><span class="span_14">2</span><span class="span_14">]</span><span class="span_4">.</span> <span class="span_4">See Section </span><a href="Operational_behavior.htm#_Ref381955543" class="ParaTextOnly MCXref xref xrefParaTextOnly">4.8 Handling errors </a><span class="span_4"> for details about handling errors.</span></p>
        <h5 class="Heading5"><a name="_Table_2.2_-"></a>Table 2.2 - Flag Bits</h5>
        <table class="table_2">
            <col style="width: 91pt;" />
            <col style="width: 113pt;" />
            <col style="width: 36pt;" />
            <col style="width: 36pt;" />
            <col style="width: 36pt;" />
            <col style="width: 54pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_5">Control Packet</p>
                </td>
                <td class="td_2">
                    <p class="p_5">Fixed header flags</p>
                </td>
                <td class="td_2">
                    <p class="p_6"><span class="Refterm">Bit 3</span>
                    </p>
                </td>
                <td class="td_2">
                    <p class="p_5">Bit 2</p>
                </td>
                <td class="td_2">
                    <p class="p_5">Bit 1</p>
                </td>
                <td class="td_2">
                    <p class="p_5">Bit 0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>CONNECT</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>CONNACK</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBLISH</p>
                </td>
                <td class="td_4">
                    <p>Used in MQTT 3.1.1</p>
                </td>
                <td class="td_4">
                    <p>DUP<sup>1</sup></p>
                </td>
                <td class="td_4">
                    <p>QoS<sup>2</sup></p>
                </td>
                <td class="td_4">
                    <p>QoS<sup>2</sup></p>
                </td>
                <td class="td_4">
                    <p>RETAIN<sup>3</sup></p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBACK</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREC</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREL</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_7">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>1</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBCOMP</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>1</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBACK</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>1</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBACK</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGREQ</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGRESP</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>DISCONNECT</p>
                </td>
                <td class="td_4">
                    <p>Reserved</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
                <td class="td_4">
                    <p>0</p>
                </td>
            </tr>
        </table>
        <p>&#160;</p>
        <p>DUP<sup>1</sup>&#160;&#160;= Duplicate delivery of a PUBLISH Control Packet</p>
        <p>QoS<sup>2</sup>&#160; = PUBLISH Quality of Service</p>
        <p>RETAIN<sup>3</sup> = PUBLISH Retain flag </p>
        <p>See Section <MadCap:xref href="MQTT Control Packets.htm#_Ref384201650" class="ParaTextOnly">3.3.1 Fixed header</MadCap:xref> for a description of the DUP, QoS, and RETAIN flags in the PUBLISH Control Packet.</p>
        <h3 class="Heading3"><a name="_Ref355703004"></a><a name="_Toc430864887"></a>2.2.3 Remaining Length</h3>
        <p><b>Position</b>: starts at byte 2.</p>
        <p>The Remaining Length is the number of bytes remaining within the current packet, including data in the variable header and the payload. The Remaining Length does not include the bytes used to encode the Remaining Length.</p>
        <p>The Remaining Length is encoded using a variable length encoding scheme which uses a single byte for values up to 127. Larger values are handled as follows. The least significant seven bits of each byte encode the data, and the most significant bit is used to indicate that there are following bytes in the representation. Thus each byte encodes 128 values and a "continuation bit". The maximum number of bytes in the Remaining Length field is four.</p>
        <p class="p_9">Non normative comment</p>
        <p class="p_10">For example, the number 64 decimal is encoded as a single byte, decimal value 64, hexadecimal 0x40. The number 321 decimal (= 65 + 2*128) is encoded as two bytes, least significant first. The first byte is 65+128 = 193. Note that the top bit is set to indicate at least one following byte. The second byte is 2.</p>
        <p class="p_9">Non normative comment</p>
        <p class="p_10">This allows applications to send Control Packets of size up to 268,435,455 (256 MB). The representation of this number on the wire is: 0xFF, 0xFF, 0xFF, 0x7F. </p>
        <div class="div_2">
            <p><span class="span_3">Solace Implementation Note</span>
            </p>
            <p>Solace has limits to the size of a message, depending on the message QoS and the type of event broker.</p>
        </div>
        <p class="p_10"><a href="#_Table_2.4_Size" class="Hyperlink">Table 2.4</a> shows the Remaining Length values represented by increasing numbers of bytes.</p>
        <p class="TblCaptionWord"><a name="_Table_2.4_Size"></a>Table 2.4 Size of Remaining Length field</p>
        <table class="table_1">
            <col style="width: 46pt;" />
            <col style="width: 180pt;" />
            <col style="width: 189pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_5">Digits</p>
                </td>
                <td class="td_2">
                    <p class="p_5">From</p>
                </td>
                <td class="td_2">
                    <p class="p_5">To</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p class="p_6">1</p>
                </td>
                <td class="td_4">
                    <p class="p_8">0 (0x00)</p>
                </td>
                <td class="td_4">
                    <p class="p_8">127 (0x7F)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p class="p_6">2</p>
                </td>
                <td class="td_4">
                    <p class="p_8">128 (0x80, 0x01)</p>
                </td>
                <td class="td_4">
                    <p class="p_8">16 383 (0xFF, 0x7F)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p class="p_6">3</p>
                </td>
                <td class="td_4">
                    <p class="p_8">16 384 (0x80, 0x80, 0x01)</p>
                </td>
                <td class="td_4">
                    <p class="p_8">2 097 151 (0xFF, 0xFF, 0x7F)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p class="p_6">4</p>
                </td>
                <td class="td_4">
                    <p class="p_8">2 097 152 (0x80, 0x80, 0x80, 0x01)</p>
                </td>
                <td class="td_4">
                    <p class="p_8">268 435 455 (0xFF, 0xFF, 0xFF, 0x7F)</p>
                </td>
            </tr>
        </table>
        <p class="p_9">Non normative comment</p>
        <p class="p_10">The algorithm for encoding a non negative integer (X) into the variable length encoding scheme is as follows:</p>
        <p class="p_10"><span class="span_2">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </span><span class="span_19">do</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; encodedByte = X MOD 128</span>
        </p>
        <p class="p_11">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; X = X DIV 128</p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; // if there are more data to encode, set the top bit of this byte</span>
        </p>
        <p class="p_11">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if ( X &gt; 0 )</p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; encodedByte = encodedByte OR 128</span>
        </p>
        <p class="p_11">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; endif</p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; 'output' encodedByte</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160; while ( X&gt; 0 )</span>
        </p>
        <p class="p_10">&#160;</p>
        <p class="p_10">Where <span class="span_19">MOD</span> is the modulo operator (<span class="span_19">%</span> in C), <span class="span_19">DIV</span> is integer division (<span class="span_19">/ </span>in C), and <span class="span_19">OR</span> is bit-wise or (<span class="span_19">|</span> in C).</p>
        <p class="p_9">Non normative comment</p>
        <p class="p_10">The algorithm for decoding the Remaining Length field is as follows:</p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160; multiplier = 1</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160; value = 0</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160; do</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; encodedByte  = 'next  byte  from stream'</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; value += ( encodedByte  AND 127) * multiplier</span>
        </p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  multiplier *= 128</span>
        </p>
        <p class="p_11">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (multiplier &gt; 128*128*128)</p>
        <p class="p_11">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; throw Error(Malformed Remaining Length)</p>
        <p class="p_10"><span class="span_19">&#160;&#160;&#160;&#160;&#160;&#160;  while (( encodedByte  AND 128) != 0)</span>
        </p>
        <p class="p_10">&#160;</p>
        <p class="p_10">where <span class="span_19">AND</span> is the bit-wise and operator (<span class="span_19">&amp;</span> in C).</p>
        <p class="p_10">&#160;</p>
        <p class="p_10">When this algorithm terminates, <span class="span_19">value</span> contains the Remaining Length value.</p>
        <h2 class="Heading2"><a name="_Toc430864888"></a>2.3 Variable header</h2>
        <p>Some types of MQTT Control Packets contain a variable header component. It resides between the fixed header and the payload. The content of the variable header varies depending on the Packet type. The Packet Identifier field of variable header is common in several packet types.</p>
        <h3 class="Heading3"><a name="_Ref363041167"></a><a name="_Toc430864889"></a>2.3.1 Packet Identifier</h3>
        <p class="GraphicCaptionWord"><a name="_Toc430865026"></a>Figure 2.3 - Packet Identifier bytes</p>
        <table class="table_1">
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <col style="width: 53pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_5">Bit</p>
                </td>
                <td class="td_2">
                    <p class="p_5">7</p>
                </td>
                <td class="td_2">
                    <p class="p_5">6</p>
                </td>
                <td class="td_2">
                    <p class="p_5">5</p>
                </td>
                <td class="td_2">
                    <p class="p_5">4</p>
                </td>
                <td class="td_2">
                    <p class="p_5">3</p>
                </td>
                <td class="td_2">
                    <p class="p_5">2</p>
                </td>
                <td class="td_2">
                    <p class="p_5">1</p>
                </td>
                <td class="td_2">
                    <p class="p_5">0</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>byte 1</p>
                </td>
                <td colspan="8" class="td_4">
                    <p class="p_6">Packet Identifier MSB</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>byte 2</p>
                </td>
                <td colspan="8" class="td_4">
                    <p class="p_6">Packet Identifier LSB</p>
                </td>
            </tr>
        </table>
        <p>The variable header component of many of the Control Packet types includes a 2 byte Packet Identifier field. These Control Packets are PUBLISH (where QoS &gt; 0), PUBACK, PUBREC, PUBREL, PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK.</p>
        <p><span class="span_17">SUBSCRIBE, UNSUBSCRIBE, and PUBLISH (in cases where QoS &gt; 0) Control Packets MUST contain a non-zero 16-bit Packet Id entifier <span class="span_14">[MQTT-2.3.1-1]</span>. Each time a Client sends a new packet of one of these types it MUST assign it a currently unused Packet Identifier <span class="span_14">[MQTT-2.3.1-2]</span>. If a Client re-sends a particular Control Packet, then it MUST use the same Packet Identifier in subsequent re-sends of that packet. The Packet Identifier becomes available for reuse after the Client has processed the corresponding acknowledgement packet. In the case of a QoS 1 PUBLISH this is the corresponding PUBACK; in the case of QoS 2 it is PUBCOMP. For SUBSCRIBE or UNSUBSCRIBE it is the corresponding SUBACK or UNSUBACK <span class="span_14">[MQTT-2.3.1-3]</span>. The same conditions apply to a Server when it sends a PUBLISH with QoS &gt; 0 <span class="span_14">[MQTT-2.3.1-4]</span>.</span>
        </p>
        <p><span class="span_17">A PUBLISH Packet MUST NOT contain a Packet Identifier if its QoS value is set to 0</span> <span class="span_14">[MQTT-2.3.1-5]</span>.</p>
        <p><span class="span_17">A PUBACK, PUBREC or PUBREL Packet MUST contain the same Packet Identifier as the PUBLISH Packet that was originally sent <span class="span_14">[MQTT-2.3.1-6]</span>. Similarly SUBACK and UNSUBACK MUST contain the Packet Id entifier that was used in the corresponding SUBSCRIBE and UNSUBSCRIBE Packet respectively <span class="span_14">[MQTT-2.3&gt;.1-7]</span>.</span>
        </p>
        <p>Control Packets that require a Packet Identifier are listed in <a href="#_Table_2.5_-"><span class="Hyperlink">Table 2.5 - Control Packets that contain a Packet Identifier</span></a>.</p>
        <p class="GraphicCaptionWord"><a name="_Table_2.5_-"></a>Table 2.5 - Control Packets that contain a Packet Identifier</p>
        <table class="table_2">
            <col style="width: 93pt;" />
            <col style="width: 128pt;" />
            <tr>
                <td class="td_1">
                    <p class="p_6"><span class="Refterm">Control Packet</span>
                    </p>
                </td>
                <td class="td_2">
                    <p class="p_5">Packet Identifier field</p>
                </td>
            </tr>
            <tr style="height: 17pt;">
                <td class="td_3">
                    <p>CONNECT</p>
                </td>
                <td class="td_4">
                    <p>NO</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>CONNACK</p>
                </td>
                <td class="td_4">
                    <p>NO</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBLISH</p>
                </td>
                <td class="td_4">
                    <p>YES (If QoS &gt; 0)</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBACK</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREC</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREL</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBCOMP</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBACK</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBACK</p>
                </td>
                <td class="td_4">
                    <p>YES</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGREQ</p>
                </td>
                <td class="td_4">
                    <p>NO</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGRESP</p>
                </td>
                <td class="td_4">
                    <p>NO</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>DISCONNECT</p>
                </td>
                <td class="td_4">
                    <p>NO</p>
                </td>
            </tr>
        </table>
        <p>The Client and Server assign Packet Identifiers independently of each other. As a result, Client Server pairs can participate in concurrent message exchanges using the same Packet Identifiers. </p>
        <p class="p_12"><span class="Refterm">Non normative comment</span>
        </p>
        <p class="p_12">It is possible for a Client to send a PUBLISH Packet with Packet Identifier 0x1234 and then receive a different PUBLISH with Packet Identifier 0x1234 from its Server before it receives a PUBACK for the PUBLISH that it sent.</p>
        <div class="div_3">
            <p class="Code_1">&#160;&#160; Client&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Server</p>
            <p class="Code_1">&#160;&#160; PUBLISH Packet Identifier=0x1234---<span class="span_20">à</span></p>
            <p class="Code_1">&#160;&#160; <span class="span_20">ß</span>--PUBLISH Packet Identifier=0x1234</p>
            <p class="Code_1">&#160;&#160; PUBACK Packet Identifier=0x1234---<span class="span_20">à</span></p>
            <p class="Code_1">&#160;&#160; <span class="span_20">ß</span>--PUBACK Packet Identifier=0x1234</p>
        </div>
        <h2 class="Heading2"><a name="_Toc430864890"></a>2.4 Payload</h2>
        <p class="GraphicCaptionWord"><a name="_Table_2.6_-"></a>Table 2.6 - Control Packets that contain a Payload</p>
        <p>Some MQTT Control Packets contain a payload as the final part of the packet, as described in Chapter <MadCap:xref href="MQTT Control Packets.htm" class="ParaTextOnly">3 MQTT Control Packets</MadCap:xref>. In the case of the PUBLISH packet this is the Application Message. <a href="#_Table_2.6_-"><span class="Hyperlink">Table 2.6 - Control Packets that contain a Payload</span></a> lists the Control Packets that require a Payload.</p>
        <p class="GraphicCaptionWord"><a name="_Table_2.6_-"></a><a name="_Toc430865029"></a>Table 2.6 - Control Packets that contain a Payload</p>
        <table class="table_2">
            <col style="width: 93pt;" />
            <col style="width: 79pt;" />
            <tr>
                <td class="td_1">
                    <p style="font-weight: bold;">Control Packet</p>
                </td>
                <td class="td_2">
                    <p style="font-weight: bold;">Payload
                    </p>
                </td>
            </tr>
            <tr style="height: 17pt;">
                <td class="td_3">
                    <p>CONNECT</p>
                </td>
                <td class="td_4">
                    <p>Required</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>CONNACK</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBLISH</p>
                </td>
                <td class="td_4">
                    <p>Optional</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBACK</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREC</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBREL</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PUBCOMP</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p>Required</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>SUBACK</p>
                </td>
                <td class="td_4">
                    <p>Required</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBSCRIBE</p>
                </td>
                <td class="td_4">
                    <p>Required</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>UNSUBACK</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGREQ</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>PINGRESP</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
            <tr>
                <td class="td_3">
                    <p>DISCONNECT</p>
                </td>
                <td class="td_4">
                    <p>None</p>
                </td>
            </tr>
        </table>
        <p>&#160;</p>
    </body>
</html>