<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1>Solace REST Example Code</h1>
    <p>The following sections provide some example code for sending and receiving REST messages.</p>
    <h2 class="with-rule"><a name="cURL">
            </a>Sending Messages to Solace Using CURL</h2>
    <p>Sending a message to a topic “a” (both commands are equivalent):</p>
    <p class="Code">curl -X POST -d "Hello World Topic" http://&lt;ip:port&gt;/a --header "Content-Type: text/plain"<br/>curl -X POST -d "Hello World Topic" http://&lt;ip:port&gt;/TOPIC/a --header "Content-Type: text/plain"</p>
    <p>Sending a message to a queue “Q/test”:</p>
    <p class="Code">curl -X POST -d "Hello World Queue" http://&lt;ip:port&gt;/QUEUE/Q/test --header "Content-Type: text/plain"</p>
    <p>Request/Reply to Solace on topic “rr” with timeout of 30 seconds and Solace Correlation ID 'x':</p>
    <p class="Code">curl -X POST -d "Hello World Request Reply" http://&lt;ip:port&gt;/TOPIC/rr --header "Solace-Reply-Wait-Time-In-ms:30000" --header "Solace-Correlation-ID:x"</p>
    <h2 class="with-rule"><a name="Send-JS">
            </a>Sending Messages to Solace Using JavaScript</h2>
    <p>The following is a sample of how to send a message to topic “a/b/c” using JavaScript and Node.js:</p>
    <p class="Code">var http = require('http');<br/> <br/>var userString = "Hello World JavaScript";<br/> <br/>var headers = {<br/>  'Content-Type': 'text/plain',<br/>  'Content-Length': userString.length<br/>};<br/> <br/>var options = {<br/>  host: '&lt;HOST&gt;',<br/>  port: &lt;PORT&gt;,<br/>  path: '/TOPIC/a/b/c',<br/>  method: 'POST',<br/>  headers: headers<br/>};<br/> <br/> <br/>// Setup the request.  The options parameter is<br/>// the object we defined above.<br/>var req = http.request(options, function(res) {<br/>  console.log('STATUS: ' + res.statusCode);<br/>  console.log('HEADERS: ' + JSON.stringify(res.headers));<br/>  res.setEncoding('utf8');<br/>  res.on('data', function (chunk) {<br/>    console.log('BODY: ' + chunk);<br/>  });<br/>});<br/> <br/>req.on('error', function(e) {<br/>  console.log('problem with request: ' + e.message);<br/>});<br/> <br/>req.write(userString);<br/>req.end();</p>
    <p class="Note" MadCap:autonum="&lt;b&gt;Note:  &lt;/b&gt;"><code>&lt;HOST&gt;</code> and <code>&lt;PORT&gt;</code> must be updated to point to the event broker.</p>
    <h2 class="with-rule"><a name="Receive-JS">
            </a>Receiving Messages from Solace Using JavaScript</h2>
    <p>The following code is a minimalist HTTP server that can be run using Node.js. It will respond to all incoming requests with 200 OK and “Hello World Response” as the body of the HTTP response.</p>
    <p class="Code">var http = require('http');<br/>http.createServer(function (req, res) {<br/>  res.writeHead(200, {'Content-Type': ‘text/plain'});<br/>  res.end('Hello World Response\n');<br/>}).listen(&lt;PORT&gt;, ‘&lt;HOST&gt;');<br/>console.log('Server running at http://&lt;HOST&gt;:&lt;PORT&gt;/');</p>
    <p>When configuring the queue binding to this server, you must use a valid path, for example “/”, for the POST request target.</p>
  </body>
</html>
