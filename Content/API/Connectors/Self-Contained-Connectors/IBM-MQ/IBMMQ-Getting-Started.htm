<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.ConnectorSpecific">
  <head>
    <link href="../../../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Getting Started With the <MadCap:variable name="Manifest-Products-Connectors.pubsub_self_contained_connector_for_IBM_MQ"/></h1>
    <p MadCap:conditions="Default.HideFromAllOutput">Writer's Note: Most of the content is the same, but there are blocks that indicate the specific connector. We've specified the parts in the connector with the Connector-specific condition. Please check closely. We could use generic content instead of the name, but since it's a Getting Started, we should be explicit. If only we had folder-specific variables like in DITA!</p>
    <p>Presuming you’re using the default <code>application.yml</code> file provided within the download, follow one of the quick starts below to connect a <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker and a <MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific"><MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> broker</MadCap:conditionalText>. The quick starts use default credentials as examples to get started with two workflows enabled, <b>workflow 0</b> and <b>workflow 1</b>.</p>
    <p> Where:</p>
    <ul>
      <li>
        <p><b>Workflow 0</b> consumes messages from the <MadCap:variable name="Variables.CompanyName"/> <MadCap:variable name="Product-Names.pubsub_brand_only"/> queue, <code>Solace/Queue/0</code> and publishes them to the  <MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific"><MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/></MadCap:conditionalText> topic, <code>topic</code>.</p>
      </li>
      <li>
        <p><b>Workflow 1</b> consumes messages from the<MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific"><MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> queue</MadCap:conditionalText>, <code>DEV.QUEUE.1</code>, and publishing them to the <MadCap:variable name="Variables.CompanyName"/> <MadCap:variable name="Product-Names.pubsub_brand_only"/> topic, <code>Solace/Topic/1</code>.</p>
      </li>
    </ul>
    <p>A workflow is the configuration of a flow of messages from a source to a target. The connector supports up to <MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific"> 20 individual, concurrent workflows </MadCap:conditionalText>per  instance.</p>
    <p class="Note">The connector does not provision queues that do not exist.</p>
    <p class="Note">The <MadCap:variable name="Manifest-Products-Connectors.pubsub_self_contained_connector_for_IBM_MQ_long"/>, version 1.0 only supports up to 10 individual, concurrent workflows per instance.</p>
    <h2>Prerequisites</h2>
    <ul>
      <li>
        <p>
          <a href="https://solace.com/products/event-broker/" target="_blank" class="link-offsite"><MadCap:variable name="Variables.CompanyName"/> <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker</a>
        </p>
        <ul>
          <li>
            <p>If you are using <MadCap:variable name="Manifest-Products-Connectors.pubsub_self_contained_connector_for_IBM_MQ"/> <MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific">version 2.3.0</MadCap:conditionalText> and later, you must use an  <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker running version 10.2.1 or later.</p>
          </li>
        </ul>
      </li>
      <li>
        <p>
          <a href="https://www.ibm.com/products/mq" class="link-offsite" MadCap:conditions="Default.ConnectorSpecific" target="_blank">IBM Messaging and Queuing (<MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/>) messaging system</a>
        </p>
        <ul>
          <li>
            <p>We have tested with the <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> versions with the following connector versions:</p>
            <ul>
              <li>1.1.0 : <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> version 9.3.2.0</li>
              <li>2.0.0, 2.1.0, 2.2.0: <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> version 9.3.4.0</li>
              <li>2.3.0 : <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> version 9.3.5.0</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>Quick Start Common Steps</h2>
    <p>These are the steps that are required to run all quick-start examples:</p>
    <ol start="1">
      <li>
        <p>Create a directory called <code>libs</code> in the same directory as the JAR file.</p>
      </li>
      <ul>
        <li>
          <p>For more information about this directory, see <MadCap:xref href="Adding-External-Libraries.htm">Adding External Libraries</MadCap:xref>. This directory may already exist</p>
        </li>
      </ul>
      <li>
        <p>Download the JAR files for the <MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific"><MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> client</MadCap:conditionalText> and all its dependencies to the <code>libs</code> directory. The JAR files are available from <a href="https://mvnrepository.com/artifact/com.ibm.mq/com.ibm.mq.allclient" class="link-offsite" MadCap:conditions="Default.ConnectorSpecific">https://mvnrepository.com/artifact/com.ibm.mq/com.ibm.mq.allclient</a>.</p>
      </li>
      <li>
        <p>Update the provided <code>samples/config/application.yml</code> with the values for your deployment.</p>
      </li>
    </ol>
    <h2><a name="Quick"/>Quick Start: Running the Connector Using Command Line</h2>
    <p>Run:</p>
    <pre xml:space="preserve">java -Dloader.path=libs/ -jar<MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific"> <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-package-name"/>-&lt;version&gt;.jar</MadCap:conditionalText> -- spring.config.additional-location=file:samples/config/</pre>
    <p>Where <code>&lt;version&gt;</code> is the version of the connector you are using, such as <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-latest-version"/>.</p>
    <p>By default, this command will detect any Spring Boot configuration files as per <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.files" target="_blank" class="link-offsite">Spring Boot's default location</a>. </p>
    <p MadCap:conditions="Default.ConnectorSpecific">For more info, see <a href="IBMMQ-Configuration.htm" target="_blank" class="link-internal">Configure Locations to Find Spring Property Files</a>.</p>
    <h2>Quick Start: Running the Connector Using the  <code>start.sh</code> script</h2>
    <MadCap:snippetBlock src="../../../../Resources/Snippets/API/Connectors/common/getting-started-generic-start-cmd-v2.0.0.flsnp"/>
    <p>The script shows you all errors at the same time:</p>
    <pre xml:space="preserve"> <MadCap:variable name="Manifest-Products-Connectors.pubsub_self_contained_connector_for_IBM_MQ_long" MadCap:conditions="Default.ConnectorSpecific"/> 

Connector startup failed:

Following folder doesn't exists on your filesystem:     'dummy_folder'
Following folder doesn't exists on your filesystem:     'dummy_folder'
Following file doesn't exists on your filesystem:       'dummy_file.jar'   </pre>
    <p>In situations where you have don't provide a parameter, the script runs with the predefined values as follows:</p>
    <p class="Note"><a name="name-of-this-connector-jar"/>The default name for the JAR file is <code MadCap:conditions="Default.ConnectorSpecific"><MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-package-name"/>-<MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-latest-version"/>.jar</code>.</p>
    <MadCap:snippetBlock src="../../../../Resources/Snippets/API/Connectors/common/getting-started-parameters-v2.0.0.flsnp"/>
    <p>The script also provides more help information from command line when you use the <code>-h</code> option. For more configuration examples of starting the connector together with <MadCap:variable name="Manifest-Products-Connectors.connector_manager_short"/>, see the examples provided in the <MadCap:variable name="Manifest-Products-Connectors.connector_manager_short"/> archive.</p>
    <h2>Quick Start: Running the connector as a Container</h2>
    <p>The following steps show how to use a sample docker compose file has been packaged for your convenience:</p>
    <ol start="1">
      <li>
        <p>Change to the docker directory:<br/></p>
        <pre xml:space="preserve">cd samples/docker </pre>
        <p>This directory contains both the <code>docker-compose.yml</code> file as well as a <code>.env</code> file that contains environment secrets required for the container’s health-check.</p>
      </li>
      <li>
        <p>Run the connector:<br/></p>
        <pre xml:space="preserve">docker-compose up -d</pre>
        <p>This sample docker compose file:</p>
        <ul>
          <li>
                        Exposes the connector’s <code>8090</code> web port to <code>8090</code> on the host.
                    </li>
          <li>
                        Connects  to a <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker and the  <MadCap:variable name="Manifest-Products-Connectors.connector-ibmmq-product-name"/> messaging system exposed on a host using default ports.
                    </li>
          <li>
                        Mounts the <code>samples/config</code> directory.
                    </li>
          <li>
                        Mounts the previously defined <code>libs</code> directory.
                    </li>
          <li>
                        Creates a <code>healthcheck</code> user with read-only permissions.
						<ul><li>The default username and password for this user can be found within the <code>.env</code> file.</li><li>This will override any users you have defined in your <code>application.yml</code>. See <MadCap:xref href="Security.htm">Security</MadCap:xref> for more information.</li></ul></li>
          <li>
                        Uses the connector’s management health endpoint as the container’s health check.
                    </li>
        </ul>
      </li>
    </ol>
    <p MadCap:conditions="Default.ConnectorSpecific">For more information about how to use and configure this container, see <MadCap:xref href="IBMMQ-container-configuration.htm">Modifying the Container Configuration</MadCap:xref>.</p>
    <p> </p>
  </body>
</html>
