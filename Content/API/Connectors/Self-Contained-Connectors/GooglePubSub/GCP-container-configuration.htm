<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.ConnectorSpecific">
  <head>
    <link href="../../../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Modifying the Container Configuration</h1>
    <MadCap:snippetBlock src="../../../../Resources/Snippets/API/Connectors/common/container-intro.flsnp"/>
    <h2>
      <a name="prerequisites"/>
      <MadCap:conditionalText MadCap:conditions="Default.ConnectorSpecific">Prerequisites</MadCap:conditionalText>
    </h2>
    <p>Using the <MadCap:variable name="Manifest-Products-Connectors.pubsub_self_contained_connector_for_google_pubsub"/>  with containers requires:</p>
    <ul>
      <li>
        <p><a href="https://www.docker.com/" target="_blank" class="link-offsite">Docker</a> or <a href="https://podman.io/" target="_parent" class="link-offsite">Podman</a></p>
      </li>
      <li>
        <p>
          <a href="https://solace.com/products/event-broker/" target="_blank" class="link-internal"><MadCap:variable name="Variables.CompanyName"/> <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker</a>
        </p>
      </li>
      <li MadCap:conditions="Default.ConnectorSpecific">
        <p>
          <a href="https://cloud.google.com/pubsub" class="link-offsite" target="_blank">
            <MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-product-name"/>
          </a>
        </p>
      </li>
    </ul>
    <h2><a name="overview-using"/>Getting Started Using Connectors With Containers</h2>
    <p>You can run the connector in a container with the minimal configuration. Optionally, you can specify <a href="#connecting-to-services-on-host" class="link-internal">connecter services on the host</a> or a <a href="#configure-healthcheck" class="link-internal">health check</a>. Perform the following steps to start the connector with a minimal configuration in a container:</p>
    <ol>
      <li>
        <p>Create a directory called <code>config</code>.</p>
      </li>
      <li>
        <p>Create an <code>application.yml</code> or <code>application.properties</code> file in the <code>config</code> directory containing the properties needed for your connector. For an example of an configuration file, see the <code>samples/config</code> directory in the archive (ZIP) file you downloaded for this connector.</p>
      </li>
      <li>
        <p>The <a href="https://cloud.google.com/docs/authentication/application-default-credentials#personal" class="link-offsite">Application Default Credentials (ADC) by Using the Google Cloud CLI</a> has been setup, and <code>application_default_credentials.json</code> is in the default location.</p>
      </li>
      <li>
        <p>Set the <code>spring.cloud.gcp.credentials.location</code> property in <code>application.yml</code> or <code>application.properties</code> to <code>/app/external/gcp/config/application_default_credentials.json</code>.</p>
      </li>
      <li>
        <p>Run the container with minimal configuration as follows:</p>
        <p>In Docker, use the following command:</p>
        <pre MadCap:conditions="Default.ConnectorSpecific" xml:space="preserve">docker run -d --name my-connector \
-v `pwd`/libs/:/app/external/libs/:ro \
-v `pwd`/config/:/app/external/spring/config/:ro \
-v
$HOME/.config/gcloud/application_default_credentials.json:/app/external/gcp/config/
application_default_credentials.json:ro \
solace/<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-package-name-docker"/>:&lt;version&gt;</pre>
        <p>In Podman, use the following command:</p>
        <pre xml:space="preserve" MadCap:conditions="Default.ConnectorSpecific">podman run -d --name my-connector \
-v `pwd`/libs/:/app/external/libs/:ro \
-v `pwd`/config/:/app/external/spring/config/:ro \
-v
$HOME/.config/gcloud/application_default_credentials.json:/app/external/gcp/config/
application_default_credentials.json:ro \
solace/<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-package-name-docker"/>:&lt;version&gt;</pre>
      </li>
    </ol>
    <p>Where <code>&lt;version&gt;</code> is the version of the connector you are using, such as <MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-latest-version" MadCap:conditions="Default.ConnectorSpecific"/>.</p>
    <div class="Note" MadCap:conditions="Default.ConnectorSpecific">
      <p>On Windows, the default location of <code>application_default_credentials.json</code> is
<code>%APPDATA%\gcloud\application_default_credentials.json</code>, so change the volume
mount accordingly.<br/>Presuming that the Google Cloud <code>application_default_credentials.json</code> is in the default
location, add a volume mount to all Docker or Podman commands in
reset of this document depending on your environment:</p>
      <ul>
        <li>
          <p>On Linux or MacOS:
<code>-v
$HOME/.config/gcloud/application_default_credentials.json:/app/external/gcp/con
fig/application_default_credentials.json:ro \</code></p>
        </li>
        <li>
          <p>On Windows:
<code>-v
%APPDATA%\gcloud\application_default_credentials.json:/app/external/gcp/config/
application_default_credentials.json:ro \</code></p>
        </li>
      </ul>
    </div>
    <h3><a name="connecting-to-services-on-host"/>Connecting to Services on the Host</h3>
    <p>If services (for example a  <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker) are exposed on the localhost, they can be referenced using the container platform’s special DNS name with <code>SOLACE_JAVA_HOST</code>, which resolves to an internal IP address that's used by the host.</p>
    <p>For example in Docker, use the following command:</p>
    <pre MadCap:conditions="Default.ConnectorSpecific">docker run -d --name my-connector \
-v `pwd`/libs/:/app/external/libs/:ro \
-v `pwd`/config/:/app/external/spring/config/:ro \
--env SOLACE_JAVA_HOST=host.docker.internal:55555 \
solace/<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-package-name-docker"/>:<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-latest-version"/></pre>
    <p>For example in Podman, use the following command:</p>
    <pre xml:space="preserve" MadCap:conditions="Default.ConnectorSpecific">podman run -d --name my-connector \
-v `pwd`/libs/:/app/external/libs/:ro \
-v `pwd`/config/:/app/external/spring/config/:ro \
--env SOLACE_JAVA_HOST=host.containers.internal:55555 \
solace/<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-package-name-docker"/>:<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-latest-version"/></pre>
    <h2><a name="configure-healthcheck"/>Configuring a Health Check</h2>
    <p>You can configure the health to  perform the following tasks:</p>
    <ul>
      <li>Create a regular read-only user called <code>healthcheck</code> with a password using <code>SOLACE_CONNECTOR_SECURITY_USERS_0_NAME</code> and <code>SOLACE_CONNECTOR_SECURITY_USERS_0_PASSWORD</code>.</li>
      <li>Use the <code>healthcheck</code> user as the user to poll the management health endpoint in the container’s <code>healthcheck</code> command and fails it if the connector is unhealthy.</li>
    </ul>
    <p>Here’s a basic example command of how to configure the health check for the container:</p>
    <p>For example in Docker, use the following command:</p>
    <pre MadCap:conditions="Default.ConnectorSpecific">docker run -d --name my-connector \
-v `pwd`/libs/:/app/external/libs/:ro \
-v `pwd`/application.yml:/app/external/spring/config/application.yml:ro \
--env SOLACE_CONNECTOR_SECURITY_USERS_0_NAME=healthcheck \
--env SOLACE_CONNECTOR_SECURITY_USERS_0_PASSWORD=healthcheck \
--healthcheck-command="curl -X GET -u healthcheck:healthcheck --fail
localhost:8090/actuator/health" \
solace/<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-package-name-docker"/>:<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-latest-version"/></pre>
    <p>For example in Podman, use the following command:</p>
    <pre xml:space="preserve" MadCap:conditions="Default.ConnectorSpecific">podman run -d --name my-connector \
-v `pwd`/libs/:/app/external/libs/:ro \
-v `pwd`/application.yml:/app/external/spring/config/application.yml:ro \
--env SOLACE_CONNECTOR_SECURITY_USERS_0_NAME=healthcheck \
--env SOLACE_CONNECTOR_SECURITY_USERS_0_PASSWORD=healthcheck \
--healthcheck-command="curl -X GET -u healthcheck:healthcheck --fail
localhost:8090/actuator/health" \
solace/<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-package-name-docker"/>:<MadCap:variable name="Manifest-Products-Connectors.connector-gcppubsub-latest-version"/></pre>
    <h2><a name="config-spring-configuration"/>Specifying Configuration Using Spring Configuration Properties</h2>
    <MadCap:snippetBlock src="../../../../Resources/Snippets/API/Connectors/common/containers-specifying-spring.flsnp"/>
  </body>
</html>
