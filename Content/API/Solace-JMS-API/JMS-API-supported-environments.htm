<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    </head>
  <body>
    <h1>Supported Environments</h1>
    <p>The <MadCap:variable name="Product-Names.pubsub_brand_only"/>  Messaging API for JMS  is compatible with any version of the Oracle JDK or OpenJDK   that is in active support and also has security update support. For information about the supported versions, see the <a href="https://www.oracle.com/java/technologies/java-se-support-roadmap.html" class="link-offsite">Oracle Java SE Support Roadmap</a>.</p>
    <p>As of version 10.20, the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS has a dependency on JMS 2.0. To understand:</p>
    <ul>
      <li>
        <p> the impacts of the JMS 2.0 dependencies on the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS API, see <MadCap:xref href="#Messagi2">[%=Product-Names.pubsub_brand_only%] Messaging API for JMS and JMS Spec 2.0</MadCap:xref></p>
      </li>
      <li>
        <p>how to support applications that require backwards compatibility with Geronimo JMS 1.1 or cannot use JMS 2.0, see <MadCap:xref href="#Support">Support for Geronimo JMS 1.1</MadCap:xref></p>
      </li>
      <li>
        <p>how to use the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS API with the <code>jakarta.jms</code> namespace, see <MadCap:xref href="#Messagi">[%=Product-Names.pubsub_brand_only%] Messaging API for Jakarta Messaging</MadCap:xref> </p>
      </li>
    </ul>
    <h2 class="with-rule"><a name="Messagi2"/><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS and JMS Spec 2.0</h2>
    <p> As of version 10.20, the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS is  dependent on JMS 2.0. This dependency allows for compatibility with current and future versions of JMS. <MadCap:variable name="Variables.CompanyName"/> does not currently provide implementation for  any methods or interfaces introduced in JMS 2.0. You must continue to use JMS 1.1 methods and interfaces in your applications. If you use Maven or Gradle when you build your application, it automatically downloads the Geronimo JMS 2.0 jar file and you do not need to make any other changes. If you do not use a build tool with dependency management, you need to manually add the Geronimo JMS 2.0 jar file to your project. You can download this file from Maven Central at <a href="https://mvnrepository.com/artifact/org.apache.geronimo.specs/geronimo-jms_2.0_spec" class="link-offsite">Apache Geronimo JMS Spec 2.0</a>.</p>
    <p class="Note">If you use the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS API with the Karaf framework versions 4.1 and earlier, you must put the <code>geronimo-jms_2.0_spec-1.0-alpha-2.jar</code> file in your <code>deploy</code> folder to load the JMS API.  If you use the Karaf framework (versions 4.2 and later), changes are not required in your <code>deploy</code> folder because it includes JMS 2.0.</p>
    <h2 class="with-rule"><a name="Support"/>Support for Geronimo JMS 1.1 </h2>
    <p>For version 10.20 and later, you need to use a <MadCap:variable name="Variables.CompanyName"/> JMS compatibility layer to allow backwards compatibility with applications that must include the Geronimo JMS 1.1 dependency (<code>geronimo-jms_1.1_spec</code>) or applications that cannot use JMS 2.0. If you build your project with Maven, you must add dependencies, see <MadCap:xref href="Building-JMS-Projects-With-Maven.htm"> Building JMS Projects with Maven</MadCap:xref>. If you do not use Maven, add the <MadCap:variable name="Variables.CompanyName"/> JMS compatibility layer (<code>sol-jms-compat-1.1</code>) into your project's <code>CLASSPATH</code>, which you can download from our Maven Central repository at <a href="https://mvnrepository.com/artifact/com.solacesystems/sol-jms-compat-1.1" class="link-offsite"><MadCap:variable name="Product-Names.pubsub_brand_only"/> Compatibility Layer For Apache Geronimo JMS Spec 1.1</a>.</p>
    <h2 class="with-rule"><a name="Messagi"/><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Jakarta Messaging</h2>
    <p>The <MadCap:variable name="Product-Names.pubsub_brand_only"/>  Messaging API for Jakarta Messaging, version <MadCap:variable name="Manifest-Products-APIs.SDK-JMS"/> supports the <code>jakarta.jms</code> API namespace. This enables your applications to take advantage of Spring version 6.0 features. For information about Spring version 6.0 see their documentation page at <a href="https://docs.spring.io/spring-framework/docs/6.0.0-M3/reference/html/" class="link-offsite">Spring Framework Documentation</a>. </p>
    <p>To use the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Jakarta Messaging:</p>
    <ol>
      <li>
        <p>Include the <code>sol-jms-jarkata</code> artifactID in the dependencies in your Maven project. This automatically uses version 3.1.0 of the Jakarta JMS API. You can also download the artifact from the Maven Central repository at <a href="https://mvnrepository.com/artifact/com.solacesystems/sol-jms-jakarta" class="link-offsite"><MadCap:variable name="Variables.CompanyName"/><MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API For Jakarta Messaging</a>.</p>
      </li>
      <li>
        <p>In your application's code, you need to replace all <code>import</code> statements that use <code>javax.jms.*</code> with <code>jakarta.jms.*</code>. </p>
        <ul>
          <li>
            <p>For example, change the incorrect statement of:</p>
            <pre xml:space="preserve">import javax.jms.Message;</pre>
          </li>
        </ul>
        <ul>
          <li>
            <p>To the correct import statement for the Jakarta JMS namespace:</p>
            <pre xml:space="preserve">
import jakarta.jms.Message;</pre>
          </li>
        </ul>
      </li>
      <li>
        <p>(Optional) To upgrade your application to use Spring Boot versions 3.0 and later, you also need to include the <MadCap:variable name="Variables.CompanyName"/> Spring Boot Starter as a dependency in your application. Adding this dependency automatically imports <code>sol-jms-jakarta</code>, and you can download the artifact here at <a href="https://mvnrepository.com/artifact/com.solace.spring.boot/solace-jms-spring-boot-starter" class="link-offsite">Solace Spring Boot Starter JMS</a>. For information about upgrading to Spring Boot version 3.0, see <a href="https://spring.io/blog/2022/05/24/preparing-for-spring-boot-3-0" class="link-offsite">Preparing for Spring Boot 3.0</a>. For a guide on how to use Spring Boot auto-configuration with the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS API, see <a href="https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-jms-spring-boot-starter" class="link-offsite">Spring Boot Auto-Configuration for the Solace JMS</a> on the <MadCap:variable name="Variables.CompanyName"/> GitHub page.</p>
      </li>
    </ol>
    <p class="Note">The <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Jakarta Messaging can not be used with Spring versions lower than 6.0.0 (or its release candidates) and Spring boot versions lower than 3.0.0 (or its release candidates).</p>
  </body>
</html>
