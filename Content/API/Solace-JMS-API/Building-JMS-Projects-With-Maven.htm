<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <title>Building JMS Projects with Maven</title>
  </head>
  <body>
    <h1>Building JMS Projects with Maven</h1>
    <p MadCap:conditions="Default.OnlyForPDF">
      <a href="https://products.solace.com/doc_draft/SW_DOC-3357/API/Solace-JMS-API/Building-JMS-Projects-With-Maven.htm" class="link-offsite">**Click me to see what this page looks like on docs_draft**</a>
    </p>
    <p>Apache Maven is a software management tool that can be used to build, install, and distribute Java-based projects. With Apache Maven, you can:</p>
    <ul>
      <li>obtain <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts from Maven Central</li>
      <li>install <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts in a local corporate Maven repository</li>
      <li>deploy <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts to remote repositories</li>
    </ul>
    <p>To build a project with Maven, the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS requires the following artifacts:</p>
    <ul>
      <li>sol-jms-10.x.x.jar—the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS libraries</li>
      <li>sol-jcsmp-10.x.x.jar—the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Java libraries</li>
      <li>solsuite-10.x.x.pom—<MadCap:variable name="Variables.CompanyName"/> API project configuration file</li>
      <li>sol-common-10.x.x.jar—<MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for Java utilities</li>
    </ul>
    <p MadCap:conditions="Default.HideFromAllOutput">To use the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS with Maven, you can:</p>
    <ul MadCap:conditions="Default.HideFromAllOutput">
      <li>obtain <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts from Maven Central</li>
      <li>install <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts in a local corporate Maven repository</li>
      <li>deploy<MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts to remote repositories</li>
    </ul>
    <h2 class="with-rule"><a name="Central"/>Obtaining Artifacts from Maven Central</h2>
    <p>To obtain the required Solace JMS artifacts for your project from the Maven Central Repository, you must declare the following dependency in your <code>pom.xml</code> file:</p>
    <p class="Code">&lt;dependency&gt;<br/> &lt;groupId&gt;com.solacesystems&lt;/groupId&gt;<br/> &lt;artifactId&gt;sol-jms&lt;/artifactId&gt;<br/> &lt;version&gt;<MadCap:variable name="Manifest-Products-APIs.SDK-JMS"/>.x&lt;/version&gt;<br/>&lt;/dependency&gt;</p>
    <h3>Using JMS 1.1 with the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS API</h3>
    <p>Some applications may need to continue to use the Geronimo 1.1 Spec if they have components that are dependent on version 1.1 of the JMS Specification. For versions 10.20 and later of the <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS, you need to use a compatibility layer to allow backwards compatibility with applications that have Geronimo JMS 1.1 dependencies (<code>geronimo-jms_1.1_spec</code>). You also need to exclude the Geronimo JMS 2.0 specifications to avoid conflicts. To achieve this, add the following to your <code>pom.xml</code> file:</p>
    <p>
      <pre xml:space="preserve">&lt;dependency&gt;
	&lt;groupId&gt;com.solacesystems&lt;/groupId&gt;
	&lt;artifactId&gt;sol-jms&lt;/artifactId&gt;
	&lt;version&gt;10.20.x&lt;/version&gt;
	&lt;exclusion&gt;
		&lt;groupId&gt;org.apache.geronimo.specs&lt;/groupId&gt;
		&lt;artifactId&gt;geronimo-jms_2.0_spec&lt;/artifactId&gt;
	&lt;/exclusion&gt;
&lt;/dependency&gt;
						
&lt;dependency&gt;
	&lt;groupId&gt;com.solacesystems&lt;/groupId&gt;
	&lt;artifactId&gt;sol-jms-compat-1.1&lt;/artifactId&gt;
	&lt;version&gt;1.0.0&lt;/version&gt;
&lt;/dependency&gt;		</pre>
      <br/>
    </p>
    <h2 class="with-rule"><a name="Install-Local"/>Installing Artifacts Locally</h2>
    <p>To use <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts as Maven dependencies, you must install the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS jar files and <code>pom.xml</code> files into your local repository.</p>
    <p>To install a jar or a <code>pom.xml</code> file locally, enter the following command in a terminal window:</p>
    <p class="Code">mvn install:install-file -Dfile=&lt;path-to-file&gt; -DpomFile=&lt;path-to-pomfile&gt; -Dmaven.repo.local=&lt;path-to-local-repository&gt;</p>
    <p>Example of installing a .jar:</p>
    <p class="Code">$ mvn install:install-file<br/>        -Dfile=/downloads/sol-jms/lib/sol-jms-10.x.x.jar<br/>         -DpomFile=/downloads/sol-jms/lib/sol-jms-10.x.x.pom<br/>         -Dmaven.repo.local=./.repository<br/>       $ ls /tmp/.repository/com/solace/sol-jms/10.x.x/<br/>       _remote.repositories  sol-jms-10.x.x.jar  sol-jms-10.x.x.pom</p>
    <p>Example of installing a <code>pom.xml</code> file:</p>
    <p class="Code">$ mvn install:install-file -Dfile=/downloads/sol-jms/lib/solsuite-10.x.x.pom 
  -DpomFile=/downloads/sol-jms/lib/solsuite-10.x.x.pom 
  -Dmaven.repo.local=./.repository</p>
    <h2 class="with-rule"><a name="Deploy-Remote"/>Deploying Artifacts to Remote Repositories</h2>
    <p>To use <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS artifacts as Maven dependencies, you must deploy the jar and <code>pom.xml</code> files to a remote Maven remote repository for your project.</p>
    <p>To deploy a jar or a <code>pom.xml</code> file to a Maven remote repository, enter the following command in a terminal window:</p>
    <p class="Code">mvn deploy:deploy-file<br/>  -Dfile=&lt;path-to-file&gt;<br/>  -DpomFile=&lt;path-to-pomfile&gt;<br/>  -DrepositoryId=release<br/>  -Durl=&lt;repository-url&gt;</p>
  </body>
</html>
