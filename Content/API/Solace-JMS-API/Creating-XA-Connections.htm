<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1>Creating XA Connections</h1>
    <p>To create an XA connection, a client must first acquire an <code>XAConnectionFactory</code>. It can then call <code>createXAConnection()</code> to create an <code>XAConnection</code> to the event broker.</p>
    <p>For information on how to programmatically create or to look up Connection Factories and how to establish connections, refer to <MadCap:xref href="Establishing-Connections.htm">Establishing Connections</MadCap:xref>.</p>
    <p>A <code>SolXAConnectionFactory</code> inherits attributes from <code>SolConnectionFactory</code>, therefore, to use XA transactions, you must set the following <code>SolConnectionFactory</code> attributes:</p>
    <ul>
      <li>The <code>direct-transport</code> transport property in the JNDI Connection Factory must be set to <code>false</code> so that a Guaranteed message delivery mode is used (refer to <MadCap:xref href="Message-Delivery-Propert.htm#jms_properties_39190069_303461">Direct Transport</MadCap:xref>). A Guaranteed message delivery mode must be used because only Guaranteed messages (that is, messages with Persistent or Non‑Persistent delivery modes) can be published or received through transactions; Direct messages cannot be used in XA transactions or local transactions.</li>
      <li>The <code>xa</code> JMS data connection property must be set to <code>true</code> to permit the Connection Factory to use XA transactions (refer to <MadCap:xref href="Data-Connection-Properti.htm#jms_properties_39190069_360759">XA</MadCap:xref>).</li>
    </ul>
    <h2 class="with-rule"><a name="using_xa_transactions_1775489719_296628"/>Creating XA Sessions</h2>
    <p>Once a client has established an XA connection to an event broker, it can create one or more XA Sessions.</p>
    <p>Within an XA Session, individual atomic transactions, also known as a transaction branches, can be created. Although an XA Session can contain multiple transaction branches (as identified by their unique Xids), only one transaction branch can active at a time in an XA Session. </p>
    <p>To create an XA Session, call <code>XASession.createXASession()</code>.</p>
    <p class="Note" MadCap:autonum="&lt;b&gt;Note:  &lt;/b&gt;"><code>XAResource.start(...)</code> can also be used to resume a suspended transaction.</p>
    <h2 class="with-rule"><a name="using_xa_transactions_1775489719_362821"/>Starting XA Transactions</h2>
    <p>Unlike Session-based transactions, once an XA Session is created, a transaction does not automatically begin within that XA Session. To start a transaction within an XA Session, a client must obtain the XAResource to be used by the XA Session and an Xid for the transaction. Then the <code>XAResource.start(...)</code> method can be invoked to start that particular transaction branch. (Typically, a Transaction Manager obtains an XAResource for each resource participating in a distributed or global transaction.) For more information, refer to <MadCap:xref href="Performing-XA-Transactio.htm">Performing XA Transaction Operations</MadCap:xref>.</p>
  </body>
</html>
