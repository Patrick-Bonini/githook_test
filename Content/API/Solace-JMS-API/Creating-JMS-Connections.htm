<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1>Creating JMS Connections</h1>
    <p>When the appropriate JMS property values are set, call one of the following methods to create a JMS connection:</p>
    <ul>
      <li><code>createConnection()</code>—creates a JMS connection with the client authentication credentials provided through the System, Initial Context, JNDI, URL, and/or Connection Factory property sources. </li>
      <li><code>createXAConnection()</code>—creates a JMS connection that supports XA Sessions with the client authentication credentials provided through the System, Initial Context, JNDI, URL, and/or Connection Factory property sources. </li>
      <li><code>createConnection(String username, String password)</code>—When using basic client authentication (the default), this method creates a JMS connection using an explicit username and password. The provided username and password overwrite any value that was implicitly set through other JMS property sources. </li>
      <li><code>createXAConnection(String username, String password)</code>—When using basic client authentication (the default), use this method to establish a JMS connection that supports XA Sessions using an explicit username and password. The provided username and password overwrite any value that was implicitly set through other JMS property sources. </li>
    </ul>
    <div class="Note" MadCap:autonum="&lt;b&gt;Note  &lt;/b&gt;">
      <ul>
        <li>If a Connection Factory or XAConnection Factory object is looked up from the event broker (refer to <MadCap:xref href="Establishing-Connections.htm#establishing_connections_577400906_336926">Working with JNDI</MadCap:xref>), the properties set for the JNDI connection are inherited by the subsequent JMS connection. A client can use these same JMS properties for the JMS connection or choose to override them with new values when making the JMS connection. For information on where each property can be specified, and the priority that is given to the property according to where it is specified, refer to <MadCap:xref href="JMS-Properties-Reference.htm">JMS Properties Reference</MadCap:xref>.</li>
        <li>By default, each JMS connection that is created uses its own processing context and thread. If you want each new connection to use the default context and its single processing thread, set the <code>InitialContext</code> environment property <code>SOLACE_JMS_USE_DEFAULT_CONTEXT</code> property to <code>true</code>.</li>
      </ul>
    </div>
    <h2 class="with-rule"><a name="establishing_connections_577400906_326063"/>Starting JMS Connections</h2>
    <p>To begin receiving messages over a JMS connection, the client application must call the <code>start()</code> method after the connection is established.</p>
    <h2 class="with-rule"><a name="establishing_connections_577400906_326065"/>Stopping or Closing JMS Connections</h2>
    <p>To stop or close a JMS connection, call one of the following methods:</p>
    <ul>
      <li><code>Connection.stop()</code>—Temporarily stops the delivery of incoming messages over the connection. When a connection is stopped, the delivery of messages to the connection’s consumers is inhibited: synchronous receives block, and messages are not delivered to message listeners. To restart the delivery of messages, call <code>Connection.start()</code>.
			<p>When using Guaranteed Transport, published Non-Persistent and Persistent messages are spooled for consumers when the connection is stopped; when the connection is restarted, the spooled messages are delivered. When using Direct Transport, the Non-Persistent messages are not spooled for consumers when the connection is stopped and they are discarded. </p></li>
      <li><code>Connection.close()</code>—Closes the connection. </li>
    </ul>
  </body>
</html>
