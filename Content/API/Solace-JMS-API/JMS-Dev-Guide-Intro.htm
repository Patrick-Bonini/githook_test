<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    </head>
  <body>
    <h1>Developer Guide for Solace JMS API
</h1>
    <p>The <MadCap:variable name="Product-Names.pubsub_brand_only"/> Messaging API for JMS uses the standard JMS interface to provide JMS service for Java-based applications through a <MadCap:variable name="Product-Names.pubsub_brand_only"/> event broker. For information about version support in the <MadCap:variable name="Product-Names.pubsub_brand_only"/> JMS API, see <MadCap:xref href="JMS-API-supported-environments.htm">Supported Environments</MadCap:xref>.</p>
    <p>To use the <MadCap:variable name="Variables.CompanyName"/> JMS implementation in a Java Platform, Enterprise Edition (Java EE) application server environment, you can deploy a <MadCap:variable name="Variables.CompanyName"/> provided, Java Connector Architecture (JCA) 1.5-compliant resource adapter for the particular Application Server platform being used to provide enterprise applications with connectivity to event brokers. <MadCap:variable name="Variables.CompanyName"/> currently provides a Resource Adapter for Red Hat JBoss EAP 6.2 and WebSphere Application Server  V8 (with Java 1.8 installed).</p>
    <h2 class="with-rule"><a name="JMS2"/>Using JMS</h2>
    <p>Solace Java Message Service (JMS) allows Java applications to access event brokers using the standard JMS API. JMS provides a common way for Java programs to create, send, receive, and read an enterprise messaging system's messages. For detailed information on JMS, see the <a href="http://download.oracle.com/otndocs/jcp/7195-jms-1.1-fr-spec-oth-JSpec/" class="link-internal">JMS specification</a>.</p>
    <p>Solace JMS is comprised of the following components:</p>
    <ul>
      <li>
        <u>Solace PubSub+ event broker network</u>
      </li>
      <p>The core of Solace JMS, the Solace PubSub+ network acts as the JMS provider. It provides message routing, selecting / filtering, and access control.</p>
      <li>
        <u>Java Naming and Directory Interface (JNDI) administration</u>
      </li>
      <p>The event broker provides clients with event broker binding and JNDI lookup service. Solace PubSub+ also supports JNDI lookups of administered objects maintained in an LDAP-based JNDI store on a remote host.</p>
      <li>
        <u>JMS API</u>
      </li>
      <p>The Solace JMS API implementation uses the standard JMS interface to provide JMS service for Java-based applications through an event broker network.</p>
      <li>
        <u>Solace CLI and SolAdmin</u>
      </li>
      <p>The Solace CLI and SolAdmin allow you to make administrative changes to the JMS provider (in this case, an event broker in the network). Through the Solace CLI and SolAdmin you can create JMS objects representing network clients and connections, and automatically store this information in the JNDI lookup service on the event broker that is used by JMS client applications.</p>
    </ul>
    <h2 class="with-rule"><a name="JMS2"/>JMS Concepts</h2>
    <p>If you haven't used JMS and Solace PubSub+ together before, you might want to look at the <MadCap:xref href="../Component-Maps.htm#JMS">JMS</MadCap:xref> section of the <MadCap:xref href="../Component-Maps.htm">Overview: How Apps Interact with PubSub+ Messaging Components</MadCap:xref> page. It'll take you on a tour of the PubSub+ event broker's messaging components, and explain at a high level how they make data move from producers to the broker, and from the broker to consumers, with JMS.</p>
    <h2 class="with-rule"><a name="JMS"/>JMS Entities</h2>
    <p>You can create the following JMS entities through the Solace CLI or SolAdmin:</p>
    <ul>
      <li>
        <u>Connection Factories</u>
      </li>
      <p>A Connection Factory is a network object that provides the information required for client applications to create connections with a JMS provider. The default <code>SolConnectionFactory</code> or a <code>SolXAConnectionFactory</code> objects provide predefined default Connection Factory properties. These defaults may be modified.</p>
      <li>
        <u>JMS Topics</u>
      </li>
      <p>A JMS topic is a JMS-managed object that client applications can subscribe to and publish to in a JMS publish and subscribe (pub/sub) messaging domain. Both durable and temporary JMS topics are supported.</p>
      <p>You can create and manage durable JMS topics through the Solace CLI and SolAdmin, but you can only view active temporary JMS topics. Temporary JMS topics are unique JMS topics that are created at the Session level by JMS applications.</p>
      <li>
        <u>Subscription Names</u>
      </li>
      <p>A durable subscription identified with a unique name must be provisioned on the event broker for clients to consume messages with a specific JMS topic. A durable subscription serves as a target for a topic and attracts messages that are published to that topic. Multiple subscribers can receive messages for a JMS topic using individual durable subscriptions. For information on creating subscriptions on the event broker, see <MadCap:xref href="../../Messaging/Guaranteed-Msg/Configuring-DTEs.htm">Configuring Topic Endpoints</MadCap:xref>.<br/>JMS topics are bound to durable subscriptions when the client connects with the event broker (although a durable subscription can serve many JMS topics, only one JMS topic can be served at a time). The binding relationship is set by the Message Consumer created by the client application. For more information, refer to the <MadCap:xref href="jms-get-started-open.htm#API_Online_Helps">JMS API Reference</MadCap:xref> documentation.</p>
      <li>
        <u>JMS Queues</u>
      </li>
      <p>A JMS Queue is a network object that the client application uses to specify the destination of messages that it is sending and the source of messages it receives. Queues are the destination objects used in a JMS Point‑to‑Point (PTP) messaging domain. A Queue is a destination to which a MessageProducer can send messages.<br/>Both durable and temporary JMS Queues are supported. You can create and manage durable JMS Queues through the Solace CLI and SolAdmin, but you can only view active temporary Queues. Temporary JMS Queues are unique JMS Queues that are created at the Session level by JMS applications.</p>
    </ul>
    <h2 class="with-rule"><a name="Configur"/>Configuration Information</h2>
    <ul>
      <li>
        <u>JMS/JNDI Administrators</u>
      </li>
      <p>For information on how to work with JNDI objects on event brokers, see <MadCap:xref href="Managing-Solace-JNDI-Objects.htm">Managing Solace JNDI Objects</MadCap:xref>.</p>
    </ul>
  </body>
</html>
