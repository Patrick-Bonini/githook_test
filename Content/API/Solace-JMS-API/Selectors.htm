<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Selectors</h1>
    <p>Selectors enable client applications to specify which messages they are interested in receiving, as determined by the messages’ header field and property values. A selector is a string up to a maximum of 2,000 bytes that uses a conditional expression syntax that is a subset of SQL92. For detailed information on message selector syntax, refer to the <i class="Emphasis">Java Message Service Specification – Version 1.1</i>. Selectors are supported by all Solace messaging APIs.</p>
    <p>When a selector is used, a client only receives a message if the selector evaluates to <code>true</code> when the message’s header field and property values are substituted for their corresponding identifiers in the selector. The event broker filters out messages that do not match.</p>
    <p>Selectors can be set for:</p>
    <ul>
      <li>Consumers bound to a Queue or a Topic Subscription. Refer to <MadCap:xref href="#receiving_messages_3569307012_302831">Setting Selectors for Consumers</MadCap:xref>.</li>
      <li>Browsers that are used to inspect the messages on a Queue without consuming them. Refer to <MadCap:xref href="Browsing-Messages.htm">Browsing Messages</MadCap:xref>.</li>
    </ul>
    <h2><a name="Performa"/>Performance Considerations When Using Selectors</h2>
    <MadCap:snippetBlock src="../API-Developer-Guide/Snippets/Selector-Considerations.flsnp"/>
    <h2><a name="Selector"/>Selector Identifier Mapping between JMS and <MadCap:variable name="Variables.CompanyName"/> APIs</h2>
    <p>The following table lists  standard JMS identifiers and their equivalent Solace identifiers. Solace identifiers are encoded in structured data maps of Solace SMF messages as reserved keys. Both types of identifiers can be used to define selectors.</p>
    <p>For example, <code>JMSCorrelatonID</code> is encoded in the map with the key <code>ci</code>. If you are using the JMS API and you want to match only messages where the correlation ID, which is a string, is "myCorrelationId", you could write a selector expression in JMS like this:</p>
    <p class="Code">JMSCorrelationID = 'myCorrelationId'</p>
    <p>If you are using a Solace messaging API, you could write the same expression like this:</p>
    <p class="Code">ci = 'myCorrelatonId'</p>
    <p class="Note">JMS may have no set methods for some Solace identifiers, such as message sequence number (<code>sn</code>), but it is still possible to select on the <code>sn</code> identifier.</p>
    <table class="TableStyle-Table_Num" style="mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 95%;margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Selector Identifiers</p>
      </caption>
      <col width="25%" class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <td class="TableStyle-Table_Num-HeadE-Column1-Header1">
            <p class="Tbl_Heading"> </p>
          </td>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">JMS Identifier</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Solace Identifier</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Relevant Solace Message Property</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td rowspan="12" class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <b>Message Header Fields</b>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSCorrelationID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ci</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">CorrelationId</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSDeliveryMode</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>NA</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">DeliveryMode</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSMessageID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">mi</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ApplicationMessageId</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_BodyCode">JMSPriority</p>
          </td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">Priority</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSReplyTo</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">rt</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ReplyTo</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSTimestamp</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ts</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">SenderTimestamp</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSType</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">mt</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">ApplicationMessageType</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_BodyCode">si</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">SenderID</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">sn</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">SequenceNo</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ex</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">Expiration</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">ct</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">HttpContentType</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">NA</td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_BodyCode">ce</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_BodyCode">HttpContentEncoding</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td rowspan="3" class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <b>JMS-Defined Properties</b>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSXGroupSeq</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Treated as user‑specified</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1" rowspan="3">Solace messaging APIs can access JMSX properties  as user properties with the same property name as used in JMS.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSXGroupID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">Treated as user‑specified</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_BodyCode">JMSXUserID</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>&lt;client-username&gt;</code>
            </p>
            <p class="Note">The JMSXUserID property is only available when using Basic client authentication and if the<code> jmsx-user-id-enabled</code> Connection Factory property is enabled.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">
              <b>User-Defined Message Properties</b>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">User‑specified</p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">User‑specified</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">NA</td>
        </tr>
      </tbody>
    </table>
    <h2 class="with-rule"><a name="receiving_messages_3569307012_302831"/>Setting Selectors for Consumers</h2>
    <p>Selectors can be set for durable topic subscribers that use Guaranteed Transport or message consumers of Queues that use Guaranteed Transport. (Message selectors cannot be set for consumers that are using Direct Transport. If message selectors are configured, configuration exceptions are returned.)</p>
    <p>Selectors function differently for each type of consumer:</p>
    <ul>
      <li>
        <u>Durable topic subscriber</u>
        <p>When a selector is defined for a durable topic subscriber, messages whose messages’ header fields and properties do not match the corresponding identifiers defined in the selector are not queued to the durable topic subscription. Therefore, a selector acts as an ingress filter for durable topic subscriptions.</p>
        <p>If the durable topic subscriber disconnects, and its selector is changed, all existing messages from the durable topic subscription are removed before the topic subscriber binds again. To prevent the removal of all messages for a durable topic subscription when the durable topic subscriber rebinds, the selector used must be identical to the one used in the previous bind.</p>
      </li>
    </ul>
    <ul>
      <li>
        <u>Queue consumer</u>
        <p>When a consumer binds to an exclusive queue, the messages that it can consume are filtered by the selector defined for the consumer. The messages excluded by the consumer’s selector remain in the queue and can be consumed by subsequent consumers with different selectors or no selectors that might bind. Selectors act as egress filters on queues.</p>
        <p>When a consumer binds to a non-exclusive queue, messages are consumed by bound clients in a round-robin fashion according to their selectors. Once a message is consumed, it is no longer available for subsequent clients.</p>
        <p>The following code shows how to define a selector for a consumer on a queue:</p>
        <pre class="Code">Connection connection = null;
queue = session.createQueue("queue");
selector = new String("phone NOT LIKE '12%3'");
consumer = session.createConsumer(queue,selector);</pre>
      </li>
    </ul>
  </body>
</html>
