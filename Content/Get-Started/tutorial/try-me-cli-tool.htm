<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1><MadCap:concept term="Cloud;Software"/>Step 3: Set up the <MadCap:variable name="Product-Names.try-me-cli"/> Tool</h1>
    <p>You've completed <MadCap:xref href="event-broker-basics.htm">Step 2: Learn About Events, Messages, and Topics</MadCap:xref>.</p>
    <p>In step 3, you'll set up the <MadCap:variable name="Product-Names.try-me-cli"/> tool so you can use it to complete the exercises in subsequent steps.</p>
    <p class="with-rule">The <MadCap:variable name="Product-Names.try-me-cli"/> tool lets you do more than the TryMe! you just used in <MadCap:variable name="Product-Names.pubsubmanager_short"/>. It includes a wide range of capabilities for both newcomers and experienced users. It uses default settings for various parameters, such as event topics, message content, and subscriptions, mirroring the defaults documented in the <a href="https://docs.solace.com/API-Developer-Online-Ref-Documentation/js/index.html" target="_blank" class="link-offsite"><MadCap:variable name="Variables.CompanyName"/> JavaScript API</a>. This setup allows you to start experimenting without significant initial configuration.</p>
    <p>After setting up the <MadCap:variable name="Product-Names.try-me-cli"/> tool, we'll introduce you to the use case that we'll use the tool with.</p>
    <h2><a name="Download"/>Downloading the <MadCap:variable name="Product-Names.try-me-cli"/> Tool</h2>
    <p>To use the <MadCap:variable name="Product-Names.try-me-cli"/> tool, you need to download it and connect it to your event broker. For more information about the <MadCap:variable name="Product-Names.try-me-cli"/> tool and detailed instructions, see the <a href="https://github.com/SolaceLabs/solace-tryme-cli/blob/main/README.md" target="_blank" class="link-offsite">Solace Try-Me CLI README file</a>.</p>
    <p>To download and install the <MadCap:variable name="Product-Names.try-me-cli"/> tool, perform these steps: </p>
    <ol>
      <li>Download the latest version of the <MadCap:variable name="Product-Names.try-me-cli"/> tool for your operating system from <a href="https://github.com/SolaceLabs/solace-tryme-cli/releases" class="link-offsite">Solace Try-Me! releases</a>.</li>
      <li>Extract the zip file.</li>
      <li>Follow the instructions in  the <a href="https://github.com/SolaceLabs/solace-tryme-cli/blob/main/README.md" target="_blank" class="link-offsite">Solace Try-Me CLI README file</a> to install it on your operating system.</li>
    </ol>
    <h2>Running the <MadCap:variable name="Product-Names.try-me-cli"/> Tool</h2>
    <ol>
      <li>Open a command prompt or terminal. </li>
      <li> Start by running the version  command to verify that you've installed the latest version:<pre>stm -v</pre><p>The version number returned should match the version you downloaded. </p></li>
      <li>
        <p>Run the help command to see a list of available commands:</p>
        <pre>stm -help</pre>
        <p>The results returned show the command structure:</p>
        <pre xml:space="preserve">
stm
├── -v, --version                   /* output the version number        */
├── -h, --help                      /* display help for command         */
├── -he, --help-examples            /* display examples                 */
├── send                            /* execute a send command           */
├── receive                         /* execute a receive command        */
├── request                         /* execute a request command        */
├── reply                           /* execute a reply command          */
├── config                          /* manage command configurations    */
│   ├── -h, --help                  /* display help for command         */
│   ├── -he, --help-examples        /* display examples                 */
│   ├── init                        /* initialize command configuration */
│   ├── list                        /* list command configurations      */
│   └── delete                      /* delete command configuratio      */
└── manage                          /* manage connection and resources  */
     ├── -h, --help                 /* display help for command         */
     ├── -he, --help-examples       /* display examples                 */
     ├── connection                 /* manage VPN connection            */
     ├── semp-connection            /* manage VPN SEMP connection       */
     ├── queue                      /* manage queue                     */
     ├── client-profile             /* manage client-profile            */
     ├── acl-profile                /* manage acl-profile               */
     └── client-username            /* manage client-username           */
				</pre>
      </li>
    </ol>
    <p>To use the <MadCap:variable name="Product-Names.try-me-cli"/> with <MadCap:variable name="Product-Names.cloud_product_short"/>, jump down to <MadCap:xref href="#connect-tool-to-cloud">Using the [%=Product-Names.try-me-cli%] Tool With an [%=Product-Names.broker_cloud_short_title%]</MadCap:xref>.</p>
    <h2 class="with-rule"><a name="connect-tool-to-sw"/>Connect the <MadCap:variable name="Product-Names.try-me-cli"/> Tool to Your Software Event Broker</h2>
    <p>You can use the <MadCap:variable name="Product-Names.try-me-cli"/> tool to communicate with the trial software event broker you set up in <MadCap:xref href="event-broker-set-up.htm">Step 1: Set up Your First Event Broker</MadCap:xref>. Software event brokers have default settings  for messaging and management.</p>
    <p>Messaging settings include: </p>
    <ul>
      <li>event broker URL for websocket connections (localhost and port 8008)</li>
      <li>message VPN (default)</li>
      <li>client username (default)</li>
      <li>password (default).</li>
    </ul>
    <p>Management settings include:</p>
    <ul>
      <li>event broker SEMP URL (localhost and 8080)</li>
      <li>message VPN (default)</li>
      <li>SEMP username (admin)</li>
      <li> SEMP password (admin).</li>
    </ul>
    <p>Running an <code>stm</code> command without a configuration reference automatically creates a default configuration in the following location:</p>
    <ul>
      <li>
        <p>On Windows, configuration files are stored in the <code>%USERPROFILE%\.stm</code> folder.</p>
      </li>
      <li>
        <p>On Linux and Mac,  configuration files are stored in the <code>$HOME\.stm</code>or <code>~\.stm</code> folder.</p>
      </li>
    </ul>
    <p>  You can review a <a href="https://github.com/SolaceLabs/solace-tryme-cli/blob/main/sample-config/stm-cli-config.json" target="_blank" class="link-offsite">sample default configuration</a> for more information about the default settings.</p>
    <p>To configure your <MadCap:variable name="Product-Names.broker_sw_short"/> with <code>stm</code>, perform these steps:</p>
    <ol>
      <li>In a command prompt or terminal, initialize configuration with the following command:
<pre>stm config init</pre><p>You should see the following result:</p><pre>✔  success   success: initialized configuration with default command settings on 'stm-cli-configuration.json' successfully</pre><p>The connection configuration is initialized using the default settings of your local <MadCap:variable name="Product-Names.broker_sw_short"/>:</p><table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0"><col class="TableStyle-Table_Num-Column-Column1" style="width: 50%;"/><col class="TableStyle-Table_Num-Column-Column1" style="width: 50%;"/><thead><tr class="TableStyle-Table_Num-Head-Header1"><th class="TableStyle-Table_Num-HeadE-Column1-Header1">Event Broker Connection</th><th class="TableStyle-Table_Num-HeadD-Column1-Header1">Event Broker SEMP Connection</th></tr></thead><tbody><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1"><p><b>Event broker URL</b>: ws://localhost:8008</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p><b>Event broker SEMP URL</b>: http://localhost:8080/SEMP/v2/config</p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="font-weight: bold;"><p><b>VPN Name</b>: default</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p><b>VPN Name</b>: default</p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1"><p><b>Username</b>: default</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p><b>SEMP Username</b>: default</p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><p><b>Password</b>: default</p></td><td class="TableStyle-Table_Num-BodyA-Column1-Body1"><p><b>SEMP Password</b>: default</p></td></tr></tbody></table></li>
      <li>To update the connection settings for messaging commands, run the following command:<pre>stm manage connection --url ws://localhost:8008 --vpn default --username default --password default</pre><p>You should see the following result:</p><pre>ℹ  info      info: loading 'connection' command from configuration 'local-broker'
ℹ  info      info: loading configuration 'local-broker'
ℹ  info      info: checking settings for operation - connection
✔  success   success: updated command settings 'connection' on configuration file 'local-broker.json' successfully</pre></li>
      <li>To update the SEMP connection settings for managing queues, ACL profiles, client profiles, and client usernames, run the following command:	<pre>stm manage semp-connection --semp-url http://localhost:8080/SEMP/v2/config --semp-vpn default --semp-username admin --semp-password admin</pre><p>You should see the following result:</p><pre>ℹ  info      info: loading 'sempconnection' command from configuration 'stm-cli-config.json'
ℹ  info      info: loading configuration 'stm-cli-config.json'
ℹ  info      info: checking settings for operation - sempconnection
✔  success   success: updated command settings 'sempconnection' on configuration file 'stm-cli-config.json' successfully</pre></li>
    </ol>
    <p class="Note"> If you want to create additional configurations for a different event broker, you can create a new configuration by executing the previous commands with an additional parameter of <code>--config &lt;CONFIG_NAME&gt;</code>. You can refer to a named configuration by specifying it in any of the messaging and management commands</p>
    <p>Unless you also want to try the <MadCap:variable name="Product-Names.try-me-cli"/> tool with a <MadCap:variable name="Product-Names.cloud_product_short"/> <MadCap:variable name="Product-Names.broker_cloud_short_title"/>, you can <a href="#Use_Case" class="link-internal">skip to the use case</a>.</p>
    <h2 class="with-rule"><a name="connect-tool-to-cloud"/>Connect the <MadCap:variable name="Product-Names.try-me-cli"/> Tool to <MadCap:variable name="Product-Names.cloud_product_short"/> <MadCap:variable name="Product-Names.broker_cloud_short_title"/></h2>
    <p>Unlike a local <MadCap:variable name="Product-Names.broker_sw_short"/>, cloud <MadCap:variable name="Product-Names.broker_cloud_short"/>s require explicit initialization because the parameters vary from instance to instance.</p>
    <p>To use the <MadCap:variable name="Product-Names.try-me-cli"/> tool with the <MadCap:variable name="Product-Names.broker_cloud_short"/> you created in <MadCap:xref href="event-broker-set-up.htm">Step 1: Set up Your First Event Broker</MadCap:xref>, you start by collecting  the required settings from the <MadCap:variable name="Product-Names.broker_cloud_short"/> in the <MadCap:variable name="Product-Names.console_ui_short"/>. </p>
    <p>To configure your <MadCap:variable name="Product-Names.broker_cloud_short"/> with <code>stm</code>, perform these steps:</p>
    <ol>
      <li>In your browser, visit the <a href="[%=Manifest-Products-Links.CloudConsoleLogin%]" class="link-offsite" target="_blank">PubSub+ Cloud login page</a> and sign in using the email address and password that you used when you signed up.
</li>
      <li>From the navigation bar, select <b>Cluster Manager</b><img src="../../Resources/Images/Cloud/reusable-icons/navbar_cluster_manager.png" alt=""/>. </li>
      <li>Select your <MadCap:variable name="Product-Names.broker_cloud_short"/>.</li>
      <li>Copy the event broker connection information. </li>
      <ol style="list-style-type: lower-alpha;">
        <li>On the <b>Service Details</b> page, select the <b>Connect</b> tab.</li>
        <li>In the <b>Solace Web Messaging</b> section, click <b>Expand</b><img src="../../Resources/Images/Cloud/reusable-icons/expand-arrow.png" style="width: 18px;height: 18px;" alt=""/> to view the connection information.</li>
        <li>Under <b>Connection Details</b> copy the following information:<ul><li>Username</li><li>Password</li><li>Message VPN</li><li>Secured Web Messaging Host</li></ul></li>
      </ol>
      <li>Copy the SEMP connection information.</li>
      <ol style="list-style-type: lower-alpha;">
        <li>On the <b>Service Details</b> page, select <b>Manage</b> tab. </li>
        <li>In the  <b>SEMP - REST API</b> section, click <b>Expand</b><img src="../../Resources/Images/Cloud/reusable-icons/expand-arrow.png" style="width: 18px;height: 18px;" alt=""/> to view the SEMP connection information.</li>
        <li>Under <b>Connection Details</b> copy the following information:<ul><li>Public Internet</li><li>Username</li><li>Password</li><li>Message VPN Name</li></ul></li>
      </ol>
      <li>In a command prompt or terminal, initialize configuration with the following command:
<pre>stm config init</pre><p>You should see the following result:</p><pre>✔  success   success: initialized configuration with default command settings on 'stm-cli-configuration.json' successfully</pre></li>
      <li>Update the connection settings for messaging commands by running the following command, using the details you copied in step 4:<pre xml:space="preserve">stm manage connection --url wss://mr-connection-xxxx.messaging.solace.cloud:443 --vpn xxxxxxxx --username solace-cloud-client --password xxxxx</pre><p>You should see the following result:</p><pre>ℹ  info      info: loading 'connection' command from configuration 'stm-cli-configuration.json'
ℹ  info      info: loading configuration 'cloud-broker'
ℹ  info      info: checking settings for operation - connection
ℹ  info      info: [1] url of connection changed: ws://localhost:8008 =&gt; wss://mr-connection-xxxx.messaging.solace.cloud:443
ℹ  info      info: [2] vpn of connection changed: default =&gt; xxxxxxxx
ℹ  info      info: [3] username of connection changed: default =&gt; solace-cloud-client
ℹ  info      info: [4] password of connection changed: default =&gt; xxxxx
⚠  warning   warn: VPN Connection settings changed, this would impact all the messaging commands on the configuration
Changes detected in the settings, do you want to overwrite (y/n): y
✔  success   success: updated command settings 'connection' on configuration file 'stm-cli-configuration.json' successfully</pre></li>
      <li>Update the SEMP connection settings managing queue, acl-profile, client-profile and client-username by running the following command, using the details you copied in step 5:
				<pre>stm manage semp-connection --semp-url https://mr-connection-xxxx.messaging.solace.cloud:943/SEMP/v2/config --semp-vpn xxxxxxxx --semp-username xxx-admin --semp-password xxxxx</pre><p>You should see the following result:</p><pre>ℹ  info      info: loading 'sempconnection' command from configuration 'cloud-broker'
ℹ  info      info: loading configuration 'stm-cli-configuration'
ℹ  info      info: checking settings for operation - sempconnection
ℹ  info      info: [1] sempUrl of sempconnection changed: http://localhost:8080 =&gt; https://mr-connection-xxxx.messaging.solace.cloud:943/semp/v2/config
ℹ  info      info: [2] sempVpn of sempconnection changed: default =&gt; my-broker
ℹ  info      info: [3] sempUsername of sempconnection changed: admin =&gt; xxx-admin
ℹ  info      info: [4] sempPassword of sempconnection changed: admin =&gt; xxxxx
⚠  warning   warn: VPN SEMP Connection settings changed, this would impact all the management commands on the configuration
Changes detected in the settings, do you want to overwrite (y/n): y
✔  success   success: updated command settings 'sempconnection' on configuration file 'stm-cli-configuration.json' successfully
</pre></li>
    </ol>
    <p class="Note"> If you want to create additional configurations for a different event broker, you can create a new configuration by executing the previous commands with an additional parameter of <code>--config &lt;CONFIG_NAME&gt;</code>. You can refer to a named configuration by specifying it in any of the messaging and management commands.</p>
    <h2 class="with-rule"><a name="Use_Case"/>Coffee Shop Use Case</h2>
    <p>Now that you have your tools set up, let's head to our favorite coffee shop where we'll take a closer look at its order management system (OMS) to see how a basic event-driven architecture (EDA) can be organized.</p>
    <p>Solly's Coffee OMS is designed to handle and process orders placed by customers through third-party vendor applications that are accessible through mobile and web platforms. This setup requires the deployment of sophisticated message exchange patterns to ensure seamless communication between the OMS, its various components, and third-party applications.</p>
    <p>The following applications are part of the EDA for Solly's Coffee:</p>
    <ul>
      <li>
        <p><b>Third-Party Apps</b> integrate with the OMS and submit new orders from customer-facing apps directly to the OMS.</p>
      </li>
      <li>
        <p><b>Order Management</b> is the central hub for receiving new orders and orchestrating the fulfillment process.</p>
      </li>
      <li>
        <p><b>Inventory System</b> provides insights into ingredient and stock levels, to help ensure availability.</p>
      </li>
      <li>
        <p><b>Kitchen Floor</b> assesses inventory and proceeds with the actual preparation of orders.</p>
      </li>
      <li>
        <p><b>Barista System</b> provides the customer-facing interface at the front desk, enabling order pickups and providing updates on order status.</p>
      </li>
    </ul>
    <p>The following events facilitate interactions between the applications:</p>
    <ul>
      <li>
        <p><b>OM-New Order</b> is sent by a Third-Party App to the Order Management application when receiving a new order. The event contains details of the order.</p>
      </li>
      <li>
        <p><b>OM-Order Details</b> is sent by the Order Management application to other applications to provide details of an order.</p>
      </li>
      <li>
        <p><b>OM-Order Update</b> is sent by the Order Management application to provide real-time updates on the order status to reflect progress through the fulfillment process.</p>
      </li>
      <li>
        <p><b>KF-Order Prep Started</b> is sent by the Kitchen Floor application to mark the initiation of the order preparation in the kitchen.</p>
      </li>
      <li>
        <p><b>KF-Order OutOfStock</b> is sent by the Kitchen Floor application when an out-of-stock scenario occurs during order preparation that affects the kitchen's ability to fulfill the order.</p>
      </li>
      <li>
        <p><b>KF-Order Ready</b> is sent by the Kitchen Floor application when the order has been successfully prepared and is available for pickup at the Barista station.</p>
      </li>
      <li>
        <p><b>IS-Stock Check</b> is sent by the Kitchen Floor application to  the Inventory System application to check the availability of items needed to fulfill an order.</p>
      </li>
      <li>
        <p><b>BS-Order Completed</b> is sent by the Barista Station application when the order is picked up to mark the completion of order processing and the end of the cycle for a specific order.</p>
      </li>
    </ul>
    <p>The event flows between the applications are illustrated in the following diagram:</p>
    <p>
      <img src="../../Resources/Images/Getting-Started/coffee-shop-eda.png" alt="Image showing the applications and events described in this section">
            </img>
    </p>
    <p>In the following steps of the tutorial, you're going to set up message exchanges using these applications and events.</p>
    <h2 class="with-rule">Tutorial Steps</h2>
    <p>You've completed the third step in the tutorial. Click the link to the next lesson to continue.</p>
    <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');border-left-style: solid;border-left-width: 1px;border-left-color: #e1e1e1;border-right-style: solid;border-right-width: 1px;border-right-color: #e1e1e1;border-top-style: solid;border-top-width: 1px;border-top-color: #e1e1e1;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #e1e1e1;margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0">
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Step</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/num1.png" alt="Step 1"/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="font-weight: bold;">Set up Your First Event Broker - Complete</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/num2.png" alt="Step 2"/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="font-weight: bold;">Solace EDA Basics - Complete</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/num3.png" alt="Step 3"/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p style="font-weight: bold;">Set up the <MadCap:variable name="Product-Names.try-me-cli"/> Tool - Complete</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/num4.png" alt="Step 4"/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p style="font-weight: bold;">Try a Publish-Subscribe Message Exchange Pattern  - <a href="pub-sub-pattern.htm" class="link-internal">Next Lesson</a></p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/num5.png" alt="Step 5"/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="font-weight: bold;">Try a Request-Reply Message Exchange Pattern</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/num6.png" alt="Step 6"/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="font-weight: bold;">Explore Consumer Scaling Patterns</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="text-align: center;">
              <img src="../../Resources/Images/Cloud/reusable-icons/complete.png" alt=""/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1" style="background-color: #F7F8F9;">
            <p style="font-weight: bold;">Next Steps</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>You can return to the main <a href="../Getting-Started-Try-Broker.htm" class="link-internal">Tutorial page</a> at any time.</p>
  </body>
</html>
