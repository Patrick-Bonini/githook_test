<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    </head>
  <body>
    <h1>Solace Geneos Agent</h1>
    <p>Solace Geneos Agent is a Solace component which generates PubSub+ broker specific information for the ITRS Geneos Enterprise Management product. This agent represents one component of the Geneos Enterprise Management Solution.</p>
    <p>The figure below shows the key components of this solution.</p>
    <p class="GraphicCaption">Solace and ITRS Geneos Interaction</p>
    <p>
      <img src="Images/conceptual_overview.png" style="width: 523.104px;height: 337.056px;margin-left: 5.0004px;margin-top: 4.99968px;margin-right: 4.998257px;margin-bottom: 1.039672px;" alt="">
            </img>
    </p>
    <ul>
      <li>Active Console—The GUI component for the system presents the console views and the dashboard. It contains a number of objects which allow you to navigate, control, and organize the data collected from the event broker and other third-party vendors.</li>
      <li>Gateway—A Gateway is responsible for storing historical data, executing customer-defined rules on newly received data, and generating notifications based on network events or status changes. It receives data that is pushed to it by the Geneos NetProbes in the network. A single Geneos Gateway may be responsible for collecting data from multiple NetProbes.</li>
      <li>NetProbe—A NetProbe is the data collection point for the system. It either performs polling of data from a monitored system, or receives data which is pushed to it by an agent. It is responsible for detecting deltas in data records and pushing new data to the Geneos Gateway. The Active Console GUI allows NetProbes to be created and associated with Gateway objects. This association establishes the communication path between a NetProbe and a Gateway.<ul><li>A NetProbe is typically deployed on each event broker. In this deployment architecture, communication between the NetProbe and Gateway is through the management Ethernet port; therefore, the server on which the Geneos Gateway is installed must have connectivity to the IP management VRF.</li><li>Alternatively, a NetProbe may be deployed on a server external to the event broker. In this deployment architecture, communication between the NetProbe and Solace Geneos Agent is through the management ethernet port. Therefore, the server that the NetProbe is installed on must have connectivity to the IP management VRF. Each instance of a Geneos NetProbe must have a corresponding NetProbe object created and configured through the Active Console application.</li></ul></li>
      <li>Solace Geneos Agent—The Solace Geneos Agent runs on an event broker, and it is responsible for polling data from the event broker, and pushing that data to one or more NetProbes through the open XML-RPC API. The agent retrieves status and statistics information from the event broker by using the Solace Element Management Protocol (SEMP).</li>
      <li>Managed Entities—Managed entities represent any hardware or software component being monitored. The user is responsible for creating and naming the event broker managed entity on the gateway and associating it with a NetProbe running on that event broker or off the event broker. The monitored event broker is modeled as a Managed Entity in the Active Console application.</li>
      <li>Sampler—A Sampler Object defines a set of views that a NetProbe gathers from a particular managed entity. By default, Solace provides the SolaceSampler which exposes all of the Solace Views. You can also customize a set of samplers to package the available views as you want.</li>
      <li>Data Views—A data view object is the holding place for the actual data polled from the managed entity. They are automatically created when the Solace Geneos Agent pushes data up to the NetProbe. Solace Geneos Agent distribution comes with several default data views.</li>
    </ul>
  </body>
</html>
