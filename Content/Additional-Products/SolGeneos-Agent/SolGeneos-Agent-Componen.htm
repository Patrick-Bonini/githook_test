<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1>Solace Geneos Agent Components and Operation</h1>
    <p>Solace Geneos Agent is a Java process that runs as service on the supported platform. The figure below provides a high level view of Solace Geneos Agent components and their responsibilities.</p>
    <p class="GraphicCaption">Solace Geneos Agent Components and Interactions</p>
    <p style="text-align: center;">
      <p>
        <img src="Images/geneos_components_overview.png" style="width: 509px;height: 339px;" alt="Illustration depicting the concepts described in the surrounding text."/>
      </p>
    </p>
    <ul>
      <li>Solace Geneos Agent Service—The entry point for running the application. It is responsible for loading configuration properties as well as initializing and starting event broker service, NetProbe services, and monitors.</li>
      <li>NetProbe Service—Responsible for monitoring a NetProbe’s state and reporting data to the NetProbe using XML-RPC.</li>
      <li>Monitors—Each monitor is in charge of collecting and updating one or more data views by interacting with the event broker through SEMP and NetProbe services. For example, <code>AlarmsMonitor</code> is used to populate <code>AlarmsStats</code> data view. </li>
      <li>JMX Agent—All the components can optionally register configuration properties, statistics, and operations with a JMX (Java Management Extensions) agent. Registration allows administrators to monitor the Solace Geneos Agent's health, modify properties, and start/stop a monitor without restarting the agent through JConsole. </li>
    </ul>
    <h2 class="with-rule"><a name="solgeneos_overview_2955917983_247242"/>Solace Geneos Agent Operation</h2>
    <p>When the Solace Geneos Agent application runs, it does the following:</p>
    <ol>
      <li>It starts the Solace Geneos Agent daemon, which loads the agent’s configuration properties from the <code>config</code> directory listed above. </li>
      <li>The Solace Geneos Agent daemon, in turn, starts one or more of the agent’s NetProbe services as determined by the agent’s configuration properties. </li>
      <li>The Solace Geneos Agent daemon also creates three default threading contexts (each contains one thread):
            <ul><li><code>DefaultCollectingContext</code>—queues and executes data polling tasks, generally SEMP related operations</li><li><code>DefaultReportingContext</code>—queues and executes data reporting tasks, generally NetProbe related operations</li><li><code>SelfMontiorCollectingContext</code>—queues and executes the agent’s self-monitoring status and statistics. Using this collecting context avoids unnecessary waiting for SEMP request/reply operations.</li></ul><p class="Note" MadCap:autonum="&lt;b&gt;Note:  &lt;/b&gt;">For the majority of use cases, it's recommended for monitor developers to use the above contexts.</p></li>
      <li>Based on specific global and monitor properties, the agent starts a Monitor Timer thread shared by all monitors, initializes and starts the default monitors that are bundled with the agent load, and then initializes and starts user developed monitors from the <code>monitors</code> directory listed above.</li>
    </ol>
  </body>
</html>
