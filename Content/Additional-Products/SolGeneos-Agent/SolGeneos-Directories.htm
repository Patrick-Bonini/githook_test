<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Solace Geneos Directories</h1>
    <p>After the Solace Geneos Agent is installed on an event broker, the following directories are created:</p>
    <p style="text-align: left;">
      <img src="Images/Directory_Structure.png" alt=""/>
    </p>
    <h2 class="with-rule"><a name="solgeneos_overview_netprobe_directories"/>Netprobe Directories</h2>
    <p>If Netprobe is deployed locally on the event broker it will be installed in the following directory: <code>/usr/sw/geneos</code>, the root directory for the Netprobe installation.</p>
    <h2 class="with-rule"><a name="solgeneos_overview_2955917983_247348"/>Configuration Properties</h2>
    <p>Solace Geneos Agent uses the following types of configuration properties. These are stored in the <code>solgeneosagent.properties</code> file; they use a standard property name/value pair convention.</p>
    <ul>
      <li><u>Global properties</u>: Properties that are shared by all monitors. Some properties can be overwritten in monitor specific property files. To query global properties, call <code>SolGeneosAgent.onlyInstance.getGlobalProperties()</code>.</li>
      <li><u>Monitor specific properties</u>: Properties that are used by a specific monitor implementation. They can be global properties that must be overwritten or require exclusive monitor properties. For example, properties for <code>AlarmsMonitor</code> are stored in the <code>AlarmsMonitor.properties</code> file. To query monitor specific properties, call <code>SolGeneosAgent.onlyInstance.getMonitorConfig(monitorObject)</code>.</li>
      <li><u>User properties</u>: Properties that are shared by user developed monitors. The file name for user properties must start with “<code>user</code>”. To query user properties, call <code>SolGeneosAgent.onlyInstance.getUserPropertiesConfig<br/>(userPropertiesFileName)</code>.</li>
    </ul>
    <p>After the property files are read, and the property name is understood by the agent, they are loaded into the intended service or monitor's property map when the service or the monitor is initialized; otherwise, it stays in the properties object to which it is initially loaded. For properties whose values are out of range, the default values are used.</p>
    <h3><a name="solgeneos_overview_2955917983_247816"/>Global Properties</h3>
    <p> The table below lists the global properties Solace Geneos Agent supports, and whether they can be overwritten at monitor level or at a data view level inside a monitor:</p>
    <table class="TableStyle-Table_Num" style="caption-side: top;width: 95%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Solace Geneos Agent Properties</p>
      </caption>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">
						Property Name and Description					</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Default Property Value</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">
					Over-writable in Monitor Properties?</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>ipaddress</code>
            </p>
            <p class="Tbl_Body">Event broker management IP</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">127.0.0.1</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>port</code>
            </p>
            <p class="Tbl_Body">Event broker management port used for Solace Element Management Protocol</p>
            <p class="Tbl_Body">(SEMP).</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">80</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>username</code>
            </p>
            <p class="Tbl_Body">Username of account the agent uses to log into the SEMP service. The default is ‘admin’, but a best practice is to create and assign a read-only user for the agent to use.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">admin</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">
              <code>password</code>
            </p>
            <p class="Tbl_Body">Password for the provisioned username.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">admin</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>netprobe.&lt;alias&gt;.&lt;propertyName&gt;</code>
            </p>
            <p class="Tbl_Body">Where:</p>
            <p class="Tbl_Body"><code>&lt;alias&gt;</code> is an identifier for the NetProbe.</p>
            <p class="Tbl_Body"><code>&lt;propertyName&gt;</code> is a customer-defined property for the NetProbe. This can be any valid property name. </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body"> </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body"> </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>netprobe.&lt;alias&gt;.endpoint</code>
            </p>
            <p class="Tbl_Body">The IP address and port of the NetProbe. </p>
            <p class="Tbl_Body">For example:</p>
            <p class="Tbl_Body">
              <code>netprobe.np0.endpoint=127.0.0.1:7036</code>
            </p>
            <p class="Tbl_Body">
              <code>netprobe.np1.endpoint=127.0.0.1:7037</code>
            </p>
            <p class="Tbl_Body">This is a required property by the agent framework.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">netprobe.np0.endpoint=127.0.0.1:7036</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>netprobe.&lt;alias&gt;.heartbeat</code>
            </p>
            <p class="Tbl_Body">Heartbeat intervals in seconds used by the agent’s NetProbe services to send keep-alive messages to the NetProbe. For example:</p>
            <p class="Tbl_Body">
              <code>netprobe.np1.heartbeat=50</code>
            </p>
            <p class="Tbl_Body">This is an optional property.</p>
            <p class="Tbl_Body">The heartbeat interval is used by the Solace Geneos Agent to detect whether the NetProbe is up or down. Although the valid range accepted by Geneos is between 1 and 86400, if this property value is set too big, it will delay the agent from noticing the NetProbe is back up.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">60</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">
              <code>netprobe.&lt;alias&gt;.replyTimeout</code>
            </p>
            <p class="Tbl_Body">The reply timeout in seconds for each XML-RPC request sent to the NetProbe. This is an optional property.</p>
            <p class="Note">The <code>replyTimeout</code>value should be smaller than <code>heartbeat</code>. If not, a warning is logged when the agent starts.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">30</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">N</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>sampler</code>
            </p>
            <p class="Tbl_Body">Geneos sampler name for a data view (it must match the sampler configured on the Gateway).</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">SolaceSampler</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Y (at monitor and view level)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>groupHeader</code>
            </p>
            <p class="Tbl_Body">Geneos group header for data view</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">SolOS</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">Y (at monitor and view level)</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">
              <code>managedEntities</code>
            </p>
            <p class="Tbl_Body">A list of NetProbe to managed entity associations. The NetProbe is represented by its alias name. Managed entities must match the managed entities configured on the Gateway.</p>
            <p class="Note">A managed entity must be unique within a Gateway, so if you have multiple NetProbes configured on the same gateway and listen to the same Solace Geneos Agent, you should use different managed entity name for each NetProbe, even though they are monitoring the same event broker.</p>
            <p class="Tbl_Body">For example, if there are two NetProbes np0 and np1, then managedEntities might have the following value:</p>
            <p class="Tbl_Body">
              <code>managedEntities=[np0, ManEnt_np0],[np1, ManEnt_np1]</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">[np0,ManEnt]</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">Y (at monitor and view level)</p>
          </td>
        </tr>
      </tbody>
    </table>
    <h3><a name="Monitor"/>Monitor Properties</h3>
    <p>The following table lists the monitor-specific properties that Solace Geneos Agent supports.</p>
    <table class="TableStyle-Table_Num" style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 95%;" cellspacing="0">
      <caption valign="top" style="padding-bottom: 3pt;">
        <p class="TblCaption">Monitor-Specific Properties</p>
      </caption>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Property Name and Descriptions</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Default Property Value</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>userMonitorLibPath</code>
            </p>
            <p class="Tbl_Body">The directory that the libraries used by user-<br/>developed monitors are loaded from.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_BodyCode">/usr/sw/solgeneos/monitors</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>monitorClassName</code>
            </p>
            <p class="Tbl_Body">The name of the monitor class to load.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body"> </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>autoStart</code>
            </p>
            <p class="Tbl_Body">Whether to start the monitor automatically when the agent is started. (If set to false, the monitor can be started from JMX.)</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">true</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p class="Tbl_Body">
              <code>samplingRate</code>
            </p>
            <p class="Tbl_Body">An integer &gt;=30</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p class="Tbl_Body">30</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>statsIntervals</code>
            </p>
            <p class="Tbl_Body">An integer &gt;=0</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">0</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p class="Tbl_Body">
              <code>pageSize</code>
            </p>
            <p class="Tbl_Body">An integer &gt;=1 and &lt;= 500</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p class="Tbl_Body">500</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p class="Tbl_Body">
              <code>view.&lt;alias&gt;.&lt;propertyName&gt;</code>
            </p>
            <p class="Tbl_Body">Where:</p>
            <p class="Tbl_Body"><code>&lt;alias&gt;</code> is an identifier for the data view. <code>&lt;propertyName&gt;</code> is a property defined for the data view.</p>
            <p class="Tbl_Body">Example:</p>
            <p class="Tbl_Body">
              <code>view.alarms.name=AlarmStats</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p class="Tbl_Body">No default. However, the following view properties are used by the agent framework:</p>
            <ul>
              <li><code>view.&lt;alias&gt;.viewName</code>—View name, required for the data view.</li>
              <li><code>view.&lt;alias&gt;.sampler</code>—(Optional) Overwrites the global Geneos sampler name. </li>
              <li><code>view.&lt;alias&gt;.groupHeader</code>—(Optional) Overwrites the global Geneos header name.</li>
              <li><code>view.&lt;alias&gt;.managedEntities</code>— (Optional) Overwrites global managedEntities.</li>
              <li><code>view.&lt;alias&gt;.active</code>—(Optional) Set to false to disable the view.</li>
            </ul>
          </td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
