<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head/>
  <body>
    <h1>PubSub+ Cache Redundancy and Network Deployments</h1>
    <p>This section discusses some best practices for deploying PubSub+ Cache within a network with PubSub+ event brokers, including:</p>
    <ul>
      <li>Implementing PubSub+ Cache redundancy on a single event broker</li>
      <li>Using a Distributed Cache with a fault‑tolerant, redundant pair of event brokers</li>
      <li>Using a Distributed Cache in conjunction with routers installed in primary and backup data-centers for data center redundancy</li>
      <li>Using Global Caching to extend the caching solution to a multi-region deployment</li>
      <li>Recommended Multiple-Node Routing topologies for these various network deployments of PubSub+ Cache</li>
    </ul>
    <p>In general, fault tolerant PubSub+ Cache deployments are achieved in a Dynamic Message Routing (DMR) or Multi-Node Routing (MNR) event mesh by ensuring every cache cluster contains multiple cache instances. Each instance connects to a different PubSub+ event broker within the mesh.  The approach ensures that no single failure (be it network disruption, PubSub+ broker service disruption, or failure of a cache instance) will affect the ability of the cache to continue both caching messages and servicing cache requests.</p>
    <p>When setting up PubSub+ Cache within a network of event brokers, many deployment combinations and variations are possible. This section describes the most common  deployment models. However, when planning a complex multi‑site  deployment, Solace Professional Services should be engaged to assist with the network architecture design, and to make recommendations on the best  model for specific  use cases.</p>
    <p>An example of this deployment model is illustrated below.  Any one (but only one) of the PubSub+ brokers within the event mesh shown may be the designated cache manager, and a failure affecting that broker will not disrupt caching service  for that cluster.  The remaining brokers and cache instances will continue to function while connectivity to the cache manager is restored.</p>
    <p>Publishers, subscribers, and optionally cache instances may use host-lists to identify their primary and secondary PubSub+ brokers in the mesh. This allows connections to be immediately re-established with the event mesh should the primary broker fail or become unreachable.</p>
    <p>
      <img src="Images/SolCache_event_mesh.PNG" style="width: 639px;height: 383px;" alt=""/>
    </p>
    <p class="Note">It's assumed that the reader of this section is already familiar with the basic concepts and configuration of PubSub+ Cache, Distributed Caches, Global Caching, router redundancy, Multiple-Node Routing, Replication, and Config‑Sync.</p>
  </body>
</html>
