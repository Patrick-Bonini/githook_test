<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    </head>
  <body>
    <h1>Upgrading <MadCap:variable name="Product-Names.pubsub_cache"/></h1>
    <p>If you have the older version of <MadCap:variable name="Product-Names.pubsub_cache"/>, you must upgrade to use all its features and benefit from all available compatibility.</p>
    <p>There are two ways to upgrade your <MadCap:variable name="Product-Names.pubsub_cache"/>:</p>
    <ul>
      <li>
        <p>Basic <MadCap:variable name="Product-Names.pubsub_cache"/> Upgrade</p>
      </li>
      <li>
        <p>Upgrading <MadCap:variable name="Product-Names.pubsub_cache"/> While Preserving Cached Messages</p>
      </li>
    </ul>
    <p>If a Cache Cluster has one cache instance only, you can't avoid losing cached messages and must use the basic <MadCap:variable name="Product-Names.pubsub_cache"/> upgrade procedure. If the Cache Clusters have two or more instances, you can upgrade <MadCap:variable name="Product-Names.pubsub_cache"/> while preserving the cached messages.</p>
    <h2><a name="basic-pubsub-cache-upgrade"/>Basic <MadCap:variable name="Product-Names.pubsub_cache"/> Upgrade</h2>
    <p>If you don’t care about loss of cached messages, or if you only have a single cache instance in a Cache Cluster, follow this procedure to upgrade <MadCap:variable name="Product-Names.pubsub_cache"/>.</p>
    <p class="Caution">All cached messages are lost when following this procedure. <MadCap:variable name="Product-Names.pubsub_cache"/> will be out of service during the procedure.</p>
    <p>Before you start this upgrade, it's assumed that you have root access to the Linux server. The directory where <MadCap:variable name="Product-Names.pubsub_cache"/> is installed is <code>&lt;installdir&gt;</code>. The version of <MadCap:variable name="Product-Names.pubsub_cache"/> to be installed is <code>&lt;version&gt;</code>. </p>
    <p>This procedure needs to be repeated on each server running <MadCap:variable name="Product-Names.pubsub_cache"/> Instances, if applicable.</p>
    <p>To perform Basic <MadCap:variable name="Product-Names.pubsub_cache"/> Upgrade, follow these steps:</p>
    <ol>
      <li>
        <p>Copy the <MadCap:variable name="Product-Names.pubsub_cache"/> package to the server.<br/></p>
        <pre>/tmp/SolaceCache_Linux26-x64_opt_&lt;version&gt;.tar.gz</pre>
      </li>
      <li>
        <p>Copy the C-API solclient package to the server.</p>
        <pre xml:space="preserve">/tmp/solclient_Linux26-x64_opt_&lt;version&gt;.tar.gz</pre>
        <p class="Note">The C API SolClient package is distributed separately from the <MadCap:variable name="Product-Names.pubsub_cache"/> package. To download the C API SolClient package, go to https://products.solace.com, select Products &gt; APIs &gt; CCSMP &gt; the appropriate version.</p>
      </li>
      <li>
        <p>Stop the <MadCap:variable name="Product-Names.pubsub_cache"/> service.</p>
        <pre>service SolaceCache stop</pre>
      </li>
      <li>
        <p>Verify that the operation status of the <MadCap:variable name="Product-Names.pubsub_cache"/> Instance is <code>NotAvail</code>.</p>
      </li>
      <li>
        <p>Extract the <MadCap:variable name="Product-Names.pubsub_cache"/> software.</p>
        <pre xml:space="preserve">cd &lt;installdir&gt;
tar xfz /tmp/SolacheCache_Linux26-x64_opt_&lt;version&gt;.tar.gz</pre>
      </li>
      <li>
        <p>Extract the C API solclient software.</p>
        <pre>cd &lt;installdir&gt;<br/>tar xfz /tmp/solclient_Linux26-x64_opt_&lt;version&gt;.tar.gz<br/>mv solclient_&lt;version&gt; solclient<br/><br/></pre>
      </li>
      <li>
        <p>Start the <MadCap:variable name="Product-Names.pubsub_cache"/> software.</p>
        <pre>service SolaceCache start</pre>
      </li>
    </ol>
    <p>Once the cache instances restart, new messages can be published to the cache and then retrieved.</p>
    <h2><a name="upgrading-pubsub-cache-while-preserving-cached-messages"/>Upgrading <MadCap:variable name="Product-Names.pubsub_cache"/> While Preserving Cached Messages</h2>
    <p>You can upgrade <MadCap:variable name="Product-Names.pubsub_cache"/> without loss of cache messages or an interruption in service. For this upgrade to work, there must be multiple <MadCap:variable name="Product-Names.pubsub_cache"/> Instances in each Cache Cluster.</p>
    <p class="Caution">For this procedure to be successful, you must upgrade your  <MadCap:variable name="Product-Names.pubsub_cache"/> Instances one at a time, so that there is always at least one <MadCap:variable name="Product-Names.pubsub_cache"/> Instance running in each Cache Cluster. Follow the steps below
carefully to ensure this is the case.</p>
    <p>Before you start this upgrade, it's assumed that you have root access to the Linux server. The directory where <MadCap:variable name="Product-Names.pubsub_cache"/> is installed is <code>&lt;installdir&gt;</code>. The version of <MadCap:variable name="Product-Names.pubsub_cache"/> to be installed is <code>&lt;version&gt;</code>. The existing version of <MadCap:variable name="Product-Names.pubsub_cache"/> is <code>&lt;oldversion&gt;</code>. </p>
    <p>To upgrade <MadCap:variable name="Product-Names.pubsub_cache"/> while preserving cached messages, follow these steps:</p>
    <ol>
      <li>
        <p>Copy the <MadCap:variable name="Product-Names.pubsub_cache"/> package to the server.</p>
        <pre>/tmp/SolaceCache_Linux26-x64_opt_&lt;version&gt;.tar.gz</pre>
      </li>
      <li>
        <p>Copy the C-API solclient package to the server.</p>
        <pre>/tmp/solclient_Linux26-x64_opt_&lt;version&gt;.tar.gz</pre>
        <p class="Note">The C API SolClient package is distributed separately from the <MadCap:variable name="Product-Names.pubsub_cache"/> package. To download the C API SolClient package, go to https://products.solace.com, select Products &gt; APIs &gt; CCSMP &gt; the appropriate version.</p>
      </li>
      <li>
        <p>Rename the existing SolaceCache directory. Do not stop the <MadCap:variable name="Product-Names.pubsub_cache"/> Instances before doing this.</p>
        <pre xml:space="preserve">cd &lt;installdir&gt;
mv SolaceCache SolaceCache.&lt;oldversion&gt;</pre>
      </li>
      <li>
        <p>Rename the existing C API solclient directory.</p>
        <pre xml:space="preserve">cd &lt;installdir&gt;
mv solclient solclient.&lt;oldversion&gt;</pre>
      </li>
      <li>
        <p>Extract the <MadCap:variable name="Product-Names.pubsub_cache"/> software.</p>
        <pre xml:space="preserve">cd &lt;installdir&gt;
tar xfz /tmp/SolaceCache_Linux26-i386_opt_&lt;version&gt;.tar.gz</pre>
      </li>
      <li>
        <p>Extract the C API solclient software.</p>
        <pre xml:space="preserve">cd &lt;installdir&gt;
tar xfz /tmp/solclient_Linux26-i386_opt_&lt;version&gt;.tar.gz
mv solclient_&lt;version&gt; solclient</pre>
      </li>
      <li>
        <p>Copy the configuration files from your old SolaceCache directory to the newly created SolaceCache directory.</p>
        <pre xml:space="preserve">cd &lt;installdir&gt;
cp SolaceCache.&lt;oldversion&gt;/config/* SolaceCache/config</pre>
        <p class="Caution">The symbolic link that you created with your initial <MadCap:variable name="Product-Names.pubsub_cache"/> installation (ln <code>–s /usr/sw/SolaceCache/bin/servicescript/etc/init.d/SolaceCache</code>) now references the new <MadCap:variable name="Product-Names.pubsub_cache"/> service script. You must not use any service SolaceCache commands until the <MadCap:variable name="Product-Names.pubsub_cache"/> Instances have been restarted.</p>
      </li>
      <li>
        <p>Stop the first <MadCap:variable name="Product-Names.pubsub_cache"/> Instance. You must use <code>kill &lt;pid&gt;</code> to stop a single <MadCap:variable name="Product-Names.pubsub_cache"/> Instance (and not a service SolaceCache stop command).</p>
        <p style="font-weight: bold;">Example:</p>
        <p>Enter the following to identify the running <MadCap:variable name="Product-Names.pubsub_cache"/> Instance:</p>
        <pre>ps faxw | grep SolaceCache</pre>
        <p>The following sample output identifies two <MadCap:variable name="Product-Names.pubsub_cache"/> Instances running on the platform. The instances are identified by the configuration files <code>rp.ci.i1.txt</code> and <code>rp.c1.i2.txt</code>:</p>
        <pre xml:space="preserve">ps faxw | grep SolaceCache

2541 pts/1 S+ 0:00 \_ grep -i SolaceCache
2457 pts/1 S 0:00 /usr/bin/perl -w
/usr/sw/SolaceCache/bin/keepalive SolaceCache -f /usr/sw/
SolaceCache /config/rp.c1.i1.txt
2460 pts/1 S 0:00 \_ SolaceCache -f /usr/sw/ SolaceCache
/config/rp.c1.i1.txt
2461 pts/1 S 0:00 /usr/bin/perl -w /usr/sw/
SolaceCache /bin/keepalive SolaceCache -f /usr/sw/ SolaceCache
/config/rp.c1.i2.txt
2462 pts/1 S 0:00 \_ SolaceCache -f /usr/sw/ SolaceCache
/config/rp.c1.i2.txt</pre>
        <p>To stop a single instance, you must signal the <code>keepalive</code> script that is managing the instance. For example, to stop <code>rp.c1.i1</code>, enter <code>kill 2457</code>.</p>
      </li>
      <li>
        <p>Verify that the operation status of the <MadCap:variable name="Product-Names.pubsub_cache"/> Instance is <code>NotAvail</code>.</p>
      </li>
      <li>
        <p>Restart the <MadCap:variable name="Product-Names.pubsub_cache"/> Instance. You must restart this one instance only.</p>
        <p style="font-weight: bold;">Example:</p>
        <pre>service SolaceCache start rp.c1.i1</pre>
      </li>
      <li>
        <p>Wait for the <MadCap:variable name="Product-Names.pubsub_cache"/> Instance to completely synchronize to the other <MadCap:variable name="Product-Names.pubsub_cache"/> Instance in the Cache Cluster (In other words, the <MadCap:variable name="Product-Names.pubsub_cache"/> Instance operational state must be <code>Up</code>).</p>
      </li>
      <li>
        <p>Repeat Steps 9 to 11 for each <MadCap:variable name="Product-Names.pubsub_cache"/> Instance on the server.</p>
      </li>
      <li>
        <p>Repeat Steps 1 to 12 for each server that is running <MadCap:variable name="Product-Names.pubsub_cache"/> Instances.</p>
      </li>
      <li>
        <p>When all <MadCap:variable name="Product-Names.pubsub_cache"/> Instances are upgraded and running, you can optionally remove the old versions of the <MadCap:variable name="Product-Names.pubsub_cache"/> directory and solClient library directory created in Step 3 and Step 4.</p>
      </li>
    </ol>
  </body>
</html>
