<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1>Sample PubSub+ Cache Configuration</h1>
    <p>As message rates and topic space grows, you might want to divide the topic space amongst multiple Cache Clusters. This is done by configuring several Cache Clusters on the Designated Router, each with a unique subscription set. The Cache Clusters are grouped together through configuration on the Designated Router, to form a Distributed Cache.</p>
    <p>This example describes the tasks required to configure and start the PubSub+ Cache configuration shown in the figure below.</p>
    <p class="GraphicCaption"><a name="configuring_and_managing_solcache_541341864_290200"/>Distributed PubSub+ Cache Configuration Example</p>
    <p>
      <img class="solacethumbnail" src="Images/Distributed_Cache_Configuration_Example.jpg" style="mc-thumbnail-max-height: 800px;mc-thumbnail: link;border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;border-left-style: solid;border-left-width: 0px;border-right-style: solid;border-right-width: 0px;border-top-style: solid;border-top-width: 0px;border-bottom-style: solid;border-bottom-width: 0px;" alt="Distributed SolCache Configuration Example" title="click to enlarge"/>
    </p>
    <h2 class="with-rule"><a name="Configur"/>Configuration Information</h2>
    <p>This example assumes a network with PubSub+ Cache Instances running on one event broker (the Designated Router), and two Linux computers. Each of these three machines are hosting the following three individual PubSub+ Cache Instances, for a total of nine PubSub+ Cache Instances: </p>
    <ul>
      <li>one PubSub+ Cache Instance for Cache Cluster <code>bob</code></li>
      <li>one PubSub+ Cache Instance for Cache Cluster <code>joe</code></li>
      <li>one PubSub+ Cache Instance for Cache Cluster <code>fred</code></li>
    </ul>
    <p>Further, this example assumes that the three Cache Clusters are being used to create a Distributed Cache associated with Message VPN <code>blue</code>, where:</p>
    <ul>
      <li>Cache Cluster <code>bob</code> is responsible for the topic “animals/cats/&gt;”</li>
      <li>Cache Cluster <code>joe</code> is responsible for the topic “animals/bears/&gt;”</li>
      <li>Cache Cluster <code>fred</code> is responsible for the topic “animals/dogs/&gt;”</li>
    </ul>
    <p>Thus, the Designated Router for the Distributed Cache in this example is configured (through either CLI or SEMP) with the following information:</p>
    <ul>
      <li>Message VPN <code>blue</code><li>Distributed Cache <code>zoo</code></li><li>Cache Cluster <code>bob</code> <p>PubSub+ Cache Instances <code>bob1</code>, <code>bob2</code>, <code>bob3</code></p><p>Topics: <code>animals/cats/&gt;</code></p><p>Configuration file data for PubSub+ Cache Instances <code>bob1</code>, <code>bob2</code>, and <code>bob3</code>:</p><table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0"><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><thead><tr class="TableStyle-Table_Num-Head-Header1"><th class="TableStyle-Table_Num-HeadE-Column1-Header1">bob1</th><th class="TableStyle-Table_Num-HeadE-Column1-Header1">bob2</th><th class="TableStyle-Table_Num-HeadD-Column1-Header1">bob3</th></tr></thead><tbody><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME bob1
  SESSION_USERNAME cache 
  SESSION_PASSWORD cache 
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router) 
  SESSION_VPN_NAME blue 
  SESSION_CLIENT_NAME inst_bob1</pre></td><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME bob2   
  SESSION_USERNAME cache
  SESSION_PASSWORD cache
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_bob2</pre></td><td class="TableStyle-Table_Num-BodyA-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME bob3   
  SESSION_USERNAME cache
  SESSION_PASSWORD cache
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)
  SESSION_VPN_NAME blue
  SESSION_CLIENT_NAME inst_bob3</pre></td></tr></tbody></table></li></li>
    </ul>
    <ul>
      <li>Cache Cluster <code>joe</code><p>PubSub+ Cache Instances <code>joe1</code>, <code>joe2</code>, <code>joe3</code></p><p>Topics: <code>animals/bears/&gt;</code></p><p>Configuration file data for PubSub+ Cache Instances <code>joe1</code>, <code>joe2</code>, and <code>joe3</code>:</p><table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0"><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><thead><tr class="TableStyle-Table_Num-Head-Header1"><th class="TableStyle-Table_Num-HeadE-Column1-Header1">joe1</th><th class="TableStyle-Table_Num-HeadE-Column1-Header1">joe2</th><th class="TableStyle-Table_Num-HeadD-Column1-Header1">joe3</th></tr></thead><tbody><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME joe1   
  SESSION_USERNAME cache   
  SESSION_HOST &lt;msg-backbone_ip&gt;(for Designated Router)   
  SESSION_PASSWORD cache   
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_joe1</pre></td><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME joe2   
  SESSION_USERNAME cache   
  SESSION_PASSWORD cache   
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)   
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_joe2</pre></td><td class="TableStyle-Table_Num-BodyA-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME joe3   
  SESSION_USERNAME cache   
  SESSION_PASSWORD cache   
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)   
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_joe3</pre></td></tr></tbody></table></li>
    </ul>
    <ul>
      <li>Cache Cluster <code>fred</code><p>PubSub+ Cache Instances <code>fred1</code>, <code>fred2</code>, <code>fred3</code></p><p>Topics: <code>animals/dogs/&gt;</code></p><p>Configuration file data for PubSub+ Cache Instances <code>fred1</code>, <code>fred2</code>, and <code>fred3</code>:</p><table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0"><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><thead><tr class="TableStyle-Table_Num-Head-Header1"><th class="TableStyle-Table_Num-HeadE-Column1-Header1">fred1</th><th class="TableStyle-Table_Num-HeadE-Column1-Header1">fred2</th><th class="TableStyle-Table_Num-HeadD-Column1-Header1">fred3</th></tr></thead><tbody><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME fred1   
  SESSION_USERNAME cache   
  SESSION_PASSWORD cache   
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)   
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_fred1</pre></td><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME fred2   
  SESSION_USERNAME cache   
  SESSION_PASSWORD cache   
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)   
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_fred2</pre></td><td class="TableStyle-Table_Num-BodyA-Column1-Body1"><pre xml:space="preserve">CACHE_INSTANCE_NAME fred3   
  SESSION_USERNAME cache   
  SESSION_PASSWORD cache   
  SESSION_HOST &lt;msg-backbone_ip&gt; (for Designated Router)   
  SESSION_VPN_NAME blue   
  SESSION_CLIENT_NAME inst_fred3</pre></td></tr></tbody></table></li>
    </ul>
    <h2 class="with-rule"><a name="Distribu"/>Distributed PubSub+ Cache Configuration</h2>
    <p class="Note">As of appliance release <MadCap:variable name="Variables.Appliance Release Version"/>, operations that could only be performed by root, can now also be performed by a Sysadmin User. For information on configuring Sysadmin Users, refer to <MadCap:xref href="../../Admin/Configuring-Multiple-Shell-Users.htm">Configuring Multiple Linux Shell Users</MadCap:xref>.</p>
    <p>The following configuration results in the Distributed Cache topology shown in the figure, <MadCap:xref href="#configuring_and_managing_solcache_541341864_290200">Distributed PubSub+ Cache Configuration Example</MadCap:xref>.</p>
    <ol>
      <li>If not done already, unlock the PubSub+ Cache feature on the Designated Router:
            <p class="Code">solace&gt;enable<br/>solace# admin<br/>solace(admin)# product-key &lt;key-value&gt;<br/>solace(admin)# exit</p></li>
      <li>Create the Distributed Cache <code>zoo:</code><p class="Code">solace# configure<br/>solace(config)# create distributed-cache zoo message-vpn blue<br/>solace(config-distributed-cache)#</p></li>
      <li>
        <p>Create the Cache Cluster <code>bob</code>:</p>
        <p class="Code">solace(config-distributed-cache)# create cache-cluster bob<br/>solace(config-distributed-cache-cluster)#</p>
      </li>
      <li>Add topic <code>animals/cats/&gt;</code> to Cache Cluser <code>bob</code>:<p class="Code">solace(config-distributed-cache-cluster)# <br/>topic animals/cats/&gt;</p></li>
      <li>Create and start PubSub+ Cache Instances <code>bob1</code>, <code>bob2</code>, and <code>bob3</code> under the Cache Cluster <code>bob:</code><p class="Code">solace(config-distributed-cache-cluster)# create cache-instance bob1<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)# create cache-instance bob2<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)# create cache-instance bob3<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)#</p><p>Then, following the instructions provided within the <code>sampleConfig.txt</code> file, edit an individual copy of the file with the specifics for your PubSub+ Cache configuration for each PubSub+ Cache Instance. Choose a name for each configuration file (for example, Configbob1.txt, Configbob2.txt, Configbob3.txt) and save the “bob1” configuration file to <code>/usr/sw/solcache/config</code> onto Router #1 through the ‘user root access’ account, the “bob2” configuration file onto Linux Server #1, and the “bob3” configuration file onto Linux Server #2. </p><p>Following the steps described within the README file (included with the PubSub+ Cache installation package), start the PubSub+ Cache Instances through the ‘user root access’ account on Router #1, and start the PubSub+ Cache Instances on Linux Server #1 and Linux Server #2.</p></li>
      <li>Start the Cache Cluster <code>bob</code>: <p class="Code">solace(config-distributed-cache-cluster)# no shutdown<br/>solace(config-distributed-cache-cluster)# exit</p></li>
      <li>Create the Cache Cluster <code>joe</code>:     <p class="Code">solace(config-distributed-cache)# create cache-cluster joe<br/>solace(config-distributed-cache-cluster)#</p></li>
      <li>Add topic “animals/bears/&gt;” to Cache Cluster <code>joe</code>:
			<p class="Code">solace(config-distributed-cache-cluster)# topic animals/bears/&gt;</p></li>
      <li>Create and start PubSub+ Cache Instances <code>joe1</code>, <code>joe2</code>, and <code>joe3</code> under the Cache Cluster <code>joe</code>:
				<p class="Code">solace(config-distributed-cache-cluster)# create cache-instance joe1<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)# create cache-instance joe2<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)# create cache-instance joe3<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit</p><p>Then, following the instructions provided within the <code>sampleConfig.txt</code> file, edit an individual copy of the file with the specifics for your PubSub+ Cache configuration for each PubSub+ Cache Instance. Choose a name for each configuration file (for example, <code>Configjoe1.txt</code>, <code>Configjoe2.txt</code>, <code>Configjoe3.txt</code>) and save the <code>Configjoe1 </code>file to <code>/usr/sw/solcache/config</code> onto Router #1 through the ‘user root access’ account, the <code>Configjoe2 </code>file onto Linux Server #1, and the <code>Configjoe3 </code>file onto Linux Server #2. </p><p>Following the steps described within the README file (included with the PubSub+ Cache installation package), start the PubSub+ Cache Instances through the ‘user root access’ account on Router #1, and start the PubSub+ Cache Instances on Linux Server #1 and Linux Server #2.</p></li>
      <li>Start the Cache Cluster <code>joe</code>:   <p class="Code">solace(config-distributed-cache-cluster)#<br/>solace(config-distributed-cache-cluster)# no shutdown<br/>solace(config-distributed-cache-cluster)# exit</p></li>
      <li>Create the Cache Cluster <code>fred</code>:<p class="Code">solace(config-distributed-cache)# create cache-cluster fred</p></li>
      <li>Add topic “animals/dogs/&gt;” to Cache Cluster <code>fred</code>:<p class="Code">solace(config-distributed-cache-cluster)# topic animals/dogs/&gt;</p></li>
      <li>Create and start PubSub+ Cache Instances <code>fred1</code>, <code>fred2</code>, and <code>fred3</code> under the Cache Cluster <code>fred</code>:
				<p class="Code">solace(config-distributed-cache-cluster)# create cache-instance fred1<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)# create cache-instance fred2<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)# create cache-instance fred3<br/>solace(config-distributed-cache-cluster-instance)# no shutdown<br/>solace(config-distributed-cache-cluster-instance)# exit<br/>solace(config-distributed-cache-cluster)#</p><p>Then, following the instructions provided within the <code>sampleConfig.txt</code> file, edit an individual copy of the file with the specifics for your PubSub+ Cache configuration for each PubSub+ Cache Instance. Choose a name for each configuration file (for example, <code>Configfred1.txt</code>, <code>Configfred2.txt</code>, <code>Configfred3.txt</code>) and save the Configfred1 file to <code>/usr/sw/solcache/config</code> onto Router #1 through the ‘user root access’ account, the <code>Configfred2 </code>file onto Linux Server #1, and the <code>Configfred3</code> file onto Linux Server #2. </p><p>Following the steps described within the README file (included with the PubSub+ Cache installation package), start the PubSub+ Cache Instances through the ‘user root access’ account on Router #1, and start the PubSub+ Cache Instances on Linux Server #1 and Linux Server #2.</p></li>
      <li>Start the Cache Cluster <code>fred</code>:<p class="Code">solace(config-distributed-cache-cluster)# no shutdown<br/>solace(config-distributed-cache-cluster)# exit</p></li>
      <li>Start the Distributed Cache <code>zoo</code>:<p class="Code">solace(config-distributed-cache)# no shutdown</p></li>
      <li>Run the <b>start</b> Distributed Cache Admin EXEC command to put all PubSub+ Cache Instances into service: <p class="Code">solace(config-distributed-cache)# exit<br/>solace(config)# exit<br/>solace# admin<br/>solace(admin)# distributed-cache zoo message-vpn blue<br/>solace(admin-distributed-cache)# start </p></li>
    </ol>
  </body>
</html>
