<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    </head>
  <body>
    <p>Record the host locations of the storage elements.</p>
    <p>Before removing the container in the next step, it is important to record the host locations of the storage elements so that they can be re-attached to the new instance. To get information on volumes and the host path to each volume, click on <b>Finding Host Path to Volumes</b> below.</p>
    <MadCap:dropDown>
      <MadCap:dropDownHead>
        <MadCap:dropDownHotspot><a name="Finding_Host_Path_to_Volumes" style="padding-bottom: 10px;display: inline-block;"/>Finding Host Path to Volumes</MadCap:dropDownHotspot>
      </MadCap:dropDownHead>
      <MadCap:dropDownBody>
        <p>You can use <code>docker inspect &lt;container&gt;</code> to view volumes that belong to a container, as shown in the example below.</p>
        <pre class="Code_Grayed">docker inspect solace
"Mounts": [
   {
       "Type": "volume",
       "Name": "adb",
       "Source": "/var/lib/docker/volumes/adb/_data",
       "Destination": "/usr/sw/internalSpool/softAdb",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "jail",
       "Source": "/var/lib/docker/volumes/jail/_data",
       "Destination": "/usr/sw/jail",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "diagnostics",
       "Source": "/var/lib/docker/volumes/diagnostics/_data",
       "Destination": "/var/lib/solace/diags",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "var",
       "Source": "/var/lib/docker/volumes/var/_data",
       "Destination": "/usr/sw/var",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },</pre>
        <p> If the mount type is not a volume then use the source as the host path. If the mount type is a volume, then use the <code> docker volume inspect &lt;volume&gt;</code> command. In the example below, either the <code>Mountpoint</code> or the <code>device</code> directory can be used as the host path to the jail volume.	If you have the <code>device</code> directory configured, use that as the host path to the <code>jail</code> volume. If you don't have the <code>device</code> directory configured then use the<code> Mountpoint</code> directory.</p>
        <pre class="Code_Grayed">docker volume inspect jail
[
      {
            "CreatedAt": "2019-10-23T14:11:49Z",
            "Driver": "local",
            "Labels": {},
            "Mountpoint": "/var/lib/docker/volumes/jail/_data",
            "Name": "jail",
            "Options": {
            "device": "/mnt/vmr/jail",
            "o": "bind",
            "type": "none"
            },
            "Scope": "local"cons
      }
]</pre>
      </MadCap:dropDownBody>
    </MadCap:dropDown>
  </body>
</html>
