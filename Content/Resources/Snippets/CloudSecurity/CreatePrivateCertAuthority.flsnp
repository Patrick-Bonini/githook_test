<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <body>
    <p>Certificates signed by a public certificate authority (CA) are expensive and are  necessary only if you want to allow clients from the public to connect to your <MadCap:variable name="Product-Names.broker_cloud_short"/>. Typically, this is not the case, so an internal CA is suitable. An internal CA is also potentially more secure because your organization controls the entire certificate issuing process.</p>
    <p>To create your own internal CA, you can use OpenSSL, which is included in most Linux-based operating systems. You can install it on most operating systems if it is not already available. For details on installing OpenSSL, <a class="link-offsite" href="https://wiki.openssl.org/index.php/Binaries">see the OpenSSL Wiki</a>. </p>
    <p>All you need to do to create your own internal CA is generate a private key to sign client certificates and a CA certificate that you can distribute to validate that your CA is the signer. To create an internal CA:</p>
    <ul>
      <li>Use Open SSL to generate a private key and a public certificate for the CA. The command below generates two files, one for the private key and one for the public certificate. The certificate common name will be *.messaging.solace.cloud, as specified as part of the <b>-subj</b> parameter in the command line. If you prefer to enter the common name and the other values interactively, omit the <b>-subj</b> parameter.
<pre class="Code" xml:space="preserve">openssl req -newkey rsa:2048 -nodes -keyout MyRootCaKey.key -x509 -days 365 -out MyRootCaCert.pem -subj "/C=GB/ST=London/L=London/O=Global Security/OU=IT Department/CN=*.messaging.solace.cloud"</pre></li>
    </ul>
    <p>Make sure you store the private key file (<code>MyRootCaKey.key</code>) in a safe place. You can make the certificate public. You will upload it to the <MadCap:variable name="Product-Names.broker_cloud_short"/> later.</p>
  </body>
</html>
