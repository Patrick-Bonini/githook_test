<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../../TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <p>A Kafka sender converts Solace messages to Kafka events and propagates those events to a remote Kafka cluster. When you create a Kafka sender, the event broker automatically creates a  client for each Kafka sender, which binds to the same queues as the Kafka sender. The client name is <code>#kafka/tx/&lt;tx-name&gt;</code>, and the client username is <code>#kafka/tx/&lt;tx-name&gt;</code>. The client username uses the <code>#kafka</code> client-profile and <code>#acl-profile</code> acl-profile.</p>
    <p>If no other Kafka senders or receivers  exist on the <MadCap:conditionalText MadCap:conditions="SAP.SapHideFromOutput">Message VPN</MadCap:conditionalText><MadCap:variable name="Product-Names.broker_cloud_short" MadCap:conditions="SAP.SapOnlyOutput"/>, the event broker also creates a single client-profile, named <code>#kafka</code>, This profile is required by the Kafka senders and receivers. This profile is created when you create the first Kafka sender or receiver and removed if you delete all of the Kafka senders and receivers.</p>
    <p>To create a Kafka sender, perform these steps:</p>
    <ol>
      <MadCap:snippetBlock src="../open-broker-manager.flsnp">
            </MadCap:snippetBlock>
      <li>In the  navigation bar, click <b>Bridges</b>.</li>
      <li>Select the <b>Kafka Bridges</b> tab.</li>
      <li>Select the <b>Kafka Senders</b> tab.</li>
      <li>Click <b>+ Kafka Sender</b>.</li>
      <li>Enter a <b>Name</b> for the sender and click <b>Create</b>.</li>
      <li>Set the following options for the sender:<p><table style="width: 100%;mc-table-style: url('../../../TableStyles/Table_Num.css');margin-left: auto;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0"><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><thead><tr class="TableStyle-Table_Num-Head-Header1"><th class="TableStyle-Table_Num-HeadE-Column1-Header1">Option</th><th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th></tr></thead><tbody><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1"><p>Enabled</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p>Specifies whether the Kafka sender is enabled.</p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1"><p>Bootstrap Address List</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p>Specifies the fully qualified domain name (FQDN) or IP address and optional port of one Kafka broker in a Kafka cluster where the Kafka receiver can fetch the state of the entire cluster. The bootstrap addresses must resolve to an appropriately configured and compatible listener port on the Kafka broker for the selected authentication scheme. If you do not provide a port, the default port is 9092. </p><p>You can configure a comma-separated list of addresses for the Kafka sender to try in the event that an attempt to connect to the first address  fails.</p><p>Specify IPv4 addresses in the dotted decimal notation form, <code>nnn.nnn.nnn.nnn</code>.  You must enclose IPv6  addresses in square brackets. Specify the port as a numeric value from 0 to 65535.</p><p>For example, a correctly formatted IPv4 address is: <code>192.168.100.1:9092</code>. The same address in IPv6 format is <code>[::ffff:c0a8:6401]:9092</code>. The address corresponds to the <code>bootstrap.servers</code> Kafka consumer API parameter. </p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1">Idempotence Enabled</td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p>Specifies whether idempotence is enabled. Idempotence guarantees in order at-least-once message delivery to the remote Kafka topic, at the expense of performance. If you enable this option, each queue binding configured for the Kafka sender must have the acknowledgment mode set to <code>all</code> to be operational.</p><p>This setting corresponds to the <code>enable.idempotence</code> Kafka producer API parameter.</p><MadCap:snippetBlock src="../kafka-imdepotence.flsnp"/></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyE-Column1-Body1">Authentication Scheme</td><td class="TableStyle-Table_Num-BodyD-Column1-Body1"><p>Specifies the authentication scheme that the Kafka sender uses to establish a connection to the remote Kafka cluster. The options are:</p><ul><li><b>None</b>—no authentication required</li><li><b>Basic</b>—log in with a specified username and password</li><li><b>Scram</b>—log in with Salted Challenge Response Authentication (SCRAM). You must specify a username, password, and the SCRAM hash</li><li><b>Client Certificate</b>—log in with a client certificate. You must specify the PEM formatted content for the client certificate and the password for the certificate. The specified client certificate can also be used to identify the Kafka receiver with other authentication schemes.</li><li><b>Kerberos</b>—log in with the Kerberos mechanism. You must specify the service name of the remote Kafka broker, the user principal name of the Kafka sender, and the keytab file for the Kafka sender. </li><li><b>OAuth Client</b>—log in with OAuth 2.0 client credentials. You must specify the OAuth client ID, token endpoint URL, and the OAuth scope.</li></ul></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1">Compression Enabled</td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p>Specifies whether compression is enabled for the Kafka sender. If you enable compression, you must specify the compression type and level.</p><p>The compression type corresponds to the <code>compression.codec</code> Kafka producer API parameter. The options are:</p><ul><li><b>Gzip</b>—use Gzip compression</li><li><b>Snappy</b>—use Snappy compression</li><li><b>Lz4</b>—use LZ4 compression.</li><li><b>Zstd</b>—use Zstandard compression</li></ul><p>The compression level  corresponds to the <code>compression.level</code> Kafka producer API parameter. The options are:</p><ul><li><code>-1</code>—use the codec-dependent default compression level</li><li><code>0</code>-<code>9</code> is valid for Gzip compression</li><li><code>0</code> is valid for Snappy compression</li><li><code>0</code>-<code>12</code> is valid for LZ4 compression</li><li><code>0</code>-<code>22</code> is valid for Zstandard compression</li></ul></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><p>Encryption Enabled</p></td><td class="TableStyle-Table_Num-BodyA-Column1-Body1"><p>Specifies whether TLS encryption is enabled for the Kafka sender. The bootstrap addresses must resolve to PLAINTEXT or SASL_PLAINTEXT listener ports when encryption is disabled, and SSL or SASL_SSL listener ports when encryption is enabled.</p></td></tr></tbody></table></p></li>
      <li style="font-weight: normal;">(Optional) Click <b>Show Advanced Settings</b> and set any of the following options for the receiver:
                <p><table style="width: 100%;mc-table-style: url('../../../TableStyles/Table_Num.css');margin-left: auto;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0"><col class="TableStyle-Table_Num-Column-Column1"/><col class="TableStyle-Table_Num-Column-Column1"/><thead><tr class="TableStyle-Table_Num-Head-Header1"><th class="TableStyle-Table_Num-HeadE-Column1-Header1">Option</th><th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th></tr></thead><tbody><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1"><p>Delay</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p>Specifies the delay in milliseconds to wait before accumulating a batch of messages to send to the Kafka cluster.</p><p>This setting corresponds to the <code>queue.buffering.max.ms</code> Kafka producer API parameter. </p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyH-Column1-Body1"><p>Max Message Count</p></td><td class="TableStyle-Table_Num-BodyG-Column1-Body1"><p>Specifies the maximum number of messages to send to the Kafka cluster in a single batch. This setting corresponds to the <code>batch.num.messages</code> Kafka producer API parameter. </p></td></tr><tr class="TableStyle-Table_Num-Body-Body1"><td class="TableStyle-Table_Num-BodyB-Column1-Body1"><p>Max Size</p></td><td class="TableStyle-Table_Num-BodyA-Column1-Body1"><p>Specifies the maximum size of a message batch, in bytes.</p><p>This setting corresponds to the <code>batch.size</code> Kafka producer API parameter. </p></td></tr></tbody></table></p></li>
      <li>Click <b>Apply</b>.</li>
    </ol>
  </body>
</html>
