<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <body>
    <p>For the connector to process object messages, it requires access to the classes that define the object payloads.</p>
    <p>Assuming that your payload classes are in their own projects, and are packaged into their own JAR files, place these JAR files and their dependencies (if any) onto the connector’s <code>CLASSPATH</code>, see <a href="./Adding-External-Libraries.htm" class="link-internal">Adding External Libraries</a>.</p>
    <div class="note">
      <ul>
        <li>
          <p> It is recommended that these JAR files only contain the relevant payload classes to prevent any oddities.</p>
        </li>
        <li>
          <p>In the JAR files, your class files must be archived in the same directory/classpath as the application that publishes them. For example, if the source application is publishing a message with payload type, <code>MySerializablePayload</code>, defined under classpath <code>com.sample.payload</code>, then when packaging the payload jar for the connector, the <code>MySerializablePayload</code> class must still be accessible under the <code>com.sample.payload</code> classpath.</p>
          <p>Typically, build tools such as Maven or Gradle handle this archival process when packaging the JAR files.</p>
        </li>
      </ul>
    </div>
  </body>
</html>
