<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <body>
    <h2>Providing Configuration</h2>
    <p>For information about  about how the connector detects configuration properties, see <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config" target="_blank" class="link-offsite">Spring Boot: Externalized Configuration</a>.</p>
    <h3>Converting Canonical Spring Property Names to Environment Variables</h3>
    <p>For information about converting the Spring property names to environment variables, see the <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.typesafe-configuration-properties.relaxed-binding.environment-variables" target="_blank" class="link-offsite">Spring documentation</a>.</p>
    <h3>Spring Profiles</h3>
    <p>If multiple configuration files exist within the same configuration directory for use in different environments (development, production, etc.), use Spring profiles.</p>
    <p>Using Spring profiles allow you to define different application property files under the same directory using the filename format, <code>application-{profile}.yml</code>.</p>
    <p>For example:</p>
    <ul>
      <li><code>application.yml</code>: The properties in non-specific files that always apply. Its properties are overridden by the properties defined in profile-specific files.</li>
      <li><code>application-dev.yml</code>: Defines properties specific to the development environment.</li>
      <li><code>application-prod.yml</code>: Defines properties specific to the production environment.</li>
    </ul>
    <p>Individual profiles can then be enabled by setting the <code>spring.profiles.active</code> property. See <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.files.profile-specific" target="_blank" class="link-offsite">Spring Boot: Profile-Specific Files</a> for more information and an example.</p>
    <h3><a name="_bookmark57"/>Configuring Locations to Find Spring Property Files</h3>
    <p>By default, the connector detects any Spring property files as described in the <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.files" class="link-offsite" target="_blank">Spring Boot’s default locations</a>.</p>
    <ul>
      <li>
        <p>If you want to add additional locations, add <code>--spring.config.additional-location=file:&lt;custom-config-dir&gt;</code>.</p>
      </li>
      <li>
        <p>If you want to exclusively use the locations that you’ve defined and ignore Spring Boot’s default locations, add <code>--spring.config.location=optional:classpath:/,optional:classpath:/config/,file:&lt;custom-config-dir&gt;</code>.</p>
      </li>
    </ul>
  </body>
</html>
