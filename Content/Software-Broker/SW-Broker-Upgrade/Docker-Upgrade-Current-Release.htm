<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/Stylesheets/Tabbed_Content.css" rel="stylesheet"/>
  </head>
  <body><h1><MadCap:concept term="Software"/>Docker Upgrade</h1><p>On this page you'll find procedures to upgrade your Solace PubSub+ event broker Docker images to version 9.11.0 or later (the current version is <MadCap:variable name="Manifest-Products-Routers.SolOS VMR"/>).</p><ul class="nav tabs"><li><a class="tab" href="#standlone">Standalone from 9.10.0+ </a></li><li><a class="tab" href="#redundant">HA Group from 9.10.0+</a></li><li><a class="tab" href="#redundant-orch">HA Group from 9.10.0+ with Orchestration Tool</a></li></ul><div id="standlone"><h2 class="with-rule"><a name="Upgradin"/>Upgrade a Standalone Docker Image from Version <MadCap:variable name="Minimum-Supported-Component-Versions.SW Broker Upgrade"/>+</h2><p>To upgrade a Solace PubSub+ event broker container instance, the user must delete the existing container instance and replace it with a new container instance running the target version. To preserve the existing state, the new container instance must be deployed with the storage elements from the existing instance. </p><p>This upgrade procedure will preserve the event broker’s configuration and stored messages.  All of the persistent data needed to recreate a PubSub+ instance is contained in the <a href="../Configuring-Storage.htm" class="link-internal">storage elements</a>.  At a minimum, the <code>var</code> and <code>internalSpool</code> storage elements must be preserved in order to successfully upgrade an event broker instance.</p><p>This procedure describes upgrading from PubSub+ Enterprise to PubSub+ Enterprise.</p><p>On non-Enterprise event brokers, the following upgrades are also supported:</p><ul><li>from Evaluation to Enterprise</li><li>from Standard to Standard</li><li>from Standard to Enterprise</li></ul><p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word ‘enterprise’ and change as needed).</p><p>The following procedure is one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly. </p><p>To upgrade a standalone Docker image from version <MadCap:variable name="Minimum-Supported-Component-Versions.SW Broker Upgrade"/>+ to version 9.11.0 or later:</p><ol><li>Log into the Docker host.</li><li>Copy the tar file to the Docker host:</li><pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:<br/><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p><li>
                Load the new software event broker Docker version into Docker:
                <pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre><MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Standalone.flsnp"/></li><li><p>Stop the Docker instance:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 1200 solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/Upgrade/Host-Path-To-Volumes.flsnp"/></li><li><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/Upgrade/Docker-Create-Upgrade.flsnp"/></li><li><p>Restart software event broker Docker container.</p><pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre></li></ol><p>When the software event broker Docker container restarts, it will be running the configuration and message-spool from the previous version.</p><p>You have completed this procedure.</p></div><div id="redundant"><h2 class="with-rule"><a name="Upgradin"/>Upgrade a Redundant Docker Image Group from Version <MadCap:variable name="Minimum-Supported-Component-Versions.SW Broker Upgrade"/>+</h2><p>To upgrade a Solace PubSub+ event broker container instance, the user must delete the existing container instance and replace it with a new container instance running the target version. To preserve the existing state, the new container instance must be deployed with the storage elements from the existing instance. </p><p>This upgrade procedure will preserve the event broker’s configuration, including Redundancy and the spooled messages while providing service.  All of the persistent data needed to recreate a PubSub+ instance is contained in the storage elements.  At a minimum, the <code>var</code> and <code>internalSpool</code> storage elements must be preserved in order to successfully upgrade an event broker instance.</p><p>The procedure below describes upgrading from PubSub+ Enterprise to PubSub+ Enterprise.</p><p>On non-Enterprise event brokers, the following upgrades are also supported:</p><ul><li>from Evaluation to Enterprise</li><li>from Standard to Standard</li><li>from Standard to Enterprise</li></ul><p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word ‘enterprise’ and change as needed).</p><p>For the following procedure, we will refer ‘solace-primary’ as Primary Node, ‘solace-backup’ as Backup Node, and ‘solace-monitor’ as Monitoring Node.</p><p class="Note">It is important to reboot the three software event brokers one at a time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p><p>To upgrade a redundant Docker image group from version <MadCap:variable name="Minimum-Supported-Component-Versions.SW Broker Upgrade"/>+ to version 9.11.0 or later, perform the following steps:</p><ul><li><a href="#Step" class="link-internal">Step 1: Check the redundancy configuration on each node</a></li><li><a href="#Step2" class="link-internal">Step 2: Upgrade the monitoring node</a></li><li><a href="#Step3" class="link-internal">Step 3: Upgrade the backup node</a></li><li><a href="#Step4" class="link-internal">Step 4: Upgrade the primary node</a></li></ul><h3><a name="Step"/>Step 1</h3><p>Check the redundancy configuration on each node.</p><ol><li><p>Log into each node as an admin user.</p></li><li><p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on each node. On solace-primary the Message Spool Status should be AD-Active, and on solace-backup the Message Spool Status should be AD-Standby:</p><pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Primary
Mate Router Name         : solace-backup
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Local Active       Shutdown
Routing Interface              intf0:1            intf0:1
Routing Interface Status       Up                 
VRRP Status                    Initialize         
VRRP Priority                  250                
Message Spool Status           AD-Active          
Priority Reported By Mate      Standby   

solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Backup
Mate Router Name         : solace-primary
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Mate Active
Routing Interface              intf0:1            intf0:1
Routing Interface Status                          Up
VRRP Status                                       Initialize
VRRP Priority                                     100
Message Spool Status                              AD-Standby
Priority Reported By Mate                         Active

solace-monitor&gt; <b>show redundancy</b>
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Monitoring Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
</pre></li></ol><h3><a name="Step2"/>Step 2</h3><p>Perform the following steps on the monitoring node.</p><ol><li><p>Log into the solace-monitoring Docker host.</p><p class="Note">Step 1 to step 10 illustrate one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li><p>Load the new event broker Docker version into Docker:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker inspect solace</b></pre></li><li><p>Stop the docker instance:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker stop --time 1200 solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/Upgrade/Host-Path-To-Volumes.flsnp"/></li><li><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker rm solace</b></pre></li><li><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  Note that the <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only:</p><pre class="Code" xml:space="preserve">[user@host /]# exit
[sysadmin@solace-monitor ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \
--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <MadCap:xref href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm#top">Configuration Key Usage</MadCap:xref>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container’s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li><p>Restart event broker Docker container:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker start solace</b></pre><p>When solace-monitor restarts, it will be running the configuration and message-spool from the previous version.</p></li><li><p>Log into the monitoring node and confirm that it is running the new version:</p><pre class="Code">solace-monitor&gt; <b>show version</b></pre></li><li><p>Ensure Redundancy Status is Up on solace-monitor:</p><pre class="Code">solace-monitor&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li></ol><h3><a name="Step3"/>Step 3</h3><p>Perform the following steps on  the backup node.</p><ol><li><p>Log into the backup node as an admin user.</p></li><li><p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on solace-backup:</p><pre class="Code" xml:space="preserve">solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li><p>If using Config-sync, ensure that it is in sync:</p><pre class="Code" xml:space="preserve">solace-backup&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre></li><li><p>Log into solace-backup Docker host.</p><p class="Note">Step 4 to step 14 illustrate one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li><p>Load the new event broker Docker version into Docker:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker inspect solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Redundant.flsnp"/></li><li><p>Stop the Docker instance:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker stop --time 1200 solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/Upgrade/Host-Path-To-Volumes.flsnp"/></li><li><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker rm solace</b></pre></li><li><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  Note that the <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only:</p><pre class="Code" xml:space="preserve">[user@host /]# exit
[sysadmin@solace-backup ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \
--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <MadCap:xref href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm#top">Configuration Key Usage</MadCap:xref>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container’s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li><p>Restart event broker Docker container:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker start solace</b></pre><p>When solace-backup restarts, it will be running the configuration and message-spool from the previous version.</p></li><li><p>Log into solace-backup and confirm that it is running the new version:</p><pre class="Code">solace-backup&gt; <b>show version</b></pre></li><li><p>Ensure Redundancy Status is Up on solace-backup:</p><pre class="Code">solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li><p>If using Config-sync, ensure that it is in sync:</p><pre class="Code" xml:space="preserve">solace-backup&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre></li><li><p>If the backup node provides AD service, ensure the Message Spool Status is AD-Standby:</p><pre class="Code">solace-backup&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre></li></ol><h3><a name="Step4"/>Step 4</h3><p>Perform the following steps on the primary node.</p><ol><li><p>Log into the primary node as an admin user.</p></li><li><p>Release activity from the primary node to the backup:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>enable</b>
solace-primary&gt; <b>configure</b>
solace-primary&gt; <b>redundancy release-activity</b>
</pre></li><li><p>On the primary node, ensure Redundancy Configuration Status is Enabled-Released and Redundancy Status is Down:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled-Released
Redundancy Status        : Down
</pre></li><li><p>On the backup node, ensure Redundancy Configuration Status is Enabled, Redundancy Status is Down and the Activity Status on the Backup Virtual Router is Local Active:</p><pre class="Code">Solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Down

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Local Active
</pre></li><li><p>Log into the solace-primary Docker host.</p><p class="Note">Step 5 to step 15 illustrate one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace-prmiary ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li><p>Load the new event broker version into Docker:</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker inspect solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Redundant.flsnp"/></li><li><p>Stop the Docker instance:</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker stop --time 1200 solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/Upgrade/Host-Path-To-Volumes.flsnp"/></li><li><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker rm solace</b></pre></li><li><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  Note that the <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only:</p><pre class="Code" xml:space="preserve">[user@host /]# exit
[sysadmin@solace-primary ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <MadCap:xref href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm#top">Configuration Key Usage</MadCap:xref>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container’s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li><p>Restart event broker Docker container:</p><pre class="Code">[sysadmin@ solace-primary ~]$ <b>docker start solace</b></pre><p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p></li><li><p>Log into solace-primary and confirm that it is running the new version:</p><pre class="Code">solace-primary&gt; <b>show version</b></pre></li><li><p>No Release activity from the primary node:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>enable</b>
solace-primary&gt; <b>configure</b>
solace-primary&gt; <b>no redundancy release-activity</b></pre></li><li><p>Ensure Redundancy Status is Up on solace-primary:</p><pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li><p>If using Config-sync, ensure that it is in sync:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre></li><li><p>If the node provides AD service, ensure the Message Spool Status is AD-Standby:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre></li></ol><p>You have completed this procedure.</p><p class="Note">The backup is now active and the primary is standby. For instructions describing how to revert the activity back to the primary, refer to <MadCap:xref href="../../Features/HA-Redundancy/Maintaining-Event-Broker-Redundancy-All-Broker.htm#Give-Up-Activity">Forcing Backups to Give Up Activity to Primaries</MadCap:xref>.</p></div><div id="redundant-orch"><h2 class="with-rule"><a name="Upgradin2"/>Upgrade a Redundant Docker Image Group from Version <MadCap:variable name="Minimum-Supported-Component-Versions.SW Broker Upgrade"/>+ Using an Orchestration Tool</h2><div class="Caution"><p>This procedure is specifically for upgrades using a container orchestration tool such as Kubernetes. The capabilities of such tools vary widely. For example, some do provide the flexibility to control the order in which an HA pair of Solace event brokers can be upgraded. When possible, it is recommended to use the upgrade procedure ‘Upgrading Redundant Docker Image Group’ as it may reduce the number of activity switchover and ensures config-sync is in-sync during the upgrade. Otherwise, the procedure in this section is provided.</p></div><p>To upgrade a Solace PubSub+ event broker container instance, the user must delete the existing container instance and replace it with a new container instance running the target version. To preserve the existing state, the new container instance must be deployed with the storage elements from the existing instance. </p><p>This upgrade procedure will preserve the event broker’s configuration and stored messages.  All of the persistent data needed to recreate a PubSub+ instance is contained in the <a href="../Configuring-Storage.htm" class="link-internal">storage elements</a>.  At a minimum, the <code>var</code> and <code>internalSpool</code> storage elements must be preserved in order to successfully upgrade an event broker instance.</p><p>This procedure describes upgrading from PubSub+ Enterprise to PubSub+ Enterprise.</p><p>On non-Enterprise event brokers, the following upgrades are also supported:</p><ul><li>from Evaluation to Enterprise</li><li>from Standard to Standard</li><li>from Standard to Enterprise</li></ul><p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word ‘enterprise’ and change as needed).</p><p>The nodes (primary, backup and monitoring) can be upgrades in any order.</p><p class="Note">It is important to reboot the three software event brokers one at time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p><p>To upgrade a redundant Docker image group from version <MadCap:variable name="Minimum-Supported-Component-Versions.SW Broker Upgrade"/>+ to version 9.11.0 or later using an orchestration tool:</p><ol><li><p>Pick a node not upgraded yet.</p></li><li><p>Log into the node as an admin user.</p></li><li><p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on:</p><pre class="Code">solace&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre><p>The following step 4 to 11 illustrates one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li><p>Log into the solace Docker host.</p></li><li><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p>Where:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li><p>Load the new event broker Docker version into Docker:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Redundant.flsnp"/></li><li><p>Stop the docker instance:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 1200 solace</b></pre></li><li><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre></li><li><MadCap:snippetBlock src="../../Resources/Snippets/Upgrade/Docker-Create-Upgrade.flsnp"/></li><li><p>Restart event broker Docker:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre><p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p></li><li><p>Log into solace-primary and confirm that it is running the new version:</p><pre class="Code">solace&gt; <b>show version</b></pre></li><li><p>Ensure Redundancy Status is Up on solace:</p><pre class="Code">solace&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li><p>If the upgraded event broker is a messaging node and provides AD service, ensure the Message Spool Status is AD-Standby:</p><pre class="Code">solace&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre></li><li><p>Repeat from step 1 until all three nodes are upgraded.</p></li></ol><p>You have completed this procedure.</p></div>  <script type="text/javascript" src="../../Resources/Scripts/Tabbed_Content.js"/></body>
</html>
