<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.HideFromAllOutput">
  <head>
    <link href="../../Resources/Stylesheets/Tabbed_Content.css" rel="stylesheet"/>
  </head>
  <body>
    <h1><MadCap:concept term="Software"/>Docker Upgrade</h1>
    <p>On this page you'll find procedures to upgrade your Solace PubSub+ event broker Docker images to version 9.3.0 or earlier.</p>
    <ul class="nav tabs">
      <li>
        <a class="tab" href="#standlone-850">Standalone from 8.5.0+ </a>
      </li>
      <li>
        <a class="tab" href="#redundant-850">HA Group from 8.5.0+</a>
      </li>
      <li>
        <a class="tab" href="#redundant-orch-850">HA Group from 8.5.0+ with Orchestration Tool</a>
      </li>
      <li>
        <a class="tab" href="#standalone-810-840">Standalone from 8.1.0 - 8.4.0</a>
      </li>
      <li>
        <a class="tab" href="#redundant-810-840">HA Group from 8.1.0 - 8.4.0</a>
      </li>
    </ul>
    <div id="standlone-850">
      <h2 class="with-rule"><a name="Upgradin"/>Upgrade a Standalone Docker Image from Version 8.5.0+</h2>
      <p>The event broker Docker upgrade to a new version preserves the configuration and the spooled messages. The event broker Docker upgrade procedure is a Docker container replacement procedure. When upgrading, the upgrade procedure is performed by removing the old Docker container and installing a new Docker container running the new version. All ephemeral data in the old Docker container will be lost.</p>
      <p>All configuration is preserved during the event broker Docker image upgrade.</p>
      <p>The following procedure describes an Enterprise to Enterprise upgrade (supported in R8.5.0+).</p>
      <p>On non-Enterprise event brokers running R.8.10.0+, the following upgrades are also supported:</p>
      <ul>
        <li>from Evaluation to Enterprise</li>
        <li>from Standard to Standard</li>
        <li>from Standard to Enterprise</li>
      </ul>
      <p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word ‘enterprise’ and change as needed).</p>
      <p>The following illustrates one method of upgrading a Docker container. The Solace event broker Docker can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
      <p>To upgrade a standalone Docker image from version 8.5.0+ to version 9.3.0 or earlier:</p>
      <ol>
        <li>Log into the Docker host.</li>
        <li>Copy the tar file to the Docker host:</li>
        <pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
        <p><u>Where</u>:<br/><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        <li>
                Load the new event broker Docker version into Docker:
                <pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre>
          <MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Standalone.flsnp"/>
        </li>
        <li>
          <p>Stop the Docker instance:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 1200 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance. The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;					</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre>
        </li>
      </ol>
      <p>When event broker Docker restarts, it will be running the configuration and message-spool from the previous version.</p>
      <p>You have completed this procedure.</p>
    </div>
    <div id="redundant-850">
      <h2 class="with-rule"><a name="Upgradin"/>Upgrade a Redundant Docker Image Group from Version 8.5.0+</h2>
      <p>The event broker Docker upgrade to a new version preserves the configuration, including Redundancy, and the spooled messages while providing service. The event broker Docker upgrade procedure is a Docker container replacement procedure. When upgrading, the upgrade procedure is performed by removing the old Docker container and installing a new Docker container running the new version. All ephemeral data in the old Docker container will be lost.</p>
      <p>All configuration is preserved during the Redundant event broker Docker Image Group upgrade.</p>
      <p>The following procedure describes an Enterprise to Enterprise upgrade (supported in R8.5.0+).</p>
      <p>On non-Enterprise event brokers running R.8.10.0+, the following upgrades are also supported:</p>
      <ul>
        <li>from Evaluation to Enterprise</li>
        <li>from Standard to Standard</li>
        <li>from Standard to Enterprise</li>
      </ul>
      <p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word ‘enterprise’ and change as needed).</p>
      <p>For the following procedure, we will refer ‘solace-primary’ as Primary Node, ‘solace-backup’ as Backup Node, and ‘solace-monitor’ as Monitoring Node.</p>
      <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">It is important to reboot the three software event brokers one at time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p>
      <p>To upgrade a redundant Docker image group from version 8.5.0+ to version 9.3.0 or earlier, perform the following steps:</p>
      <ul>
        <li>
          <a href="#Step" class="link-internal">Step 1: Check the redundancy configuration on each node</a>
        </li>
        <li>
          <a href="#Step2" class="link-internal">Step 2: Upgrade the monitoring node</a>
        </li>
        <li>
          <a href="#Step3" class="link-internal">Step 3: Upgrade the backup node</a>
        </li>
        <li>
          <a href="#Step4" class="link-internal">Step 4: Upgrade the primary node</a>
        </li>
      </ul>
      <h3><a name="Step"/>Step 1</h3>
      <p>Check the redundancy configuration on each node.</p>
      <ol>
        <li>
          <p>Log into each node as an admin user.</p>
        </li>
        <li>
          <p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on each node. On solace-primary the Message Spool Status should be AD-Active, and on solace-backup the Message Spool Status should be AD-Standby:</p>
          <pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Primary
Mate Router Name         : solace-backup
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Local Active       Shutdown
Routing Interface              intf0:1            intf0:1
Routing Interface Status       Up                 
VRRP Status                    Initialize         
VRRP Priority                  250                
Message Spool Status           AD-Active          
Priority Reported By Mate      Standby   

solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Backup
Mate Router Name         : solace-primary
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Mate Active
Routing Interface              intf0:1            intf0:1
Routing Interface Status                          Up
VRRP Status                                       Initialize
VRRP Priority                                     100
Message Spool Status                              AD-Standby
Priority Reported By Mate                         Active

solace-monitor&gt; <b>show redundancy</b>
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Monitoring Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
</pre>
        </li>
      </ol>
      <h3><a name="Step2"/>Step 2</h3>
      <p>Perform the following steps on the monitoring node.</p>
      <ol>
        <li>
          <p>Log into the solace-monitoring Docker host.</p>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Step 1 to step 8 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <p>Stop the docker instance:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker stop --time 1200 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance. The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ docker create \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker start solace</b></pre>
          <p>When solace-monitor restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into the monitoring node and confirm that it is running the new version:</p>
          <pre class="Code">solace-monitor&gt; <b>show version</b></pre>
        </li>
        <li>
          <p>Ensure Redundancy Status is Up on solace-monitor:</p>
          <pre class="Code">solace-monitor&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
        </li>
      </ol>
      <h3><a name="Step3"/>Step 3</h3>
      <p>Perform the following steps on the backup node.</p>
      <ol>
        <li>
          <p>Log into the backup node as an admin user.</p>
        </li>
        <li>
          <p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on solace-backup:</p>
          <pre class="Code" xml:space="preserve">solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
        </li>
        <li>
          <p>If using Config-sync, ensure that it is in sync:</p>
          <pre class="Code" xml:space="preserve">solace-backup&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre>
        </li>
        <li>
          <p>Log into solace-backup Docker host.</p>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Step 4 to step 12 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Redundant.flsnp"/>
        </li>
        <li>
          <p>Stop the Docker instance:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker stop --time 1200 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance. The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ docker create \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker start solace</b></pre>
          <p>When solace-backup restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into solace-backup and confirm that it is running the new version:</p>
          <pre class="Code">solace-backup&gt; <b>show version</b></pre>
        </li>
        <li>
          <p>Ensure Redundancy Status is Up on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
        </li>
        <li>
          <p>If using Config-sync, ensure that it is in sync:</p>
          <pre class="Code" xml:space="preserve">solace-backup&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre>
        </li>
        <li>
          <p>If the backup node provides AD service, ensure the Message Spool Status is AD-Standby:</p>
          <pre class="Code">solace-backup&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre>
        </li>
      </ol>
      <h3><a name="Step4"/>Step 4</h3>
      <p>Perform the following steps on the primary node.</p>
      <ol>
        <li>
          <p>Log into the primary node as an admin user.</p>
        </li>
        <li>
          <p>Release activity from the primary node to the backup:</p>
          <pre class="Code" xml:space="preserve">solace-primary&gt; <b>enable</b>
solace-primary&gt; <b>configure</b>
solace-primary&gt; <b>redundancy release-activity</b>
</pre>
        </li>
        <li>
          <p>On the primary node, ensure Redundancy Configuration Status is Enabled-Released and Redundancy Status is Down:</p>
          <pre class="Code" xml:space="preserve">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled-Relased
Redundancy Status        : Down
</pre>
        </li>
        <li>
          <p>On the backup node, ensure Redundancy Configuration Status is Enabled, Redundancy Status is Down and the Activity Status on the Backup Virtual Router is Local Active:</p>
          <pre class="Code">Solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Down

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Local Active
</pre>
        </li>
        <li>
          <p>Log into the solace-primary Docker host.</p>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Steps 5 to step 13 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace-prmiary ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker version into Docker:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Redundant.flsnp"/>
        </li>
        <li>
          <p>Stop the Docker instance:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker stop --time 1200 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance. The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker create \</b>
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@ solace-primary ~]$ <b>docker start solace</b></pre>
          <p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into solace-primary and confirm that it is running the new version:</p>
          <pre class="Code">solace-primary&gt; <b>show version</b></pre>
        </li>
        <li>
          <p>No Release activity from the primary node:</p>
          <pre class="Code" xml:space="preserve">solace-primary&gt; <b>enable</b>
solace-primary&gt; <b>configure</b>
solace-primary&gt; <b>no redundancy release-activity</b></pre>
        </li>
        <li>
          <p>Ensure Redundancy Status is Up on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
        </li>
        <li>
          <p>If using Config-sync, ensure that it is in sync:</p>
          <pre class="Code" xml:space="preserve">solace-primary&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre>
        </li>
        <li>
          <p>If the node provides AD service, ensure the Message Spool Status is AD-Standby:</p>
          <pre class="Code" xml:space="preserve">solace-primary&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre>
        </li>
      </ol>
      <p>You have completed this procedure.</p>
      <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">The backup is now active and the primary is standby. For instructions describing how to revert the activity back to the primary, refer to <MadCap:xref href="../../Features/HA-Redundancy/Maintaining-Event-Broker-Redundancy-All-Broker.htm#Give-Up-Activity">Forcing Backups to Give Up Activity to Primaries</MadCap:xref>.</p>
    </div>
    <div id="redundant-orch-850">
      <h2 class="with-rule"><a name="Upgradin2"/>Upgrade a Redundant Docker Image Group from Version 8.5.0+ Using an Orchestration Tool</h2>
      <div class="Caution">
        <p>This procedure is specifically for upgrades using a container orchestration tool such as Kubernetes. The capabilities of such tools vary widely. For example, some do provide the flexibility to control the order in which an HA pair of Solace event brokers can be upgraded. When possible, it is recommended to use the upgrade procedure ‘Upgrading Redundant Docker Image Group’ as it may reduce the number of activity switchover and ensures config-sync is in-sync during the upgrade. Otherwise, the procedure in this section is provided.</p>
      </div>
      <p>The event broker Docker upgrade to a new version preserves the configuration, including Redundancy, and the spooled messages while providing service. The event broker Docker upgrade procedure is a Docker container replacement procedure.  When upgrading, the upgrade procedure is performed by removing the old Docker container and installing a new Docker container running the new version.  All ephemeral data in the old Docker container will be lost.</p>
      <p>All configuration is preserved during the Redundant event broker Docker Image Group upgrade.</p>
      <p>The following procedure describes an Enterprise to Enterprise upgrade (supported in R8.5.0+).</p>
      <p>On non-Enterprise event brokers running R.8.10.0+, the following upgrades are also supported:</p>
      <ul>
        <li>from Evaluation to Enterprise</li>
        <li>from Standard to Standard</li>
        <li>from Standard to Enterprise</li>
      </ul>
      <p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word ‘enterprise’ and change as needed).</p>
      <p>The nodes (primary, backup and monitoring) can be upgrades in any order.</p>
      <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">It is important to reboot the three software event brokers one at time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p>
      <p>To upgrade a redundant Docker image group from version 8.5.0+ to version 9.3.0 or earlier using an orchestration tool:</p>
      <ol>
        <li>
          <p>Pick a node not upgraded yet.</p>
        </li>
        <li>
          <p>Log into the node as an admin user.</p>
        </li>
        <li>
          <p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on:</p>
          <pre class="Code">solace&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
          <p>The following step 4 to 11 illustrates one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Log into the solace Docker host.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p>Where:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <MadCap:snippetBlock src="../../Resources/Snippets/MQTT_Retain_Redundant.flsnp"/>
        </li>
        <li>
          <p>Stop the docker instance:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 1200 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance.  The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code" xml:space="preserve">[sysadmin@solace ~]$ docker create \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre>
          <p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into solace-primary and confirm that it is running the new version:</p>
          <pre class="Code">solace&gt; <b>show version</b></pre>
        </li>
        <li>
          <p>Ensure Redundancy Status is Up on solace:</p>
          <pre class="Code">solace&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
        </li>
        <li>
          <p>If the upgraded event broker is a messaging node and provides AD service, ensure the Message Spool Status is AD-Standby:</p>
          <pre class="Code">solace&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre>
        </li>
        <li>
          <p>Repeat from step 1 until all three nodes are upgraded.</p>
        </li>
      </ol>
      <p>You have completed this procedure.</p>
    </div>
    <div id="standalone-810-840">
      <h2 class="with-rule"><a name="Upgradin2"/>Upgrade a Standalone Docker Image from Versions 8.1.0 - 8.4.0</h2>
      <p>The event broker Docker upgrade to a new version preserves the configuration and the spooled messages. The event broker Docker upgrade procedure is a Docker container replacement procedure.  When upgrading, the upgrade procedure is performed by removing the old Docker container and installing a new Docker container running the new version.  All ephemeral data in the old Docker container will be lost.</p>
      <p>All configuration is preserved during the event broker Docker image upgrade.</p>
      <p>To upgrade a standalone Docker image from versions 8.1.0 - 8.4.0 to version 9.3.0 or earlier:</p>
      <p>Check the redundancy configuration on each node, and shut down the message-backbone and message-spool on the primary and backup nodes.</p>
      <ol>
        <li>
          <p>Log into the Solace CLI and shut down the msg-backbone service:</p>
          <pre class="Code" xml:space="preserve">[sysadmin@solace ~]$ <b>docker exec -u root -it solace /usr/sw/loads/currentload/bin/cli -A</b>
solace&gt; <b>enable</b>
solace# <b>configure</b>
solace(config)# <b>service msg-backbone shutdown</b>
All clients will be disconnected.
Do you want to continue (y/n)? <b>y</b>
</pre>
        </li>
        <li>
          <p>Shut down the message spool:</p>
          <pre class="Code" xml:space="preserve">solace# <b>configure</b> 
solace(config)# <b>hardware message-spool shutdown</b>
All message spooling will be stopped.
Do you want to continue (y/n)? <b>y</b>
</pre>
        </li>
        <li>
          <p>Backup the configuration files and message spool for upgrade:</p>
          <pre class="Code">solace(config)# <b>end</b>
solace# <b>backup for-upgrade</b>
Performing database consolidation

145004 lines processed in 1 seconds... 
Moving ADB messages to disk  : 100%
Moving message info to disk  : 100%
Backing up ADB config to disk: 100%

Backing up router configuration
solace#
</pre>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Step 4 to step 11 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Log into the Docker host.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new PubSub+ Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old PubSub+ Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <p>Stop the docker instance:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 30 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance.  The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace ~]$ docker create \
--network=host \
--uts=host \
--cap-add=IPC_LOCK \
--cap-add=SYS_NICE \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart PubSub+ Docker:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre>
          <p>When PubSub+ Docker restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into the PubSub+ Docker’s CLI and enable the message spool:</p>
          <pre class="Code">[sysadmin@solace ~]$ <b>docker exec -u root -it solace /usr/sw/loads/currentload/bin/cli -A</b>
solace&gt; <b>enable</b>
solace# <b>configure</b> 
solace(config)# <b>no hardware message-spool shutdown</b></pre>
        </li>
        <li>
          <p>Enable the Msg-Backbone service:</p>
          <pre class="Code" xml:space="preserve">solace&gt; <b>enable</b>
solace# <b>configure</b>
solace(config)# <b>no service msg-backbone shutdown</b></pre>
        </li>
      </ol>
      <p>You have completed this procedure.</p>
    </div>
    <div id="redundant-810-840">
      <h2 class="with-rule"><a name="Upgradin3"/>Upgrading a Redundant Docker Image Group from Versions 8.1.0 - 8.4.0</h2>
      <p>The event broker Docker upgrade to a new version preserves the configuration, including Redundancy, and the spooled messages. The event broker Docker upgrade procedure is a Docker container replacement procedure.  When upgrading, the upgrade procedure is performed by removing the old Docker container and installing a new Docker container running the new version.  All ephemeral data in the old Docker container will be lost.</p>
      <p>All configuration is preserved during the Redundant event broker Docker Image Group upgrade.</p>
      <p>For the following procedure, we will refer ‘solace-primary’ as Primary Node, ‘solace-backup’ as Backup Node, and ‘solace-monitor’ as Monitoring Node.</p>
      <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">It is important to reboot the three software event brokers one at time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p>
      <p>To upgrade a redundant Docker image group from versions 8.1.0 - 8.4.0 to version 9.3.0 or earlier, perform the following steps:</p>
      <ul>
        <li>
          <a href="#Step5" class="link-internal">Step 1: Check the redundancy configuration on each node</a>
        </li>
        <li>
          <a href="#Step6" class="link-internal">Step 2: Upgrade the primary node</a>
        </li>
        <li>
          <a href="#Step7" class="link-internal">Step 3: Upgrade the backup node</a>
        </li>
        <li>
          <a href="#Step8" class="link-internal">Step 4: Upgrade the monitoring node</a>
        </li>
        <li>
          <a href="#Step9" class="link-internal">Step 5: Complete the final steps</a>
        </li>
      </ul>
      <h3><a name="Step5"/>Step 1</h3>
      <p>Check the redundancy configuration on each node, and shut down the message-backbone and message-spool on the primary and backup nodes.</p>
      <ol>
        <li>
          <p>Log into each node as an admin user.</p>
        </li>
        <li>
          <p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on each node. On solace-primary the Message Spool Status should be AD-Active, and on solace-backup the Message Spool Status should be AD-Standby:</p>
          <pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Primary
Mate Router Name         : solace-backup
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Local Active       Shutdown
Routing Interface              intf0:1            intf0:1
Routing Interface Status       Up                 
VRRP Status                    Initialize         
VRRP Priority                  250                
Message Spool Status           AD-Active          
Priority Reported By Mate      Standby   

solace-backup&gt; show redundancy 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Backup
Mate Router Name         : solace-primary
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Mate Active
Routing Interface              intf0:1            intf0:1
Routing Interface Status                          Up
VRRP Status                                       Initialize
VRRP Priority                                     100
Message Spool Status                              AD-Standby
Priority Reported By Mate                         Active

solace-monitor&gt; show redundancy
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Monitoring Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
</pre>
        </li>
        <li>
          <p>Shut down the msg-backbone service on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>configure</b>
solace-primary(configure)# <b>service msg-backbone shutdown</b>
All clients will be disconnected.
Do you want to continue (y/n)? <b>y</b></pre>
        </li>
        <li>
          <p>Shut down the msg-backbone service on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>configure</b>
solace-backup(configure)# <b>service msg-backbone shutdown</b>
All clients will be disconnected.
Do you want to continue (y/n)? <b>y</b></pre>
        </li>
        <li>
          <p>Shut down the message-spool on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>configure</b>
solace-primary(configure)# <b>hardware message-spool shutdown</b> 
All message spooling will be stopped.
Do you want to continue (y/n)? <b>y</b></pre>
        </li>
        <li>
          <p>Shut down the message-spool on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>configure</b>
solace-backup(configure)# <b>hardware message-spool shutdown</b> 
All message spooling will be stopped.
Do you want to continue (y/n)? <b>y</b></pre>
        </li>
      </ol>
      <h3><a name="Step6"/>Step 2</h3>
      <p>Perform the following steps on the primary node.</p>
      <ol>
        <li>
          <p>Release activity on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>configure</b>
solace-primary(configure)# <b>redundancy release-activity</b></pre>
        </li>
        <li>
          <p>Run backup for-upgrade on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>backup for-upgrade</b> 
Performing database consolidation
Moving ADB messages to disk  : 100%
Moving message info to disk  : 100%
Backing up ADB config to disk: 100%

Backing up router configuration
</pre>
        </li>
        <li>
          <p>Log into the solace-primary Docker host.</p>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Step 3 to step 10 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <p>Stop the docker instance:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker stop --time 30 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance.  The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ docker create \
--network=host \
--uts=host \
--cap-add=IPC_LOCK \
--cap-add=SYS_NICE \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace-primary ~]$ <b>docker start solace</b></pre>
          <p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into solace-primary and confirm that it is running the new version:</p>
          <pre class="Code">solace-primary&gt; <b>show version</b></pre>
        </li>
        <li>
          <p>No release activity on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>configure</b>
solace-primary(configure)# <b>no redundancy release-activity</b></pre>
        </li>
        <li>
          <p>Ensure Redundancy Status is Up on solace-primary and solace-backup:</p>
          <pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up

solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre>
        </li>
        <li>
          <p>Release activity on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>configure</b>
solace-backup(configure)# <b>redundancy release-activity</b></pre>
        </li>
        <li>
          <p>Run backup for-upgrade on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>backup for-upgrade</b> 
Performing database consolidation
Backing up router configuration
</pre>
        </li>
      </ol>
      <h3><a name="Step7"/>Step 3</h3>
      <p>Perform the following steps on the backup node.</p>
      <ol>
        <li>
          <p>Log into solace-backup Docker host.</p>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Step 1 to step 8 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker load --input /tmp/ solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <p>Stop the Docker instance:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker stop --time 30 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance. The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ docker create \
--network=host \
--uts=host \
--cap-add=IPC_LOCK \
--cap-add=SYS_NICE \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace-backup ~]$ <b>docker start solace</b></pre>
          <p>When solace-backup restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into solace-backup and confirm that it is running the new version:</p>
          <pre class="Code">solace-backup&gt; <b>show version</b></pre>
        </li>
        <li>
          <p>Run backup for-upgrade on solace-monitor:</p>
          <pre class="Code" xml:space="preserve">solace-monitor&gt; <b>enable</b>
solace-monitor# <b>backup for-upgrade</b> 
Performing database consolidation
Backing up router configuration
</pre>
        </li>
      </ol>
      <h3><a name="Step8"/>Step 4</h3>
      <p>Perform the following steps on the monitoring node.</p>
      <ol>
        <li>
          <p>Log into the solace-monitor Docker host.</p>
          <p class="Note" MadCap:autonum="&lt;b&gt;:  &lt;/b&gt;">Step 1 to step 8 illustrate one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p>
        </li>
        <li>
          <p>Copy the tar file to the Docker host:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre>
          <p><u>Where</u>:</p>
          <p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p>
        </li>
        <li>
          <p>Load the new event broker Docker version into Docker:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre>
        </li>
        <li>
          <p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker inspect solace</b></pre>
        </li>
        <li>
          <p>Stop the Docker instance:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker stop --time 30 solace</b></pre>
        </li>
        <li>
          <p>Remove the Docker container:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker rm solace</b></pre>
        </li>
        <li>
          <p>Create the new Docker instance using the same options that were used for the old Docker instance.  The following is an example only; the new Docker instance must be created using the same arguments as the old Docker instance:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ docker create \
--network=host \
--uts=host \
--cap-add=IPC_LOCK \
--cap-add=SYS_NICE \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=2g \
--ulimit memlock=-1 \
--ulimit nofile=2448:38048 \
--ulimit core=-1 \
--env 'username_admin_globalaccesslevel=admin' \
--env 'username_admin_password=admin' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre>
        </li>
        <li>
          <p>Restart event broker Docker:</p>
          <pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker start solace</b></pre>
          <p>When solace- monitor restarts, it will be running the configuration and message-spool from the previous version.</p>
        </li>
        <li>
          <p>Log into solace-monitor and confirm that it is running the new version:</p>
          <pre class="Code">solace-monitor&gt; <b>show version</b></pre>
        </li>
      </ol>
      <h3><a name="Step9"/>Step 5</h3>
      <p>Lastly, perform the steps below to complete the upgrade procedure.</p>
      <ol>
        <li>
          <p>Enable message-spool on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>configure</b> 
solace-primary(configure)# <b>no hardware message-spool shutdown</b></pre>
        </li>
        <li>
          <p>Enable message-spool on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>configure</b> 
solace-backup(configure)# <b>no hardware message-spool shutdown</b></pre>
        </li>
        <li>
          <p>No release activity on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>configure</b>
solace-backup(configure)# <b>no redundancy release-activity</b></pre>
        </li>
        <li>
          <p>Enable msg-backbone service on solace-primary:</p>
          <pre class="Code">solace-primary&gt; <b>enable</b>
solace-primary# <b>configure</b> 
solace-primary(configure)# <b>no service msg-backbone shutdown</b></pre>
        </li>
        <li>
          <p>Enable msg-backbone service on solace-backup:</p>
          <pre class="Code">solace-backup&gt; <b>enable</b>
solace-backup# <b>configure</b> 
solace-backup(configure)# <b>no service msg-backbone shutdown</b></pre>
        </li>
        <li>
          <p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on each node. On solace-primary the Message Spool Status should be AD-Active, and on solace-backup the Message Spool Status should be AD-Standby:</p>
          <pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Primary
Mate Router Name         : solace-backup
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Local Active       Shutdown
Routing Interface              intf0:1            intf0:1
Routing Interface Status       Up                 
VRRP Status                    Initialize         
VRRP Priority                  250                
Message Spool Status           AD-Active          
Priority Reported By Mate      Standby   

solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Backup
Mate Router Name         : solace-primary
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown                Mate Active
Routing Interface              intf0:1                 intf0:1
Routing Interface Status                               Up
VRRP Status                                            Initialize
VRRP Priority                                          100
Message Spool Status                                   AD-Standby
Priority Reported By Mate                              Active
</pre>
        </li>
      </ol>
      <p>You have completed this procedure.</p>
    </div>
    <script type="text/javascript" src="../../Resources/Scripts/Tabbed_Content.js">
        </script>
  </body>
</html>
