<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1><MadCap:concept term="Cloud"/><MadCap:variable name="Product-Names.eventportal_product_short"/> Overview</h1>
    <p><MadCap:variable name="Product-Names.eventportal_product_short"/> is a cloud-based event management tool that helps you to design  your event-driven architecture (EDA). You can use <MadCap:variable name="Product-Names.eventportal_product_short"/> to design and track the relationships that exist between applications in a highly decoupled EDA. You can model applications and associate events to them, use topic addresses to define and categorize events into a taxonomy, and catalog events for reuse.</p>
    <p><MadCap:variable name="Product-Names.eventportal_product_short"/> helps you model your event meshes for the multiple operational environments that you maintain in a software development lifecycle. You can have multiple versions of applications, events, schemas, and enumerations, which enables you to maintain production versions while you develop and test new versions to extend and enhance your EDA at the same time.</p>
    <p MadCap:conditions="Default.TODELETE"><b>Writer's Note:</b> When Config Push is available to all customers, including SAP - this page will need a rewrite.</p>
    <h2 class="with-rule"><MadCap:variable name="Product-Names.eventportal_product_short"/> Tools</h2>
    <p><MadCap:variable name="Product-Names.eventportal_product_short"/> includes several tools to help you design your event mesh:</p>
    <ul>
      <li>
        <p><MadCap:xref href="../../Cloud/Event-Portal/event-portal-designer-tool.htm">[%=Product-Names.ep_designer%]</MadCap:xref> helps you create and update all of the objects you use to design your EDA.</p>
      </li>
      <li>
        <p><MadCap:xref href="../../Cloud/Event-Portal/event-portal-catalog-tool.htm">[%=Product-Names.ep_catalog%]</MadCap:xref> is a library of all the applications, events, schemas, and other objects in your organization's account in <MadCap:variable name="Product-Names.eventportal_product_short"/>.</p>
      </li>
      <li>
        <p><MadCap:xref href="../../Cloud/Event-Portal/event-portal-manager-tool.htm">[%=Product-Names.ep_rt_event_manager%]</MadCap:xref> helps you create models of your EDA using objects created in [%=Product-Names.ep_designer%] and data collected from your event brokers. </p>
      </li>
      <li>
        <p><MadCap:xref href="event-portal-kpi-dashboard.htm">[%=Product-Names.ep_kpi_dashboard%]</MadCap:xref> displays key performance indicators (KPI) related to your event-driven architecture (EDA) to help you track the performance and efficiency of your EDA.</p>
      </li>
    </ul>
    <p>The level of access you have to the features in each tool depends on your user role and any additional permissions you may have been granted. For more information, see <MadCap:xref href="event-portal-user-access.htm">Configuring User Access to [%=Product-Names.eventportal_product_short%]</MadCap:xref>.</p>
    <h2 class="with-rule"><a name="Elements">
            </a>Designing your EDA in <MadCap:variable name="Product-Names.eventportal_product_short"/></h2>
    <p><MadCap:variable name="Product-Names.eventportal_product_short"/> helps you define the building blocks of your EDA. </p>
    <h3>Application Domains</h3>
    <p>An application domain represents a namespace where applications, events, and other EDA objects reside. Application domains organize your applications, events, and other associated objects for different teams, groups, or lines of business within your organization.</p>
    <p>Within an application domain, you can create a suite of objects that represent the elements in a segment of your EDA. Every object in <MadCap:variable name="Product-Names.eventportal_product_short"/> belongs to one application domain to maintain a clear ownership. You can control access to application domains to limit the users who can work in the domain and manage the objects within it. You can also share objects with other application domains, which lets you create common assets that you can make available across your organization and use to build relationships between different parts of your EDA. To learn about creating and working in application domains, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-designer-application-domains.htm">Application Domains.</MadCap:xref></p>
    <p>Application domains also define the topic domains for the events created within the application domain. Topic domains define the top levels of your topic hierarchy. You can use topic domains as the starting point for the topic addresses you set for events within the application domain. For more information about topic domains and addresses, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-topic-addresses.htm">Topic Addresses.</MadCap:xref></p>
    <h3>Applications</h3>
    <p>An application in <MadCap:variable name="Product-Names.eventportal_product_short"/> is an object that represents software that produces and consumes events. Within an application, a consumer represents a queue on an event broker or a consumer group in a Kafka event flow. Applications can publish events to be consumed by other applications and can subscribe to events to act on them in some way.  To learn about creating and updating applications, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-designer-applications.htm">Applications</MadCap:xref>.</p>
    <h3>Events</h3>
    <p>In <MadCap:variable name="Product-Names.eventportal_product_short"/>, an event is an object that  defines the properties that describe and categorize actual event instances. You create events in <MadCap:variable name="Product-Names.ep_designer"/> to define the messages that applications publish for every instance of an event as it happens in real-time. Each event in <MadCap:variable name="Product-Names.ep_designer"/> defines an <i>event type</i> that represents individual event instances produced in an EDA. </p>
    <p>Every event has one or more topic addresses that define the topics of each event instance at runtime. Topic addresses can include variable values to represent data specific to an event instance. Event brokers use topics to route each event instance  to subscribing applications. For more information, see <MadCap:xref href="event-portal-topic-addresses.htm">Topic Addresses</MadCap:xref>.</p>
    <p> Every event references a schema that describes the payload of the event. Some event payloads consist of primitive schema types such as <code>String</code> and <code>Numbers</code>. <MadCap:variable name="Product-Names.eventportal_product_short"/> supports primitive types to model your events with payloads that are simple primitives and supports more complex schema definitions.  To learn about creating and updating events, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-designer-events.htm">Events</MadCap:xref>.</p>
    <h3>Schemas</h3>
    <p>A schema defines the payload of an event. Producers and consumers of an event can both understand an event's payload based on the schema definition assigned to the event. Some events need complex schemas to describe the properties of each value that could be used in the event. You can create complex schemas in <MadCap:variable name="Product-Names.eventportal_product_short"/> using JSON Schema, XSD, DTD, Avro, and Protobuf format. Complex schemas can reference other schemas. To learn about creating and updating schemas, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-designer-schemas.htm">Schemas</MadCap:xref>.</p>
    <h3 class="title">Enumerations</h3>
    <p>An enumeration is a bounded variable with a limited set of literal values. You can use enumerations to define acceptable values for a  level in a topic address or topic domain. If you use enumerations, the values should include all potential values related to one element of data for the event, such as the days of the week, a list of cities where your organization has offices, or a list of actions that can be taken on a product order.  To learn about creating and updating enumerations, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-designer-enums.htm">Enumerations</MadCap:xref>.</p>
    <h2><a name="Event_APIs">
            </a>Event APIs and <MadCap:variable name="Product-Names.eventapiproduct_long"/>s</h2>
    <p>After you've designed or imported the building blocks of your EDA, you can use event APIs to curate your event data into packages that you can share with others to use to build new applications.  Event APIs can be shared with application developers by generating and sharing an Async API document.</p>
    <p>An event API bundles together the following information:</p>
    <ul>
      <li>events you want to provide to other application developers</li>
      <li>associated schema information</li>
      <li> information about the event operation (publish and/or subscribe) </li>
    </ul>
    <p>To learn about creating and updating event APIs, see <MadCap:xref href="event-portal-designer-event-apis.htm">Event APIs.</MadCap:xref></p>
    <p>You can also bundle one or more event APIs into an <MadCap:variable name="Product-Names.eventapiproduct_long"/> that you can provide to other organizations so they can consume the events that you have included in your event APIs. An <MadCap:variable name="Product-Names.eventapiproduct_long"/> contains one or more event APIs plus service plan details for deploying the product to allow others to consume the events.</p>
    <p>To learn about creating and updating <MadCap:variable name="Product-Names.eventapiproduct_long"/>s, see <MadCap:xref href="event-portal-designer-event-api-products.htm">Event API Products</MadCap:xref>.</p>
    <h2 class="with-rule"><a name="Versioning">
            </a>Object Versions and Lifecycle States</h2>
    <p>In <MadCap:variable name="Product-Names.ep_designer"/>, you can define multiple versions of <a href="event-portal-designer-applications.htm#update-app" target="_blank" class="link-internal">applications</a>, <a href="event-portal-designer-events.htm#update-event" target="_blank" class="link-internal">events</a>, <a href="event-portal-designer-schemas.htm#multiple-schema-version" target="_blank" class="link-internal">schemas</a>, <a href="event-portal-designer-enums.htm#update-enum" target="_blank" class="link-internal">enumerations</a>,  <a href="event-portal-designer-event-apis.htm#Updating_an_Event_API" target="_blank" class="link-internal">event APIs</a>, and <a href="event-portal-designer-event-api-products.htm#Updating_an_Event_API_Product" target="_blank" class="link-internal"><MadCap:variable name="Product-Names.eventapiproduct_long"/>s</a>. Object versioning allows you to update objects and test updated objects in a development environment while the previous version remains in production. Each object version can be assigned a lifecycle state to help you track the lifecycle stage for each version. Each object version can have one of these states:</p>
    <ul>
      <li>
        <p><b>Draft</b>—The object version is still in development and subject to change.</p>
      </li>
      <li>
        <p><b>Released</b>—The object version will no longer be modified, can be added to new designs without concern over changes, and is ready to be added to a modeled event mesh or promoted to another modeled event mesh in an environment that is at a more advanced stage of production.</p>
      </li>
      <li>
        <p><b>Deprecated</b>—The object version is still supported but it will be phased out and it should not be used in new designs. A newer version of the object is, or will soon be, released and objects that reference this version should be updated to reference the new version. When you deprecate an object version, you can set the planned End of Life date.</p>
      </li>
      <li>
        <p><b>Retired</b>—The object version is no longer supported and no other active object versions can reference it. When you retire an object version, you can set the End of Life date.</p>
      </li>
    </ul>
    <p> When you create or update an object, you define the version using semantic versioning in the format major.minor.patch. For more information about semantic versioning and best practices for using it, refer to the <a href="https://semver.org/" target="_blank" class="link-offsite">Semantic Versioning Specification</a>. You also have the option to specify a version name to help identify the version or align with your organization's version naming conventions. </p>
    <p>All new object versions are created in Draft state. Only object versions in Draft state can be edited.  If you need to update a Released object, it is best-practice to create a new version of the object. When you create a new version, you can duplicate an existing version and increment the version number or create a completely new version from scratch.</p>
    <p>When you add a reference to one object from another, for example, you specify a schema or enumeration that an event depends on or specify an event that an application publishes, you select the object version that you want to reference. <MadCap:variable name="Product-Names.ep_designer"/> enforces  lifecycle state restrictions when you add a reference or change the state of an object to avoid disallowed combinations and ensure that referenced and referencing object versions are in appropriate states. <MadCap:variable name="Product-Names.ep_designer"/> enforces these state relationships for events:</p>
    <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Event version state</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Referenced schema and enumeration version states</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Referencing application and event API version states</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Draft</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Referenced schema and enumeration versions must be in Draft, Released, or Deprecated state.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Referencing application and event API versions must also be in Draft state.</p>
            <p>Referenced event versions must be changed out of Draft state before any application or event API version that references it can change to Released state.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Released</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Referenced schema  and enumeration versions must be in Released or Deprecated state.</p>
            <p>An event version can't change from Draft to Released state if a referenced schema or enumeration version is in Draft state.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Referencing application and event API versions can be in any state.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Deprecated</p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Referenced schema  and enumeration versions must be in Released or Deprecated state.</p>
            <p>An event version state can't change to Deprecated state if a referenced schema or enumeration version is in Draft state.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Referencing application and event API versions can be in any state.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p>Retired</p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p>Referenced schema  and enumeration versions must be in Released, Deprecated, or Retired state.</p>
            <p>A schema or enumeration version can't be changed to Retired state unless all  event versions that reference it are in Retired state.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p>Referencing application and event API versions must also be in Retired state.</p>
            <p>A referenced event version can't be changed to Retired state unless all application and event API versions that reference it are in Retired state.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>For more information about setting the version and lifecycle state for an object. See the help for each object.</p>
    <h2 class="with-rule"><a name="Environments">
            </a>Environments</h2>
    <p>You can create environments in <MadCap:variable name="Product-Names.cloud_product_short"/> to represent different operational environments within your organization. For example, you may create several development environments for different lines of business, testing environments, a staging environment, and a production environment to correspond with the product release cycle within your organization.</p>
    <p>Administrators can create environments at the <MadCap:variable name="Product-Names.cloud_product_short"/> account level. Each account must have at least one environment and can have up to 50 environments. <MadCap:variable name="Product-Names.cloud_product_short"/> provides a default environment for each account. For more information, see <MadCap:xref href="../../Cloud/environments.htm">Environments</MadCap:xref>.</p>
    <p>In <MadCap:variable name="Product-Names.eventportal_product_short"/>, you create modeled event meshes within environments. Administrators and Event Portal Managers have access to the modeled event meshes in all environments. Event Portal Users can be given Viewer or Editor access to individual environments.</p>
    <h2 class="with-rule"><a name="MEM">
            </a>Modeled Event Meshes</h2>
    <p>A modeled event mesh represents an operational event mesh in a specific runtime environment. They can help you define and visualize event flows between publishing and subscribing applications and allow you to audit your designed architecture against runtime data from your event flows. Each modeled event mesh should represent event flows through one or more event brokers that can send and receive event messages. Solace  modeled event meshes generally represent a set of event brokers that are interconnected to form an event mesh.  Kafka  modeled event meshes generally represent a single Kafka cluster. You create modeled event meshes in <MadCap:xref href="../../Cloud/Event-Portal/event-portal-manager-tool.htm">Runtime Event Manager</MadCap:xref>. For more information, see <MadCap:xref href="../../Cloud/Event-Portal/modeled-event-mesh.htm">Modeled Event Meshes</MadCap:xref>.</p>
  </body>
</html>
