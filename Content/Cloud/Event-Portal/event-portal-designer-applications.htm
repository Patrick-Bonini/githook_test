<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1><MadCap:concept term="Cloud"/>Applications</h1>
    <p>An application in <MadCap:variable name="Product-Names.eventportal_product_short"/> represents a client of an event broker. A client application may be a program, process, microservice, IoT device, integration component, or other runnable consumer, producer, or processor of events that interacts with an event broker.</p>
    <p>You can create new applications in <MadCap:variable name="Product-Names.ep_designer"/> and you can add applications to <MadCap:variable name="Product-Names.ep_designer"/> by importing Solace queues and Kafka consumer groups from your runtime data in <MadCap:variable name="Product-Names.ep_rt_event_manager"/>. For more information on importing applications, see <MadCap:xref href="event-portal-audit-runtime-data.htm#importing_objects">Importing Runtime Objects into [%=Product-Names.eventportal_product_short%]</MadCap:xref>.</p>
    <p>This section includes the following tasks:</p>
    <ul>
      <li>
        <MadCap:xref href="#create-app">Creating an Application</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#update-app">Updating an Application</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#state_change_app">Changing the State of an Application Version</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#app-environment">Adding an Application to an Environment</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#Download_Async_API_App">Downloading an AsyncAPI Document for an Application</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#Download_Queue_Config">Downloading a Consumer Queue Configuration</MadCap:xref>
      </li>
    </ul>
    <p>You can move applications to a different application domain. For more information, see <MadCap:xref href="event-portal-designer-application-domains.htm#Move_Objects" target="_blank">Moving Objects Between Application Domains</MadCap:xref>.</p>
    <p>You can also create custom attributes for applications. For more information, see <MadCap:xref href="event-portal-designer-tool.htm#Using_Custom_Attributes">Using Custom Attributes</MadCap:xref></p>
    <h2 class="with-rule"><a name="create-app"/>Creating an Application</h2>
    <p>You can create an application in any application domain where you have Editor or Manager level <a href="event-portal-designer-application-domains.htm#UserAccess" target="_blank" class="link-internal">access</a>. When you create an application, you can specify several attributes:</p>
    <ul>
      <li>name</li>
      <li>broker type</li>
      <li>version display name, number, and state for each version</li>
      <li>event flows</li>
    </ul>
    <p>When you model event flows for an application you can use the following options:</p>
    <ul>
      <li>Specify <a href="event-portal-designer-events.htm" target="_blank" class="link-internal">events</a> that the application publishes to be consumed by other applications.</li>
      <li>
        <p>Specify events that the application intends to subscribe to.</p>
        <p>This option is most useful early in the design process when you may not be ready to specify topic addresses or consumer details but you want to specify  the intent of an application to consume a particular event. Identifying the intent can be helpful in these ways:</p>
        <ul>
          <li>It flags the event in the modeled event mesh if no application publishes it.</li>
          <li>It flags the application in the modeled event mesh to remind you that you still need to configure a consumer to attract the event.</li>
          <li>It enables <MadCap:variable name="Product-Names.eventportal_product_short"/> to provide suggestions to help you create the consumer and topic subscription when you are ready to do so.</li>
          <li>It includes the application when calculating the event reuse index in <MadCap:xref href="event-portal-kpi-dashboard.htm">[%=Product-Names.ep_kpi_dashboard%]</MadCap:xref>.</li>
        </ul>
      </li>
      <li>
        <p>Specify the consumers, such as event queues, direct clients, and Kafka consumer groups, that subscribe to the event in the runtime.  You can specify three types of consumers:</p>
        <ul>
          <li><b>Event Queue</b>—an endpoint on a Solace event broker that attracts Guaranteed messages with topic subscriptions. You have the option to specify configuration details for the queue in <MadCap:variable name="Product-Names.ep_designer"/><MadCap:conditionalText MadCap:conditions="Default.OnlyForPDF"> and send the configuration to runtime event brokers</MadCap:conditionalText>. For information, see <MadCap:xref href="event-portal-runtime-config.htm#queue_configuration" target="_blank">Configuring Event Brokers from Setting Queue Configurations in [%=Product-Names.eventportal_product_short%]</MadCap:xref>.</li>
          <li><b>Direct Client</b>—a direct connection to a Solace event broker that attracts Direct messages with topic subscriptions but does not store messages while the consumer is offline or reconnecting</li>
          <li><b>Consumer</b>—a consumer group in a Kafka cluster that subscribes to topics</li>
        </ul>
      </li>
    </ul>
    <ul>
      <li>
        <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event-Portal/access-approval-conditions.flsnp"/>
      </li>
      <li>All event access requests must be approved before the application can be added to an environment. For more information about requesting event access, see <MadCap:xref href="event-portal-designer-events-access.htm">Governing Event Usage</MadCap:xref>.<br/><img src="../../Resources/Images/Event-Portal/request-event-access-message.png" class="img-border"/></li>
    </ul>
    <p>You can create an application from the  graph view or the component view:</p>
    <ul>
      <li>If you want to create several applications and events and specify their relationships quickly, and then add more details later, you may want to start in the graph view.</li>
      <li>If you want to specify the consumer details when you create the application, you may want to start in the component view.</li>
    </ul>
    <h3>Creating an Application in the Graph View</h3>
    <p>To create an application in the graph view, perform these steps:</p>
    <ol>
      <li><MadCap:snippetText src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/><![CDATA[
               ]]></li>
      <li>On the navigation bar, select <MadCap:variable name="Product-Names.ep_designer" style="font-weight: bold;"/> <img src="../../Resources/Images/Cloud/reusable-icons/navbar_designer.png" alt=""/>. </li>
      <li>On the <b>Application Domains</b> page, click the application domain that you want to add the application to.</li>
      <li>In the graph view, click <b>Add Objects</b> and drag a new Solace or Kafka application onto the graph. Alternatively, you can right-click on the graph where you want to position the application.</li>
      <li>Enter a name for the application.</li>
      <li>
        <p>(Optional) If you want to specify that the application version publishes an event version that shows in the graph, hover over the application and drag the arrow that appears to an event version of the same type (Solace or Kafka).</p>
        <p>
          <img src="../../Resources/Images/Event-Portal/graph-pub-arrow.png" alt="Screenshot showing the action described in the previous step." class="img-border"/>
        </p>
      </li>
      <li>
        <p>(Optional) If you want to specify that the application version subscribes to an event version that shows in the graph, hover over the event and drag the arrow that appears to an application version of the same type (Solace or Kafka).</p>
        <p>
          <img src="../../Resources/Images/Event-Portal/graph-sub-arrow.png" alt="Screenshot showing the action described in the previous step." class="img-border"/>
        </p>
      </li>
      <li>Click the application to open the details panel. </li>
      <li>To update the version or description: <ol style="list-style-type: lower-alpha;"><li>In the <b>Details</b> panel click <img src="../../Resources/Images/Cloud/reusable-icons/edit-gray.png" alt=""/>.  </li><li>Update the attributes as necessary.</li><li>Click <b>Save</b>.</li></ol></li>
      <li>To update any custom attributes:<ol style="list-style-type: lower-alpha;"><li>In the <b>Custom Attributes</b> panel, click <img src="../../Resources/Images/Cloud/reusable-icons/edit-gray.png" alt=""/>.</li><li>Select <b>This Version</b> or <b>Event</b>. to display version or event attributes.</li><li>Update the attributes as necessary.</li><li>Click <b>Save</b>.</li></ol></li>
      <li>To update topic addresses or schemas:<ol style="list-style-type: lower-alpha;"><li>In the <b>Details</b> panel, click <b>Open Application</b> to open the application version in the <b>Component View</b>.</li><li>Click <b>Edit This Version</b>.</li><MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event-Portal/consumer-step.flsnp"/><li>Click <b>Save &amp; Close</b>.</li></ol></li>
      <li>If your application references a shared event from another application domain that requires approval, send a request to use the event. All event access requests must be approved before the application can be added to an environment. For more information about requesting event access, see <MadCap:xref href="event-portal-designer-events-access.htm#request-access" target="_blank">Governing Event Usage</MadCap:xref>.</li>
    </ol>
    <h3>Creating an Application in the Component View</h3>
    <p>To create an application in the component view, perform these steps:</p>
    <ol>
      <li><a href="event-portal-designer-tool.htm#Using_Designer" target="_blank" class="link-internal">Open Designer</a>.</li>
      <li>On the <b>Application Domains</b> page, click the application domain that you want to add the application to.</li>
      <li>Click <b>Components</b> <img src="../../Resources/Images/Cloud/reusable-icons/designer-list.png" alt=""/> to switch to the component view.</li>
      <li>
        <p>Select the <b>Applications</b> tab and click <b>Create Application</b>.</p>
        <p>
          <div class="thumbnail-container">
            <img class="solacethumbnail" src="../../Resources/Images/Event-Portal/create-application.png" alt="Screenshot showing the settings described in the surrounding steps."/>
          </div>
        </p>
      </li>
      <li>Enter a <b>Name</b> for the application.                </li>
      <li>Select the <b>Broker Type</b> for the application.</li>
      <li>(Optional) Add values for any application custom attributes that have been set up in your organization.</li>
      <li>In the <b>Version</b> field, specify a semantic version value for the application in the format major.minor.patch. The default is 0.1.0.</li>
      <li>(Optional) Enter a <b> Version Name</b> for the initial version of the application.</li>
      <li>(Optional) Enter a <b>Description</b> for the application. The <b>Description</b> field supports Markdown. Click <b>toggle preview</b><img src="../../Resources/Images/Cloud/reusable-icons/markdown-html-toggle.png" alt=""/> to preview the rendered text.</li>
      <li MadCap:conditions="Default.OnlyForPDF">
        <p>(Optional) For Solace applications, enter the <b>Client Profile</b> used for the application on the event broker. You must have manager level access to the application domain to set the client profile. If you don't specify a client profile, the application uses the <b>default</b> profile. If you specify a profile other than the default, it must also exist on the runtime event broker. For more information, see <MadCap:xref href="../client-profiles.htm" target="_blank">Using Client Profiles and Client Usernames</MadCap:xref>.</p>
        <p class="Note">After you save the application version, the <b>Client Profile</b> value can't be changed. If you need to change the value, you must create a new version of the application.</p>
      </li>
      <li>To select events that the application publishes or intends to subscribe to, perform these steps:
			<ol style="list-style-type: lower-alpha;"><li>In the <b>Event Flows</b> section, select <b>Events</b>.</li><li>Click <b>Manage Events</b>.</li><li>In the <b>Application Domain</b> list, select the application domain for an event that you want the application to publish or subscribe to. By default, the list shows events from the current application domain. If you select a different application domain or remove the filter, the list also shows shared events in selected application domain or in all application domains that you have access to.</li><li>(Optional) In the <b>Modeled Event Mesh</b> list, select a modeled event mesh and environment to list only event versions published in the selected modeled event mesh.</li><li>Expand an event to see the list of event versions.</li><li>Select <b>Sub</b> for a version of each event that you want the application to subscribe to.</li><li>Select <b>Pub</b> for a version of each event that you want the application to publish.</li><li>When you are finished selecting events, click <b>Close</b><img src="../../Resources/Images/Cloud/reusable-icons/close-x.png" alt=" "/> .</li></ol></li>
      <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event-Portal/consumer-step.flsnp"/>
      <li>(Optional) Add values for any application version custom attributes that have been set up in your organization.</li>
      <li>Click <b>Save Application</b>.</li>
      <li>If your application references a shared event from another application domain that requires approval, send a request to use the event. All event access requests must be approved before the application can be added to an environment. For more information about requesting event access, see <MadCap:xref href="event-portal-designer-events-access.htm#request-access" target="_blank">Governing Event Usage</MadCap:xref>.</li>
    </ol>
    <h2><a name="update-app"/>Updating an Application</h2>
    <p>When you update an application, you can update an existing version or create a new version of the application. Versions allow you to work on updates and test new versions in development and staging environments while the stable version remains in the production environment. Each version also has a lifecycle state. For more information, see <MadCap:xref href="../../Cloud/Event-Portal/event-portal-overview.htm#Versioning">Object Versions and Lifecycle States</MadCap:xref>.</p>
    <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event-Portal/versioning-definition.flsnp"/>
    <p>The graph view displays the most recent non-retired version of an application. If you create a new version, the new version takes the place of the previous version in the graph and the displayed event flows change if the new application version is not associated with the same event versions.</p>
    <p>If allowed for objects in the application domain, the description of an application version can be edited at any lifecycle state. This option allows you to add information to the description at a later time, such as deprecation and retirement dates and notes about the object's functionality or runtime behavior.</p>
    <p>To update an application from the graph view, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>If you need to create a new draft version with the same properties as the existing version, right-click the application and select <b>Duplicate</b>.</li>
      <li>To update the draft version displayed in the graph view:</li>
      <ol style="list-style-type: lower-alpha;">
        <li>Right-click on the application and  select <b>View Details</b>. </li>
        <li>Click <b>Open Application</b>.</li>
        <li>Click <b>Edit This Version</b>.</li>
        <li>Update the  application version as necessary.</li>
        <li>Click <b>Save &amp; Close</b>.</li>
      </ol>
    </ol>
    <p>To update an application version from the component view, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>Click <b>Components</b><img src="../../Resources/Images/Cloud/reusable-icons/designer-list.png" alt=""/> to switch to the list view.</li>
      <li>Select the <b>Applications</b> tab.</li>
      <li>In the list of applications, click <b>More Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/>for the application  that you want to update and select <b>Open Application</b>.</li>
      <li>Perform one of the following actions:</li>
      <ul>
        <li>In the <b>Versions</b> list, click <b><b>More </b>Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/>for the version that you want to update and select <b>Edit</b>. Any changes you make update that version of the application. You can edit an application version only if it is in Draft state.</li>
        <li>In the <b>Versions</b> list, click <b>More </b> <b>Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/>for the version that you want to update and select <b>Duplicate</b>. All properties of the existing version are copied into a new version. By default, the new version number is incremented by 0.0.1. You can change the version number to any number not already in use.</li>
        <li>Above the <b>Versions</b> list, click <b>Add</b><img src="../../Resources/Images/Cloud/reusable-icons/ep_add_icon.png" alt=""/>to create a new version of the application without duplicating an existing version. By default, the new version number is the next unused major version. You can change the version number to any number not already in use.</li>
      </ul>
      <li>Update the application version as necessary.</li>
      <li>Click <b>Save Version</b> or <b>Save &amp; Close</b>.</li>
    </ol>
    <h2><a name="state_change_app"/>Changing the State of an Application Version</h2>
    <p>When you create a new version of an application, the version is in Draft state. When the version is ready, you can change the version state to Released. When you release a new version of an application, you may also want to change older versions of the application to Deprecated or Retired.  You must have at least Manager level <a href="event-portal-designer-application-domains.htm#UserAccess" target="_blank" class="link-internal">access</a> to the application domain to change the version state of an object. For more information about version states, see <MadCap:xref href="event-portal-overview.htm#Versioning">Object Versions and Lifecycle States</MadCap:xref>.</p>
    <p>You can only change an application version from Draft to Released state after all event versions that the application references have been changed out of Draft state.</p>
    <p>You can change the state of the most recent version in the graph view. If you change the state to Retired, the version disappears from the graph, and is replaced by the latest non-retired version if one exists.</p>
    <p>To change the state of an application version from the graph view, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>Right-click the application and select <b>Change State</b>.</li>
      <li>Select the new state and click <b>Change State</b>.</li>
    </ol>
    <p>To change the state of an application version from the component view, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>Click <b>Components </b><img src="../../Resources/Images/Cloud/reusable-icons/designer-list.png" alt=""/> to switch to the list view.</li>
      <li>Select the <b>Applications</b> tab.</li>
      <li>In the list of applications, click <b>More Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/>for the application  that you want to update and select <b>Open Application</b>.</li>
      <li>Select the version that you want to change the state of, then click <b>Manage Lifecycle</b>.</li>
      <li>Select the new state.</li>
      <li>(Optional) If you set the <b>State</b> to <b>Deprecated</b> or <b>Retired</b>, set the <b>End of Life</b> date. If you set a planned or actual <b>End of Life</b> date, the date displays in the version details.</li>
      <li>Click <b>Save</b>.</li>
    </ol>
    <h2><a name="app-environment"/>Adding an Application Version to an Environment</h2>
    <p>When a version of an application  is ready to add to a model event broker, you add it to an environment from <MadCap:variable name="Product-Names.ep_designer"/>. When you add an application version to an environment, you choose the modeled event mesh and event broker to associate the application version with. For more information about environments, see <MadCap:xref href="../environments.htm" target="_blank">Creating and Managing Environments</MadCap:xref>.</p>
    <p>You should be aware of the following considerations when you add application versions to environments:</p>
    <ul>
      <li>
        <p>You must have at least Editor level access to both the application domain and the environment to add an application to an environment.</p>
      </li>
      <li>
        <p>Before you add an application version to an environment, the environment must have at least one modeled event mesh of the same type as the application (Solace or Kafka) and the modeled event mesh must have at least one model event broker. For more information about adding and updating modeled event meshes, see <MadCap:xref href="modeled-event-mesh.htm" target="_blank">Designing Modeled Event Meshes</MadCap:xref>.</p>
      </li>
      <li>
        <p>If an application references an event that requires approval, a banner appears on the application details page. All event access requests must be approved before the application can be added to an environment. For more information, see <MadCap:xref href="event-portal-designer-events-access.htm#request-access" target="_blank">Governing Event Usage</MadCap:xref>.</p>
      </li>
      <li>
        <p>Only one version of an application can be associated with an event broker. If you add a new version of an application to an event broker while another version  is associated with it, the other version is removed from the model event broker.</p>
      </li>
      <li>
        <p>You can add the same application version to more than one model event broker or add different versions of an application to different model event brokers. For example, you may have a Released version of an application in a production environment and an updated draft version in two different model event brokers in a development environment.</p>
      </li>
      <li>
        <p>You can add application versions in any lifecycle state to an environment.</p>
      </li>
      <li>
        <p>When you add an application to an environment, if there are any discrepancies between the declared event versions that the application intends to subscribe to and the consumers set up for the application, or if no application in the environment publishes a declared subscribed event, a message displays and allows you to view the list of discrepancies. You do not need to fix the discrepancies to add the application to the environment. After you add the application, you can view any discrepancies in <MadCap:variable name="Product-Names.ep_rt_event_manager"/>. For more information, see <MadCap:xref href="#Fixing_Event_Flow">Fixing Event Flow Discrepancies</MadCap:xref>.</p>
      </li>
      <li>
        <p>Administrators and <MadCap:variable name="Product-Names.ep_manager"/>s can also add applications to environments by importing consumers from runtime event brokers. For more information, see <MadCap:xref href="event-portal-audit-runtime-data.htm#importing_objects" target="_blank">Importing Runtime Objects into [%=Product-Names.eventportal_product_short%]</MadCap:xref>.</p>
      </li>
      <li MadCap:conditions="Default.OnlyForPDF">
        <p>If runtime configuration is enabled for the environment that you're adding applications to, attributes of the application can be pushed to runtime event brokers. You need to provide the client username and authentication credentials for the event broker when you add the application to the environment.</p>
      </li>
    </ul>
    <h3><a name="app-environments-no-config"/>Adding Applications to Environments<MadCap:conditionalText MadCap:conditions="Default.OnlyForPDF"> Without Runtime Configuration</MadCap:conditionalText></h3>
    <p MadCap:conditions="Default.OnlyForPDF">Environments may not have runtime configuration enabled for several reasons:</p>
    <ul MadCap:conditions="Default.OnlyForPDF">
      <li>
        <p>Your organization's security policies don't allow a direct connection between <MadCap:variable name="Product-Names.eventportal_product_short"/> and your event brokers.</p>
      </li>
      <li>
        <p>You are using Kafka event brokers or Solace event broker versions that don't support configuration from <MadCap:variable name="Product-Names.eventportal_product_short"/>.</p>
      </li>
      <li>
        <p>You use the environment for an early stage in the design process when you're not ready to connect the event brokers in your modeled event meshes to the runtime.</p>
      </li>
    </ul>
    <p>To add an application version to an environment<MadCap:conditionalText MadCap:conditions="Default.OnlyForPDF"> that does not have runtime configuration enabled</MadCap:conditionalText>, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>In the graph view, click the application that you want to add to an environment.</li>
      <li>
        <p>In the application detail panel that appears, click <b>More Actions</b> <img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/> and select <b>Manage Runtime Environments</b>,</p>
        <p>The application opens to the <b>Runtime</b> tab. The <b>Runtime</b> tab displays a list of all environments in your organization. Each environment shows the number of model event brokers it contains of the same type (Solace or Kafka)<MadCap:conditionalText MadCap:conditions="Default.OnlyForPDF"> and, for Solace applications, indicates whether runtime configuration is enabled</MadCap:conditionalText>.</p>
        <p MadCap:conditions="SAP.SapHideFromOutput">
          <div class="thumbnail-container">
            <img class="solacethumbnail" src="../../Resources/Images/Event-Portal/app-runtime-no-config.png" alt="Screenshot showing the settings described in the surrounding text."/>
          </div>
        </p>
        <p>Clicking an environment expands it to show the model event brokers of the same type in the environment and the name of the modeled event mesh each event broker belongs to.</p>
        <p>You can select the <b>With Applications</b> filter to hide event brokers that don't have associated applications. <MadCap:conditionalText MadCap:conditions="Default.OnlyForPDF">The <b>With Credentials</b> filter shows only specific event brokers in environments that have runtime configuration enabled.</MadCap:conditionalText></p>
      </li>
      <li>Click the environment that you want the add the application to.</li>
      <li>Click Add <img src="../../Resources/Images/Cloud/reusable-icons/ep_add_icon.png" alt=""/> for the event broker that you want to add the application to.</li>
      <li>Select the <b>Application version to add</b> to the environment.</li>
      <li>(Optional) If there are any discrepancies between the declared event versions that the application intends to subscribe to and the consumers set up for the application, or if no application in the environment publishes a declared subscribed event, click <b>View Discrepancies</b> in the message that displays to view the discrepancies. and perform one of the following steps:
                <ul><li>Click <b>Edit Version</b> to open the application version in a new tab and fix one or more of the discrepancies. For more information, see <MadCap:xref href="#Fixing_Event_Flow">Fixing Event Flow Discrepancies</MadCap:xref>.</li><li>Click <b>Close</b> to return to the <b>Add to Environment</b> dialog box.</li></ul></li>
      <li>Click <b>Add</b>.</li>
      <p><MadCap:variable name="Product-Names.eventportal_product_short"/> adds the application version to the event broker. The version number and state display next to the event broker name. You can also view the application version in the modeled event mesh in <MadCap:variable name="Product-Names.ep_rt_event_manager"/>.</p>
    </ol>
    <h3 MadCap:conditions="Default.OnlyForPDF"><a name="app-environments-config"/>Adding Applications to Environments With Runtime Configuration</h3>
    <p MadCap:conditions="Default.OnlyForPDF">When runtime configuration is enabled for an environment, application and Solace event queue configuration data may be sent to  connected event brokers. For more information about the application details sent, see <MadCap:xref href="event-portal-runtime-config.htm#adding_client_details">Adding Client Details to an Application in [%=Product-Names.ep_designer%]</MadCap:xref>.</p>
    <p MadCap:conditions="Default.OnlyForPDF">To add an application version to an environment that has runtime configuration enabled, perform these steps:</p>
    <ol MadCap:conditions="Default.OnlyForPDF">
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>In the graph view, click the application that you want to add to an environment.</li>
      <li>
        <p>In the application detail panel that appears, click <b>More Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/> and select <b>Manage Runtime Environments</b>,</p>
        <p>The application opens to the <b>Runtime</b> tab. The <b>Runtime</b> tab displays a list of all environments in your organization. Each environment shows the number of model event brokers it contains of the same type (Solace or Kafka) and, for Solace applications, indicates whether runtime configuration is enabled.</p>
        <p>You can select the <b>With Applications</b> filter to hide event brokers that don't have associated applications. </p>
      </li>
      <li>
        <p>Click an environment with runtime configuration enabled that you want the add the application to. The environment expands to show the model event brokers of the same type in the environment and the name of the modeled event mesh each event broker belongs to.</p>
        <p>You can select the <b>With Credentials</b> filter to show only event brokers that already have client credentials added for the application.</p>
      </li>
      <li>Click Add <img src="../../Resources/Images/Cloud/reusable-icons/ep_add_icon.png" alt=""/> for the event broker that you want to add the application to.</li>
      <li>If the client credentials for the application have not been set, enter the client credentials and click <b>Save Credentials and Continue</b>. These credentials allow the client application in the runtime to connect to the event broker to send and receive event messages. The credentials include:<ul><li><b>Access Type</b>—select <b>Basic</b> or <b>Authorization Group</b>, depending on the authentication method used by the event broker.</li><li><b>Username</b>—specify the client username for the application. If the client username already exists on the event broker, configuration details for the application can update the client on the event broker.</li><li><b>Password</b> or <b>Authorization Group</b>—specify the client password for basic authentication or the LDAP authorization group name for authorization group authentication.</li></ul></li>
      <li>Select the <b>Application version to add</b>.</li>
      <li>(Optional) If there are any discrepancies between the declared event versions that the application intends to subscribe to and the consumers set up for the application, or if no application in the environment publishes a subscribed event, click <b>View Discrepancies</b> in the message that displays to view the discrepancies. and perform one of the following steps:
                <ul><li>Click <b>Open Application Version</b> to open the application version in a new tab and fix one or more of the discrepancies. For more information, see <MadCap:xref href="#Fixing_Event_Flow">Fixing Event Flow Discrepancies</MadCap:xref>.</li><li>Click <b>Close</b> to return to the <b>Add to Environment</b> dialog box.</li></ul></li>
      <li>Review the client profile, credential, and queue configuration details that will be sent to the event broker if runtime configuration is fully set up.</li>
      <li>
        <p>Click <b>Add</b>.</p>
        <p><MadCap:variable name="Product-Names.eventportal_product_short"/> adds the application version to the event broker. The version number and state displays next to the event broker name. You can view the application in the modeled event mesh in <MadCap:variable name="Product-Names.ep_rt_event_manager"/>. If runtime configuration is fully set up, the client and queues are configured on the operational event broker. The client username on the event broker is automatically associated with the specified client profile and an ACL profile  based on the credentials set in <MadCap:variable name="Product-Names.ep_designer"/>.</p>
      </li>
    </ol>
    <h3><a name="Fixing_Event_Flow"/>Fixing Event Flow Discrepancies</h3>
    <p> If <MadCap:variable name="Product-Names.eventportal_product_short"/> detects discrepancies in the event flows, the <b>Add to Environment</b> dialog box displays a message. You can choose to display the discrepancies and fix them if necessary.  For more information, see <MadCap:xref href="#app-environment">Adding an Application Version to an Environment</MadCap:xref>.</p>
    <p>The list of discrepancies can help you verify that the consumers set up for the application are set up correctly to behave according to your expectations. You can correct discrepancies before adding the application to the environment, but it is not required. The following table describes the discrepancies and potential resolutions.</p>
    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Discrepancy</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Description</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Resolutions</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">No Matching Subscription</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">The application has a declared event version that it intends to subscribe to, but does not have a consumer with a matching subscription to attract the event version.</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Add a new subscription to an existing consumer or add a new consumer to the application that subscribes to the event version, or remove the event version from the list of declared events the application intends to subscribe to.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Not Published in Environment</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">The application has a declared event version that it intends to subscribe to but no application in the modeled event mesh publishes that event.</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">Add an application that publishes the event version to the same modeled event mesh.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Different Version</td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">A consumer subscription in the application attracts a different version of an event than the declared event version that the application intends to subscribe to.</td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Verify which version of the event the consumer needs to subscribe to and perform one of the following actions:</p>
            <ul>
              <li>
                <p>update the consumer subscription</p>
              </li>
              <li>
                <p>update the version of the declared event that the application version references</p>
              </li>
              <li>
                <p>add an application that publishes the event version to the modeled event mesh</p>
              </li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">Additional Attracted Event Version</td>
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">The application has a consumer subscription that attracts an event that is not one of the declared event versions that the application intends to subscribe to.</td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">Update the application version to declare the intent to subscribe to the event version, or update the consumer subscription if it is attracting an unintended event.</td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">No Topic Address</td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">A declared event version that the application intends to subscribe to does not have a topic address.</td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">Add a topic address to the declared event version.</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h3 MadCap:conditions="Default.OnlyForPDF">Managing Associations with Environments</h3>
    <p MadCap:conditions="Default.OnlyForPDF">The <b>Runtime</b> tab for applications displays all of the model event brokers in environments in your <MadCap:variable name="Product-Names.pubsub_brand_only"/> account that you can associate an application with. When you expand a row for an environment, you can see the names of event brokers of the same type (Solace or Kafka) in the environment and, whether a version of the application is already associated with the event broker.</p>
    <p MadCap:conditions="Default.OnlyForPDF">If runtime configuration is enabled for the environment but the model event broker does not have a connection to an operational  event broker through an <MadCap:variable name="Product-Names.ep_runtime_agent"/>, an error displays for the event broker and the environment on the Runtime tab if a version of the application has been associated with it. If this error is expected because you have not yet established a connection between <MadCap:variable name="Product-Names.eventportal_product_short"/> and the event broker, you can ignore the error. For more information about setting up event brokers for runtime configuration, see <MadCap:xref href="event-portal-runtime-config.htm" target="_blank">Configuring Event Brokers from [%=Product-Names.eventportal_product_short%]</MadCap:xref>.</p>
    <p MadCap:conditions="Default.OnlyForPDF">When you add an application to an event broker that has runtime configuration enabled, you must enter a client username and the event broker credentials for the client. You can update the username and credentials later or add the credentials before associating the event.</p>
    <p MadCap:conditions="Default.OnlyForPDF">To add or update event broker credentials for the client, perform these steps:</p>
    <ol MadCap:conditions="Default.OnlyForPDF">
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>In the graph view, click the application that you want to add to an environment.</li>
      <li>In the application detail panel that appears, click <b>More Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/> and select <b>Manage Runtime Environments</b>,</li>
      <li>Click an environment with runtime configuration enabled that you want the set the client credentials for. The environment expands to show the model event brokers of the same type in the environment and the name of the modeled event mesh each event broker belongs to.</li>
      <li>Click <b>More Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/> for the event broker that you want to set the credentials for and select <b>Manage Credentials</b>.</li>
      <li>Click Add <img src="../../Resources/Images/Cloud/reusable-icons/ep_add_icon.png" alt=""/> for the event broker that you want to add the application to.</li>
      <li>Enter the client credentials. These credentials allow the client application in the runtime to connect to the event broker to send and receive event messages. The credentials include:<ul><li><b>Access Type</b>—select <b>Basic</b> or <b>Authorization Group</b>, depending on the authentication method used by the event broker.</li><li><b>Username</b>—specify the client username for the application. If the client username already exists on the event broker, configuration details for the application can update the client on the event broker.</li><li><b>Password</b> or <b>Authorization Group</b>—specify the client password for basic authentication or the LDAP authorization group name for authorization group authentication.</li></ul></li>
      <li>Click <b>Save</b>.</li>
    </ol>
    <h2><a name="Download_Async_API_App"/>Downloading an AsyncAPI Document for an Application</h2>
    <p>An AsyncAPI document is a JSON or YAML file generated according to the AsyncAPI Specification. For more information, see the <a href="https://www.asyncapi.com/" target="_blank" class="link-offsite">AsyncAPI Initiative</a>. You can give the AsyncAPI document to developers to help them create the actual applications that are part of your event mesh.</p>
    <p>You can download an AsyncAPI document for an application with or without server details and operation bindings for any model event brokers that the application is associated with in an environment.</p>
    <p>To download an AsyncAPI document for an application, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the name of the application domain that contains the application.</li>
      <li>Click <b>Components </b><img src="../../Resources/Images/Cloud/reusable-icons/designer-list.png" alt=""/> to switch to the list view.</li>
      <li>Select the <b>Applications</b> tab.</li>
      <li>In the list of applications, click the name of the application.</li>
      <li>In the <b>Versions</b> list, select the version that you want to download the AsyncAPI document for.</li>
      <li>In the version details, click <b>More Actions</b><img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/> and select <b>Download Async API</b>.</li>
      <li>If you want to include server details and operation bindings for an event broker that you have associated the application with, select the event broker from the <b>Event Broker</b> drop-down list. </li>
      <li>
        <p>(Optional) If you selected an event broker, select <b>Include both attracted and designed events</b> to include events that are specified by both the pub/sub and consumer event flows. </p>
        <p>If you select an event broker but don't select this option, only events attracted by a consumer topic subscription are included in the AsyncAPI file.
              </p>
        <p>If you don't select an event broker, this setting is not available and only events that have a publish or subscribe event flow specified in <MadCap:variable name="Product-Names.ep_designer"/> are included in the AsyncAPI file.</p>
      </li>
      <li>Select <b>JSON</b> or <b>YAML</b> file format.</li>
      <li>Click <b>Download File</b>.</li>
    </ol>
    <h2 MadCap:conditions="Default.HideFromAllOutput"><a name="queue_configuration"/>Specifying Queue Configuration for a Solace Event Broker</h2>
    <p MadCap:conditions="Default.HideFromAllOutput">If you add a Solace event queue as a consumer in your application, you have the option to specify configuration details for the queue in JSON format. At this time you can download the configuration details to help you configure a queue on a runtime Solace event broker. <MadCap:conditionalText MadCap:conditions="SAP.SAPTempHide">Future updates will enable sending this queue configuration to <MadCap:variable name="Product-Names.broker_cloud_short"/>s managed in the same <MadCap:variable name="Product-Names.cloud_product_short"/> account.</MadCap:conditionalText></p>
    <p MadCap:conditions="Default.HideFromAllOutput">For more information about configuring queues on event brokers in <MadCap:variable name="Product-Names.cloud_product_short"/>, see <MadCap:xref href="../Broker-Manager/configuring-queues-broker-manager.htm">Configuring Queues</MadCap:xref>.</p>
    <p MadCap:conditions="SAP.SAPTempHide,Default.HideFromAllOutput">
      <div class="thumbnail-container">
        <img src="../../Resources/Images/Event-Portal/app-queue-config.png" alt="Screenshot showing the settings described in the surrounding steps." class="solacethumbnail"/>
      </div>
    </p>
    <h3 MadCap:conditions="Default.HideFromAllOutput">Default Queue Configuration</h3>
    <p MadCap:conditions="Default.HideFromAllOutput">If you choose to set the event queue configuration, you can start with the default values. The default values added in <MadCap:variable name="Product-Names.eventportal_product_short"/> represent the default values of the required settings for a queue on a Solace event broker.</p>
    <p MadCap:conditions="Default.HideFromAllOutput">The JSON default settings are:</p>
    <pre MadCap:conditions="Default.HideFromAllOutput">
{
  "queueName": "consumer_name",
  "accessType": "exclusive",
  "maxMsgSpoolUsage": 5000
}</pre>
    <p MadCap:conditions="Default.HideFromAllOutput"><MadCap:variable name="Product-Names.eventportal_product_short"/> validates that the configuration is in proper JSON format, so you must add a name for the queue,  for example: <code>"queueName": "Product"</code>. For ease of management, you may want to use the same name for the consumer in the application and the queue it represents on the event broker.</p>
    <h3 MadCap:conditions="Default.HideFromAllOutput">Queue Configuration Properties</h3>
    <p MadCap:conditions="Default.HideFromAllOutput">Your JSON queue configuration can include the following parameters. <MadCap:conditionalText MadCap:conditions="SAP.SapHideFromOutput">  For more information, see  <a href="https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/software-broker/config/index.html#/queue/createMsgVpnQueue" target="_blank" class="link-internal">SEMP API queue parameters</a>.</MadCap:conditionalText></p>
    <table style="mc-table-style: url('../../Resources/TableStyles/Table_Num.css');border-left-style: solid;border-left-width: 1px;border-left-color: #e1e1e1;border-right-style: solid;border-right-width: 1px;border-right-color: #e1e1e1;border-top-style: solid;border-top-width: 1px;border-top-color: #e1e1e1;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #e1e1e1;" class="TableStyle-Table_Num" cellspacing="0" MadCap:conditions="Default.HideFromAllOutput">
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Property</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>accessType</code>
            </p>
            <p>(included in default configuration)</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies how messages are delivered when multiple consumer flows are bound to the queue. The default value is <code>exclusive</code>.</p>
            <ul>
              <li><code>Exclusive</code> specifies that only one consumer can receive a message at any one time, while additional consumers may be connected as standby. Only the first consumer to bind can receive messages. If the first consumer disconnects, the second consumer receives data, and so on. Exclusive queues always deliver messages in the order they are received.</li>
              <li><code>Non-Exclusive</code> specifies that multiple consumers can bind to the queue, which enables load balancing and consumer auto-scaling. A non-exclusive queue can be non-partitioned or partitioned. <ul><li>For a non-partitioned queue (<code>partitionCount</code> is <code>0</code>), each consumer is serviced in a round-robin fashion. If a connection fails, unacknowledged messages are delivered to another consumer with the re-delivered flag set. In this way, messages can be delivered to consumers out of order.</li><li>For a partitioned queue (<code>partitionCount </code>is greater than <code>0</code>), each consumer is delivered messages from one or more partitions. Messages are mapped to partitions based on a hash of the partition key, which is set by the publishing application. Message order is maintained within a partition, but not between partitions.</li></ul></li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>consumerAckPropagationEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Enables or disables the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to the standby replication Message VPN. The default value is <code>true</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>deadMsgQueue</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the name of the dead message queue (DMQ) used by the queue. </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>
              <code>deliveryCountEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Enables or disables the ability for client applications to query the message delivery count of messages received from the queue. This is a controlled availability feature. Please contact support to find out if this feature is supported for your use case. The default value is <code>false</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>deliveryDelay</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the delay, in seconds, to apply to messages arriving on the queue before the messages are eligible for delivery. The default value is <code>0</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>eventBindCountThreshold</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies event bind count thresholds for the queue:</p>
            <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event Threshold.flsnp"/>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>eventMsgSpoolUsageThreshold</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies message spool usage thresholds for the queue:</p>
            <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event Threshold.flsnp"/>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>eventRejectLowPriorityMsgLimitThreshold</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Specifies message spool usage thresholds for the queue:</p>
            <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Event Threshold.flsnp"/>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>maxBindCount</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the maximum number of consumer flows that can bind to the queue. The default value is <code>1000</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>maxDeliveredUnackedMsgsPerFlow</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the maximum number of messages delivered but not acknowledged per flow for the queue. The default value is <code>10000</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>maxMsgSize</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies he maximum message size allowed in the queue, in bytes. The default value is <code>10000000</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>
              <code>maxMsgSpoolUsage</code>
            </p>
            <p>(included in default configuration)</p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Specifies the maximum message spool usage allowed by the queue, in megabytes. A value of <code>0</code> only allows spooling of the last message received and disables quota checking. The default value is <code>5000</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>maxRedeliveryCount</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the maximum number of times the queue will attempt redelivery of a message prior to it being discarded or moved to the DMQ. A value of <code>0</code> means to retry forever. The default value is <code>0</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>maxTtl</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the maximum time, in seconds, a message can stay in the queue when <code>respectTtlEnabled</code> is <code>true</code>. A message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the <code>maxTtl</code> configured for the queue, is exceeded. A value of <code>0</code> disables expiry. The default value is <code>0</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>msgVpnName</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the name of the Message VPN hosting the queue.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>
              <code>owner</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Specifies the client username that owns the queue. The queue owner has full unlimited permissions for the queue. The owner can consume, delete, or modify topics in the queue. By default, users with access to <MadCap:variable name="Product-Names.pubsubmanager_long"/> have ownership privileges. You can also give ownership to client applications.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>partitionCount</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>	Specifies the count of partitions of the queue. This setting is only relevant for queues with an access type of non-exclusive. When set to <code>0</code>, bound clients receive messages in a round-robin fashion. Otherwise, bound clients receive messages from individually assigned partitions.  The default value is <code>0</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>partitionRebalanceDelay</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the delay, in seconds, before a partition rebalance is started once needed. The default value is <code>5</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>partitionRebalanceMaxHandoffTime</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the maximum time, in seconds to wait before handing off a partition while rebalancing. The default value is <code>3</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>
              <code>permission</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Specifies the access level given to client applications other than the queue owner.  The default value is <code>consume</code>. Possible values are:</p>
            <ul>
              <li style="font-weight: normal;"><code>no-access</code>—Disallows all access.</li>
              <li><code>read-only</code>—Clients have read-only access to messages spooled to the queue.</li>
              <li><code>consume</code>—Clients can consume and delete messages from the queue.</li>
              <li><code>modify-topic</code>—Clients can consume and delete messages and modify the topic or selector assigned to the queue.</li>
              <li><code>delete</code>—Clients can consume and delete messages, modify the topic or selector assigned to the queue, and delete the queue.</li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>queueName</code>
            </p>
            <p>(included in default configuration)</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the name of the queue.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>redeliveryDelayEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Enables or disables a message redelivery delay. When <code>false</code>, messages are redelivered as soon as possible. When <code>true</code>, messages are redelivered according to the initial, max, and multiplier. The default value is <code>false</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>redeliveryDelayInitialInterval</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the delay to be used between the first two redelivery attempts, in milliseconds. The default value is <code>1000</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>
              <code>redeliveryDelayMaxInterval</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Specifies the maximum delay to be used between any two redelivery attempts, in milliseconds. The default value is <code>64000</code>. </p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>redeliveryDelayMultiplier</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies the amount each delay interval is multiplied by after each failed delivery attempt. This number is in a fixed-point decimal format in which you must divide by 100 to get the floating point value. For example, a value of <code>125 </code>would cause the delay to be multiplied by 1.25. The default value is <code>200</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>redeliveryEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>	Enables or disables message redelivery. When enabled, the number of redelivery attempts is controlled by <code>maxRedeliveryCount</code>. When disabled, the message will never be delivered from the queue more than once. The default value is <code>true</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>rejectLowPriorityMsgEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Enables or disables the checking of low priority messages against the <code>rejectLowPriorityMsgLimit</code>. This can be enabled only if <code>rejectMsgToSenderOnDiscardBehavior </code>does not have a value of <code>never</code>. The default value is <code>false</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyE-Column1-Body1">
            <p>
              <code>rejectLowPriorityMsgLimit	</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
            <p>Specifies the number of messages of any priority in the queue above which low priority messages are not admitted but higher priority messages are allowed. The default value is <code>0</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>rejectMsgToSenderOnDiscardBehavior</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Specifies when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is <code>when-queue-enabled</code>. Possible values are:</p>
            <ul>
              <li><code>never</code>—Silently discard messages</li>
              <li><code>when-queue-enabled</code>—NACK each message discard back to the client, except messages that are discarded because an endpoint is administratively disabled</li>
              <li><code>always</code>—NACK each message discard back to the client, including messages that are discarded because an endpoint is administratively disabled</li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>
              <code>respectMsgPriorityEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Enables or disables the respecting of message priority. When enabled, messages contained in the queue are delivered in priority order. The default value is <code>false</code>.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p>
              <code>respectTtlEnabled</code>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p>Enables or disables the respecting of the time-to-live (TTL) for messages in the queue. When enabled, expired messages are discarded or moved to the DMQ. The default value is <code>false</code>.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <h2><a name="Download_Queue_Config"/>Downloading a Consumer Queue Configuration</h2>
    <p>If you specify an event queue configuration for a consumer, you can download the queue configuration as a JSON file.</p>
    <p>To download the queue configuration, perform these steps:</p>
    <ol>
      <li>On the <b>Application Domains</b> page, click the application domain that contains the application you want to update.</li>
      <li>Right-click  the application in the graph view and select <b>View Details</b>.</li>
      <li>Click <b>Open Application</b>.</li>
      <li>In the <b>Versions</b> list, click <b>More Actions</b> <img src="../../Resources/Images/Cloud/reusable-icons/more_actions_ellipsis.png" alt=" "/>, next to the  version that you want to download the queue configuration for, then select <b>Edit</b>.</li>
      <li>In the <b>Event Flows</b> section of an the application, select <b>Consumers</b>.</li>
      <li>In the <b>Consumer Details</b> section for a <b>Solace Event Queue</b>, click <b>Download</b> <img src="../../Resources/Images/Cloud/reusable-icons/download.png" alt=""/> above the <b>Configuration</b> field.</li>
    </ol>
  </body>
</html>
