<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.NotForPDF" MadCap:searchable="False">
  <head>
    <meta name="robots" content="noindex, nofollow"/>
  </head>
  <body>
    <h1><MadCap:concept term="Cloud"/><MadCap:variable name="Product-Names.eventapiproduct_long"/>s (Beta)</h1>
    <p>You may have partner developers who want to use your event data to build new applications, or your partner organizations may need access to certain events to explore new business opportunities. As an event API provider, you can bundle your events into an <MadCap:variable name="Product-Names.eventapiproduct_long"/> (EAP), and release them to external developers for consumption, enabling them to build event-driven applications that can subscribe to and/or publish the specified events. An <MadCap:variable name="Product-Names.eventapiproduct_long"/> can be composed of events from either <MadCap:variable name="Product-Names.pubsub_brand_only"/> Event Broker or Kafka. </p>
    <p>You can use the <MadCap:variable name="Product-Names.eventapiproduct_long"/>s in the following ways:</p>
    <ul>
      <li>Download its associated AsyncAPI document from the <MadCap:variable name="Product-Names.eventportal_product_short"/> UI and share the file with external developers.</li>
      <li>Fetch its associated AsyncAPI document through REST GET API call enabling its integration into systems such as third-party API Portals.</li>
      <li>Provide its associated AsyncAPI document as a publicly hosted website to external developers, allowing them to browse and download the AsyncAPI document.</li>
    </ul>
    <p>The events bundled in an EAP can be added from one or more application domains, so you can mix and match events, as shown in the figure below. </p>
    <div class="thumbnail-container">
      <img class="solacethumbnail" src="../../Resources/Images/Event-Portal/api-product-bundle.png" alt="Diagram illustrating the concepts described in the surrounding text."/>
    </div>
    <p><br/>The following fictional airline example shows how related events can be bundled into different EAPs, enabling both internal and external consumers to access the EAP's underlying events for their business needs.</p>
    <div class="thumbnail-container">
      <img class="solacethumbnail" src="../../Resources/Images/Event-Portal/use-case-eap.png" alt="Diagram illustrating the concepts described in the surrounding text."/>
    </div>
    <p><br/>An <MadCap:variable name="Product-Names.eventapiproduct_long"/> bundles together the following information:</p>
    <ul>
      <li>events you want to expose</li>
      <li>associated schema information</li>
      <li> information about the event operation (publish and/or subscribe) </li>
    </ul>
    <p>In the next few topics, we will dive into the detailed features and functionalities of
        <MadCap:variable name="Product-Names.eventapiproduct_long"/>s.</p>
    <h2 class="with-rule">Before your begin</h2>
    <ul>
      <li>Ensure that you have the correct user role and permission in <MadCap:variable name="Product-Names.eventportal_product_short"/>. At the minimum, you will need the <MadCap:variable name="Product-Names.ep_manager"/> permission. For more information, refer to <MadCap:xref href="../cloud-user-management.htm">Managing Accounts, Roles, and Permissions</MadCap:xref>.</li>
      <li>Only events marked as shared in <MadCap:variable name="Product-Names.ep_designer"/> can be part of an <MadCap:variable name="Product-Names.eventapiproduct_long"/>. To learn how to mark an event as shared, refer to <MadCap:xref href="event-portal-designer.htm#create-event">Creating an Event</MadCap:xref>.</li>
      <li>For EAP's REST API documentation, refer to <MadCap:xref href="Event-Portal-REST-API.htm">[%=Product-Names.eventportal_product_short%] REST API</MadCap:xref>.</li>
    </ul>
    <h2 class="with-rule"><a name="Creating"/>Creating an <MadCap:variable name="Product-Names.eventapiproduct_long"/></h2>
    <p>You can create an <MadCap:variable name="Product-Names.eventapiproduct_long"/> (EAP) containing a subset of events from one or more application domains. You can add events while creating an EAP or edit an existing EAP to add new events. Events must be marked as shared in <MadCap:variable name="Product-Names.ep_designer"/> to be part of an <MadCap:variable name="Product-Names.eventapiproduct_long"/>. The LEM filters the list of available shared events that can be added to an EAP. When adding an event, you can set the event operation to subscribe, publish, or both. The subscribe option is enabled by default. </p>
    <p>Furthermore, you can include the same event across multiple EAPs, and the event can have different publish or subscribe operations across the EAPs. After an EAP is created, its AsyncAPI document will be immediately available for download from the console. However, to provide access externally, you must first release the EAP. A maximum of twenty EAPs can be created per account.</p>
    <p>In the example below, we will create an EAP and add events to it.</p>
    <MadCap:snippetBlock src="../../Resources/Snippets/create-event-api-product.flsnp"/>
    <p>Your newly created EAP will be available on the <MadCap:variable name="Product-Names.eventapiproduct_long"/>s page, and it will have a <b style="font-style: italic; font-weight: normal;">Not released</b> status. There are a few useful visualizations to help you identify an EAP's release status.</p>
    <ul>
      <li><img src="../../Resources/Images/Event-Portal/eap-released-rest.png" alt=" "/> or <img src="../../Resources/Images/Event-Portal/eap-released-active.png" alt=" "/> - The EAP is publicly available through the REST API</li>
      <li><img src="../../Resources/Images/Event-Portal/eap-released-website.png" alt=" "/> or <img src="../../Resources/Images/Event-Portal/eap-rest-hosted.png" alt=" "/> - Publicly available through a hosted website</li>
      <li><img src="../../Resources/Images/Event-Portal/eap-not-released.png" alt=" ">
                </img> - The EAP is not yet released.</li>
      <li MadCap:conditions="Default.HideFromAllOutput"><img src="../../Resources/Images/Event-Portal/eap-release-warning.png" alt=" ">
                </img> - There are changes in the EAP since it was last released that are not shared. You can hover your cursor over the icon to see the details.</li>
    </ul>
    <p>After adding events to the EAP, you can do the following: </p>
    <ul>
      <li><a href="#Download" class="link-internal">Download the EAP's AsyncAPI document</a> and send it to your partner developer. This is option is available in case you want to provide access to the EAP to your partner developers without exposing it publicly.</li>
      <li><a href="#Release" class="link-internal">Release the EAP and provide external access through REST API</a>.</li>
      <li><a href="#Hosting2" class="link-internal">Host a released EAP as a public website</a>.</li>
      <li><a href="#Adding" class="link-internal">Update the <MadCap:variable name="Product-Names.eventapiproduct_long"/></a>.</li>
      <li><a href="#Updating" class="link-internal">Update or Delete the EAP</a>.</li>
    </ul>
    <h2 class="with-rule"><a name="Download"/>Downloading an EAP's AsyncAPI Document</h2>
    <p>In some situations, you may not want to release an <MadCap:variable name="Product-Names.eventapiproduct_long" style="font-weight: normal;"/> (EAP) externally. For example, some partner developers may work in a highly secure environment without internet access. In that case, you can download the <MadCap:variable name="Product-Names.eventapiproduct_long"/>'s Async API document from the console and share it with external partner developers so that they can host it on their own private servers.</p>
    <p>To download an EAP's AsyncAPI document, do the following.</p>
    <MadCap:snippetBlock src="../../Resources/Snippets/download-eap.flsnp"/>
    <h2 class="with-rule"><a name="Release"/>Releasing an Event API Product </h2>
    <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/release-eap.flsnp"/>
    <p>Your partner developers can now retrieve the EAP’s AsyncAPI document through REST API or the hosted website, and integrate it into a third-party API Portal. </p>
    <p>For information on how your partner developers can retrieve the AsyncAPI document using the public REST API, see <MadCap:xref href="Event-Portal-API-Code-Samples.htm#Retrieve3" MadCap:conditions="SAP.SapHideFromOutput">Retrieve EAP's AsyncAPI Document (Partner Developers)</MadCap:xref><MadCap:conditionalText MadCap:conditions="SAP.SapOnlyOutput"><MadCap:xref href="#Retrieve">Retrieving an EAP's AsyncAPI Document using REST</MadCap:xref></MadCap:conditionalText>.</p>
    <p>For information on using the EAP's hosted website, see <MadCap:xref href="#Hosting2">Hosting an Event API Product Website</MadCap:xref>.</p>
    <h2 class="with-rule"><a name="Hosting2"/>Hosting an Event API Product Website</h2>
    <p>After releasing an Event API Product (EAP), you can make it available as a hosted website so that your partner developers can view the EAP  from their web browser and download the AsyncAPI document. In the case of multiple EAP's, each published EAP is hosted on its own website. There are two ways you can enable the hosting of an <MadCap:variable name="Product-Names.eventapiproduct_long"/> website:</p>
    <ul>
      <li>When releasing an EAP, you can optionally choose to host it as a website. To learn more, refer to <MadCap:xref href="#Release">Releasing an Event API Product.</MadCap:xref></li>
      <li>Host an <MadCap:variable name="Product-Names.eventapiproduct_long"/> website after it is released.</li>
    </ul>
    <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/host-eap.flsnp"/>
    <h2 class="with-rule">Unhosting an <MadCap:variable name="Product-Names.eventapiproduct_long"/> Website</h2>
    <p>When you unhost an <MadCap:variable name="Product-Names.eventapiproduct_long"/> website, external developers will not be able to view its AsyncAPI document or download it. To unhost an <MadCap:variable name="Product-Names.eventapiproduct_long"/> website, do the following:</p>
    <ol>
      <li>
        <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/>
      </li>
      <li>Select <MadCap:variable name="Product-Names.eventapiproduct_long" style="font-weight: bold;"/><b>s</b> on the welcome screen or the <b>API Products</b> icon on the left navigation bar.</li>
      <li>On the <MadCap:variable name="Product-Names.eventapiproduct_long"/>s page, select an EAP with a hosted website. An EAP with a hosted website is indicated by a green <img src="../../Resources/Images/Event-Portal/eap-rest-hosted.png" alt="Hosted"/> and <img src="../../Resources/Images/Event-Portal/eap-released-rest.png" alt=" "/> icons.<div id="containerThumbnail" class="thumbnail-container"><img src="../../Resources/Images/Event-Portal/eap-card-rest-api.png" class="solacethumbnail" alt="Screenshot showing the settings described in the surrounding text." style="width: 352px;height: 254px;"/></div></li>
      <li>On the EAP page, click <b>Unhost Website</b> located on the right pane.</li>
      <li>On the dialog that appears, click <b>Unhost</b>. The <MadCap:variable name="Product-Names.eventapiproduct_long"/> will be unavailable as a hosted website.</li>
    </ol>
    <h2 class="with-rule"><a name="Unreleas"/>Unreleasing an Event API Product </h2>
    <p>You can <b>Unrelease</b> an <MadCap:variable name="Product-Names.eventapiproduct_long"/>, which will pull it back from the current release state. </p>
    <p class="Warning">When an EAP is unreleased, external users will no longer be able to use the Rest API or hosted website.</p>
    <p>To unrelease an EAP, perform the following steps:</p>
    <ol>
      <li>
        <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/>
      </li>
      <li>Select <MadCap:variable name="Product-Names.eventapiproduct_long" style="font-weight: bold;"/><b>s</b> on the welcome screen or the <b>API Products</b> icon on the left navigation bar.</li>
      <li>On the <MadCap:variable name="Product-Names.eventapiproduct_long"/>s page, select an EAP.</li>
      <li>On the EAP page, click the <b>Actions</b> (<b>...</b>) on the top right.</li>
      <li>Select <b>Unrelease</b>.</li>
      <li>On the dialog that appears, click <b>Unrelease</b>. </li>
    </ol>
    <h2 class="with-rule"><a name="Adding"/>Updating an <MadCap:variable name="Product-Names.eventapiproduct_long"/></h2>
    <p> You can update the following information for an existing <MadCap:variable name="Product-Names.eventapiproduct_long"/>:</p>
    <ul>
      <li>Update the general information (Name, Summary, Technical Description, and server settings)</li>
      <li>Add new events</li>
      <li>Remove events</li>
      <li>Update the operation of existing events</li>
    </ul>
    <p class="Note">You must re-release the EAP to apply the updates. Furthermore, if an event is deleted or updated in <MadCap:variable name="Product-Names.ep_designer"/>, the changes will immediately apply to the AsyncAPI document that's downloadable from the console. However, the released version of the AsyncAPI document is not impacted by changes made in the <MadCap:variable name="Product-Names.ep_designer"/> until the EAP is re-released. Therefore, the EAP must be re-released to pull in the event updates made in <MadCap:variable name="Product-Names.ep_designer"/>. For more information on releasing an EAP's AsyncAPI document, see <MadCap:xref href="#Release">Releasing  an Event API Product.</MadCap:xref></p>
    <h3><a name="Updating"/>Updating General EAP Information</h3>
    <p>To update the Name, Summary, Technical Description, or server settings of an EAP, do the following:</p>
    <ol>
      <li>
        <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/>
      </li>
      <li>Select <MadCap:variable name="Product-Names.eventapiproduct_long" style="font-weight: bold;"/><b>s</b> on the welcome screen or the <b>API Products</b> icon on the left navigation bar.</li>
      <li>Locate the <MadCap:variable name="Product-Names.eventapiproduct_long"/> you want to update </li>
      <li> Click <b>Actions</b> (<b>...</b>) on the card and select <b>Edit</b>.</li>
      <li>On the Edit Event API Products page, update the general information.</li>
      <li>Click <b>Save</b>.</li>
    </ol>
    <h3><a name="Deleting"/>Deleting an EAP</h3>
    <p>To permanently delete an <MadCap:variable name="Product-Names.eventapiproduct_long"/> (EAP) you must unrelease it. You cannot delete a released EAP. </p>
    <p class="Warning">Once an EAP is deleted, it cannot be restored.</p>
    <p>To delete an EAP, do the following:</p>
    <ol>
      <li>
        <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/>
      </li>
      <li>Select <MadCap:variable name="Product-Names.eventapiproduct_long" style="font-weight: bold;"/><b>s</b> on the welcome screen or the <b>API Products</b> icon on the left navigation bar.</li>
      <li>Locate the <MadCap:variable name="Product-Names.eventapiproduct_long"/> you want to update </li>
      <li> Click <b>Actions</b> (<b>...</b>) on the card and select <b>Delete</b>.</li>
      <li>On the dialog that appears, select <b>Delete</b>.</li>
    </ol>
    <h3><a name="update-eap"/>Updating or Deleting Events from an EAP</h3>
    <p>After adding events to an <MadCap:variable name="Product-Names.eventapiproduct_long"/> (EAP), you can update it's operation (publish/subscribe) or remove events from it. Note that after updating an EAP, the updates must be released to make it externally available.</p>
    <p>To update an existing EAP, do the following:</p>
    <ol>
      <li>
        <MadCap:snippetBlock src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/>
      </li>
      <li>Select <MadCap:variable name="Product-Names.eventapiproduct_long" style="font-weight: bold;"/><b>s</b> on the welcome screen or the <b>API Products</b> icon on the left navigation bar.</li>
      <li>Locate the <MadCap:variable name="Product-Names.eventapiproduct_long"/> you want to update, click <b>Actions</b> (<b>...</b>) on the card, and select <b>Edit</b></li>
      <li>On the Edit API Products Page, select the <b>Events</b> tab.</li>
      <li>You can now update the operation of the event or remove the event from the EAP.<ul><li>To update an event operation, select or deselect the Subscribe or Publish checkbox.</li><li>To remove an event, select the remove icon (<b>X</b>)</li></ul></li>
      <li>Click <b>Save</b>.</li>
    </ol>
    <h2 class="with-rule" MadCap:conditions="Default.ContentProductLink"><a name="Retrieve"/>Retrieving an EAP's AsyncAPI Document using REST </h2>
    <p>After an EAP is released, your partner developers can retrieve the EAP's AsyncAPI document using the <MadCap:variable name="Product-Names.eventportal_product_short"/> REST API. This allows your partner developers to integrate the EAP into a third-party API Portal.<MadCap:conditionalText MadCap:conditions="SAP.SapHideFromOutput"> For an example usage of the EAP's public REST API, see <MadCap:xref href="Event-Portal-API-Code-Samples.htm#Retrieve3">Retrieve EAP's AsyncAPI Document (Partner Developers)</MadCap:xref>.</MadCap:conditionalText> <MadCap:conditionalText MadCap:conditions="SAP.SapOnlyOutput">To learn more about <MadCap:variable name="Product-Names.eventportal_product_short"/> REST API and the information you will need to retrive an EAP's AsyncAPI document, see <MadCap:xref href="Event-Portal-REST-API.htm">[%=Product-Names.eventportal_product_short%] REST API</MadCap:xref>.</MadCap:conditionalText></p>
    <p MadCap:conditions="SAP.SapOnlyOutput">To retrieve the AsyncAPI document, your will need to generate the <b>API Products AsyncAPI Read</b><a href="Event-Portal-REST-API.htm#Create" class="link-internal">security token</a> and share it with your partner developers requiring access to the EAP's AsyncAPI document. Your partner developers will need the security token to authorize REST requests from their REST Client to <MadCap:variable name="Product-Names.eventportal_product_short"/>. You can generate the token in the  <MadCap:conditionalText MadCap:conditions="SAP.SapHideFromOutput"><MadCap:variable name="Product-Names.cloud_product_long"/></MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="SAP.SapOnlyOutput"><MadCap:variable name="Product-Names.cloud_product_firstuse_initialcase"/></MadCap:conditionalText>  console. </p>
    <p class="Note" MadCap:conditions="SAP.SapOnlyOutput">The EAP must be marked as <b>Released</b> in the console for it to be accessible through these public REST APIs.</p>
    <p MadCap:conditions="SAP.SapOnlyOutput">After an EAP is released, your partner developers can retrieve it's AsyncAPI document using a GET call to one of the following endpoints:</p>
    <ul>
      <li MadCap:conditions="SAP.SapOnlyOutput">
        <code>/api/v0/eventPortal/apiProducts/{productId}/asyncApi.json</code>
      </li>
      <li MadCap:conditions="SAP.SapOnlyOutput">
        <code>/api/v0/eventPortal/apiProducts/{productId}/asyncApi.yaml</code>
      </li>
    </ul>
    <p MadCap:conditions="SAP.SapOnlyOutput">In the example below, a POST call to <code> /api/v0/eventPortal/apiProducts/{productId}/asyncApi.yaml</code> retrieves the EAP's AsyncAPI document in YAML format. A successful response returns <code>200 OK</code> with the AsycnAPI details in the payload. </p>
    <p MadCap:conditions="SAP.SapOnlyOutput"> A similar call can be made to retrieve the EAP’s AsyncAPI in JSON format using a POST call to <code>/api/v0/eventPortal/apiProducts/{productId}/asyncApi.json</code>.</p>
    <p MadCap:conditions="SAP.SapOnlyOutput">The following Postman screenshot illustrates an AsyncAPI document retrieved in YAML format.</p>
    <div class="thumbnail-container" MadCap:conditions="SAP.SapOnlyOutput">
      <img class="solacethumbnail" src="../../Resources/Images/Event-Portal/rest-eap-partner-retrieve-asyncapi.png" alt="Screenshot showing the settings described in the surrounding text."/>
    </div>
    <p MadCap:conditions="SAP.SapOnlyOutput">Note that if a Kafka Key is a primitive type, the name of primitive type will be displayed in the payload; otherwise, it will be a reference (<code>$ref</code>) to the schema in schema section. </p>
  </body>
</html>
