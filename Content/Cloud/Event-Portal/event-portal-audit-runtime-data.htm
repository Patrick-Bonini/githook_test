<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.ContentProductLink">
  <head>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" MadCap:stylesheetType="table"/>
  </head>
  <body>
    <h1><MadCap:concept term="Cloud"/>Auditing and Importing Runtime Data</h1>
    <p>After an <MadCap:variable name="Product-Names.ep_runtime_agent"/> runs a discovery scan and uploads runtime data into <MadCap:variable name="Product-Names.eventportal_product_short"/>, <MadCap:variable name="Product-Names.ep_rt_event_manager"/> audits the runtime data against the objects associated with the related model event brokers. The audit shows whether objects in the  runtime and objects in the design match, and enables you to import objects into <MadCap:variable name="Product-Names.ep_designer"/> or mark results that require action on the runtime event broker. Auditing runtime data against a modeled event mesh can be useful in these ways:</p>
    <ul>
      <li>If you've used <MadCap:variable name="Product-Names.eventportal_product_short"/> to design an event mesh, auditing your runtime data helps you verify that your runtime event mesh has been set up to match the design.</li>
      <li>If you have a mature model and runtime, the audit helps you identify changes or discrepancies between model event brokers and runtime event brokers so you can make updates to keep them in sync.</li>
      <li>If you have an existing Solace event mesh or Kafka cluster but you're just getting started with <MadCap:variable name="Product-Names.eventportal_product_short"/>, you can use the audit and import features to populate your modeled event mesh rather than having to create every object from scratch in <MadCap:variable name="Product-Names.ep_designer"/>.</li>
    </ul>
    <p>This section includes the following tasks:</p>
    <ul>
      <li>
        <MadCap:xref href="#viewing_audit_results">Viewing Audit Results</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#tagging_audit_results">Tagging Audit Results</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#comparing_partial_matches">Comparing Partial Matches</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#viewing_runtime_object">Viewing the Runtime Object Configuration</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#importing_objects">Importing Runtime Objects into [%=Product-Names.eventportal_product_short%]</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#Importing_Solace_Queues">Importing Solace Queues</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#Importing_Kafka_Objects">Importing Kafka Objects</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#importing_consumer_groups">Importing Kafka Consumer Groups</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#import_topics">Importing Kafka Topics</MadCap:xref>
      </li>
      <li>
        <MadCap:xref href="#Importing_Kafka_Subjects">Importing Confluent Subjects</MadCap:xref>
      </li>
    </ul>
    <p>For information about collecting data from runtime event brokers, see <MadCap:xref href="event-portal-collect-runtime-data.htm">Discovering Runtime Data</MadCap:xref>.</p>
    <h2><a name="viewing_audit_results"/>Viewing Audit Results</h2>
    <p><MadCap:variable name="Product-Names.ep_rt_event_manager"/> automatically audits uploaded data from discovery scans against the applications, events, and Kafka schemas associated with the connected model event broker. You must be an <a href="event-portal-user-access.htm" target="_blank" class="link-internal">Administrator or Event Portal Manager</a> to view the audit results. </p>
    <p>Audit results display on the <b>Audit</b> tab of the modeled event mesh. The <b>Audit</b> tab displays results for the event brokers in the modeled event mesh that have corresponding runtime data that has been uploaded to <MadCap:variable name="Product-Names.eventportal_product_short"/> from an <MadCap:variable name="Product-Names.ep_runtime_agent"/>.</p>
    <p>Audit results update automatically in when <MadCap:variable name="Product-Names.ep_rt_event_manager"/> receives new object data in these ways:</p>
    <ul>
      <li>a connected <MadCap:variable name="Product-Names.ep_runtime_agent"/> runs a discovery scan and uploads the data to <MadCap:variable name="Product-Names.eventportal_product_short"/></li>
      <li>you <a href="event-portal-runtime-ema.htm#manual-import" target="_blank" class="link-internal">manually upload</a> discovery scan data into <MadCap:variable name="Product-Names.eventportal_product_short"/></li>
      <li>you update an application or event version in <MadCap:variable name="Product-Names.ep_designer"/> that is associated with an event broker in the modeled event mesh.</li>
    </ul>
    <p>To view audit results, perform these steps:</p>
    <ol>
      <li><MadCap:snippetText src="../../Resources/Snippets/Cloud/Task_UI_Snippets/login_console.flsnp"/><![CDATA[
               ]]></li>
      <li>In the <MadCap:variable name="Product-Names.console_ui_short"/>, select <b><MadCap:variable name="Product-Names.ep_rt_event_manager"/></b><img src="../../Resources/Images/Cloud/reusable-icons/navbar_runtime_manager.png" alt=""/> on the navigation bar. </li>
      <li>Select the <b>Modeled Event Meshes</b> tab.</li>
      <li>Click the name of the modeled event mesh that you want to view the audit results for.</li>
      <li>Select the <b>Audit</b> tab.</li>
      <li>(Optional) To collect fresh runtime data before reviewing the audit results, click <b>Run Discovery Scan</b>. For more information, see <MadCap:xref href="event-portal-collect-runtime-data.htm#collecting_runtime_data" target="_blank">Scan for Runtime Data</MadCap:xref>.</li>
      <li>For Kafka modeled event meshes, select <b>Consumer Groups</b>, <b>Topics</b>, or <b>Subjects</b> to view results for the selected entity type.
			<div class="thumbnail-container" MadCap:conditions="SAP.SapHideFromOutput"><img src="../../Resources/Images/Event-Portal/audit-results.png" alt="Screenshot showing the options described in the surrounding text." class="solacethumbnail"/></div></li>
      <li>(Optional) Click <b>Filter</b><img src="../../Resources/Images/Cloud/reusable-icons/filter-catalog-icon.png" alt=""/> to apply filters to the list to narrow the results. Apply filters by performing one or more of the following actions:<ul><li>To search only for results of specific types, in the <b>Audit Result Types</b> list select	one or more result types.</li><li>For Solace modeled event meshes, to  search only for results for specific event brokers, in the <b>Event Brokers</b> list select	one or more event brokers. Kafka modeled event meshes have only one event broker.</li><li>To  search only for results with specific tags, in the <b>Tags</b> list, select	a tag.</li><li>To include objects tagged with the <b>Hide</b> tag in the audit results, select <b>Display all hidden objects in the audit result</b>.</li></ul><p>You can also start typing the name of the object in the <b>Filter by Name</b> field.</p></li>
      <li>To view more information about a result, click the row containing the result. Details about the result display in the <b>Information Panel</b>. If the audit finds a match with more than one version of an object, the <b>Information Panel</b> shows the result for each version. If the versions don't all have the same result, the results list shows the object is a partial match.</li>
    </ol>
    <h3>Audit Results</h3>
    <p>After <MadCap:variable name="Product-Names.ep_rt_event_manager"/> audits the collected runtime data against the modeled event mesh, the <b>Audit</b> tab displays the results. If the audit finds matches with more than one version of an object, the list displays one result for the object and selecting the result displays the results for each version in the information panel.</p>
    <p>The audit can find four types of result.</p>
    <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0">
      <col class="TableStyle-Table_Num-Column-Column1" style="width: 15%;"/>
      <col class="TableStyle-Table_Num-Column-Column1" style="width: 40%;"/>
      <col class="TableStyle-Table_Num-Column-Column1" style="width: 45%;"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Result Type</th>
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Meaning</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Possible Actions</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Match found</p>
            <p>
              <img src="../../Resources/Images/Event-Portal/match-found.png" alt=""/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>For a connected Solace event broker, a queue matches a consumer in an application version associated with the model event broker.</p>
            <p>For a connected Kafka cluster, a consumer group matches a consumer in an application version, or a topic matches a topic address in an event version associated with the model event broker.</p>
            <p>For a connected schema registry, a Confluent subject matches a schema associated with the model event broker.</p>
            <p>If a match is found for at least one, but not all versions associated with the model event broker, the results list shows a partial match, and the information panel shows which versions have a match found.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>Your design and the runtime match. No further action is needed.</p>
            <p>In the information panel you can:</p>
            <ul>
              <li><a href="#tagging_audit_results" class="link-internal">Tag the result</a> to indicate the action you want to take or hide the result to focus on results that require action.</li>
              <li>Click the name of the design object version to view more information or open it in <MadCap:variable name="Product-Names.ep_designer"/>.</li>
              <li>Click <b>Full Configuration</b> to view the runtime object configuration.</li>
              <li>For queues and consumer groups, see the list of subscriptions.</li>
              <li>For Kafka subjects, see the list of subject versions and view the runtime configuration for a specific version.</li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Partial Match</p>
            <p>
              <img src="../../Resources/Images/Event-Portal/partial-match.png" alt=""/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>For a connected Solace event broker, a queue has the same name as a consumer in an application version associated with the model event broker, but some of the configuration differs. </p>
            <p>For a connected Kafka cluster, a consumer group has the same name as a consumer in an application version, or a Kafka topic  matches a topic address in an event version associated with the model event broker, but some of the configuration differs.</p>
            <p>For a connected schema registry, a Confluent subject  has the same name as a schema associated with the model event broker but one or more versions exist only in the runtime or only in the design.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>You can <a href="#comparing_partial_matches" class="link-internal">compare</a> the design and runtime object configuration to see the difference.</p>
            <p>If you  have a match found with a later version of the same application or event, ignore the result or <a href="modeled-event-mesh-runtime-data.htm#Managing_Object_Associations" class="link-internal">disassociate the earlier version</a> from the model event broker.</p>
            <p>If you don't have a match found with a later version of the same application or event, update the object in <MadCap:variable name="Product-Names.ep_designer"/> or update the runtime.</p>
            <p>For Confluent subjects, If you have additional schema versions in <MadCap:variable name="Product-Names.ep_designer"/> that you want to keep or if there are additional versions in the schema registry that you don't want to import, ignore the result. If you have additional versions in <MadCap:variable name="Product-Names.ep_designer"/> that you don't need or if you want to import new versions from the schema registry, update the schema.</p>
            <p>In the information panel you can also:</p>
            <ul>
              <li><a href="#tagging_audit_results" class="link-internal">Tag the result</a> to indicate the action you want to take or hide the result to focus on results that require action.</li>
              <li>Click the name of a matching design object version to view more information or open it in <MadCap:variable name="Product-Names.ep_designer"/>.</li>
              <li>For queues and consumer groups, see the list of subscriptions.</li>
              <li>For Kafka subjects, see the list of subject versions and view the runtime configuration for a specific version.</li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>Found Only in Runtime</p>
            <p>
              <img src="../../Resources/Images/Event-Portal/found-only-in-runtime.png" alt=""/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>A queue on the connected Solace event broker, a consumer group or topic on the connected Kafka cluster, or a subject  in the schema registry has no matching object associated with the model event broker.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>If the "Found Only in Runtime " result is unexpected because you have matching object in <MadCap:variable name="Product-Names.ep_designer"/>, verify whether the design object is associated with the correct model event broker. Otherwise, import the object into <MadCap:variable name="Product-Names.ep_designer"/> or remove it from the runtime.</p>
            <p>In the information panel you can also:</p>
            <ul>
              <li><a href="#tagging_audit_results" class="link-internal">Tag the result</a> to indicate the action you want to take or hide the result to focus on results that require action.</li>
              <li>Click <b>Full Configuration</b> to view the runtime object configuration.</li>
              <li>For queues and consumer groups, see the list of subscriptions.</li>
              <li>For Kafka subjects, see the list of subject versions and view the runtime configuration for a specific version.</li>
            </ul>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p>Found Only in Design</p>
            <p>
              <img src="../../Resources/Images/Event-Portal/found-only-in-design.png" alt=""/>
            </p>
          </td>
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p>An application or a Kafka event associated with the model event broker has no matching entity on the connected runtime event broker.</p>
            <p> For Kafka schemas, this result occurs for schema object versions that exist only in <MadCap:variable name="Product-Names.ep_designer"/> when a previously imported schema is a partial match.</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p>You can <a href="modeled-event-mesh-runtime-data.htm#Managing_Object_Associations" class="link-internal">disassociate the application or event</a> from the model event broker or update the runtime to include the missing object.</p>
            <p>For schema versions, if you want to keep the additional versions in <MadCap:variable name="Product-Names.ep_designer"/>, you can ignore the result. If you have additional versions in <MadCap:variable name="Product-Names.ep_designer"/> that you don't  want to keep, update the schema in <MadCap:variable name="Product-Names.ep_designer"/>.</p>
            <p>In the information panel you can also:</p>
            <ul>
              <li><a href="#tagging_audit_results" class="link-internal">Tag the result</a> to indicate the action you want to take or hide the result to focus on results that require action.</li>
              <li>Click the name of the design object version to view more information or open it in <MadCap:variable name="Product-Names.ep_designer"/>.</li>
              <li>For applications with consumers, see the list of subscriptions.</li>
            </ul>
          </td>
        </tr>
      </tbody>
    </table>
    <h3><a name="tagging_audit_results"/>Tagging Audit Results</h3>
    <p>You can use tags to mark audit results based on your preferred action. Tags don't initiate actions; they only help you review the results and specify the actions that you or another user should take later.</p>
    <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0">
      <col class="TableStyle-Table_Num-Column-Column1" style="width: 20%;"/>
      <col class="TableStyle-Table_Num-Column-Column1"/>
      <thead>
        <tr class="TableStyle-Table_Num-Head-Header1">
          <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Tag</th>
          <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Usage</th>
        </tr>
      </thead>
      <tbody>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>To Be Created</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>If the audit finds an object only in the runtime or only in the design, use the To Be Created tag to indicate that the object in the runtime should be imported into <MadCap:variable name="Product-Names.ep_designer"/> or that the runtime configuration needs to be manually updated to add the object that's only in the design.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
            <p>To Be Deleted</p>
          </td>
          <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
            <p>If the audit finds an object only in the runtime or only in the design, use the To Be Deleted tag to indicate that the object should be manually deleted from the location where it was found.</p>
          </td>
        </tr>
        <tr class="TableStyle-Table_Num-Body-Body1">
          <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
            <p>Hide</p>
          </td>
          <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
            <p>Use the Hide tag to hide the result from the audit list. You can reveal hidden objects using the <b>Display all hidden objects in the audit result</b> option in the filter.</p>
          </td>
        </tr>
      </tbody>
    </table>
    <p>To apply tags to the audit results, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select the results that you want to tag.</li>
      <li>In the <b>Information Panel</b>, click the tag you want to apply.</li>
    </ol>
    <h2><a name="comparing_partial_matches"/>Comparing Partial Matches</h2>
    <p>The audit finds a partial match when an object associated with a model event broker has the same name as a corresponding object in the runtime but the objects aren't an exact match. Partial matches happen in these circumstances:</p>
    <ul>
      <li>A queue or consumer group in the runtime data has the same name as  a consumer in an application version but some of the configuration differs. Configuration differences occur if a change was made on the runtime event broker or if a new version of a matching application was created in <MadCap:variable name="Product-Names.ep_designer"/> after a previous audit.</li>
      <li>A Kafka topic in the runtime matches a topic address in an event version associated with the model event broker but some of the configuration differs. Configuration differences occur if a change was made on the runtime event broker or if a new version of a matching event was created in <MadCap:variable name="Product-Names.ep_designer"/> after a previous audit.</li>
      <li>A subject in a Confluent Schema Registry has the same name as a schema object associated with the model event broker but at least one version of the subject was found only in the runtime or only in <MadCap:variable name="Product-Names.ep_designer"/>.</li>
    </ul>
    <p>To see the differences between the design and runtime objects, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select a result with a <b>Partial Match</b>.</li>
      <li>In the <b>Information Panel</b>, click the <b>Compare</b> button for the object type.</li>
    </ol>
    <h2><a name="viewing_runtime_object"/>Viewing the Runtime Object Configuration</h2>
    <p>If the audit finds a match or finds an object only in the runtime, you can view the configuration for the runtime object.</p>
    <p>To see the runtime object configuration, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select a result .</li>
      <li>In the <b>Information Panel</b>, click <b>Full Configuration</b>.<div class="thumbnail-container" MadCap:conditions="SAP.SapHideFromOutput"><img src="../../Resources/Images/Event-Portal/full-configuration-callout.png" alt="Screenshot showing the options described in the surrounding text." class="solacethumbnail"/></div></li>
    </ol>
    <h2><a name="importing_objects"/>Importing Runtime Objects into <MadCap:variable name="Product-Names.eventportal_product_short"/></h2>
    <p>Importing objects into <MadCap:variable name="Product-Names.eventportal_product_short"/> lets you make corrections to your design and it can also help you to create a modeled event mesh from a mature event-driven architecture (EDA).</p>
    <dt>Objects Found Only in Runtime</dt>
    <dd>If the audit finds queues, consumer groups, topics, or subjects  only in the runtime, you can import the objects  into <MadCap:variable name="Product-Names.eventportal_product_short"/>. The new object versions are added to <MadCap:variable name="Product-Names.ep_designer"/> in Draft state and they are automatically associated with the model event broker. Up to 1000 selected objects can be imported into <MadCap:variable name="Product-Names.eventportal_product_short"/> at the same time.</dd>
    <dt>Partial Matches</dt>
    <dd>If the audit finds a partial match, you can choose to update the existing object version in <MadCap:variable name="Product-Names.ep_designer"/> or create a new version. You can update existing object versions for partial matches, only if the version is in Draft state or if the updates are only to event broker configuration changes that can't be modified in <MadCap:variable name="Product-Names.ep_designer"/>. Up  to 20 selected partial matches can be updated in <MadCap:variable name="Product-Names.eventportal_product_short"/> at the same time.</dd>
    <p>Before you import or update object versions, you may want to check if a matching object already exists in <MadCap:variable name="Product-Names.ep_designer"/> but isn't associated with the correct model event broker, or consider whether you should remove or update the object in the runtime instead.</p>
    <p>After you  import runtime objects into <MadCap:variable name="Product-Names.eventportal_product_short"/>, you can view them in <MadCap:xref href="event-portal-designer-tool.htm" target="_blank">[%=Product-Names.ep_designer%]</MadCap:xref>, in <MadCap:xref href="event-portal-catalog-tool.htm" target="_blank">[%=Product-Names.ep_catalog%]</MadCap:xref>, and in the <a href="modeled-event-mesh.htm#Viewing_a_Modeled_Event_Mesh" target="_blank" class="link-internal">modeled event mesh</a>.</p>
    <h3><a name="Importing_Solace_Queues"/>Importing Solace Queues</h3>
    <p>You can import one or more queues from Solace event brokers into <MadCap:variable name="Product-Names.ep_designer"/>. Importing a Solace queue creates a consumer within an <a href="event-portal-designer-applications.htm" target="_blank" class="link-internal">application</a> that has the same name as the queue.</p>
    <p>If you import multiple queues  at the same time, they must have the same model event broker and the same audit result type (Found Only in Runtime or Partial Match). When importing multiple queues found only in runtime, you can choose whether to create multiple applications or a single application with multiple consumers. You can also import queues as new consumers in a new version of an existing application.</p>
    <p>To import Solace queues, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select the checkboxes next to the queues you want to import.</li>
      <li style="font-weight: normal;">In the information panel, click <b>Import</b>.</li>
      <li>Select one of the following options:
				<ul><li>For queues found only in runtime, select <b>Import as Multiple Applications</b> to create a separate application for each selected queue. This option displays only if you selected more than one queue.</li><li>For queues found only in runtime, select <b>Import as One Application</b> to create a single application with a consumer for each selected queue.</li><li>For queues found only in runtime, select <b>Add to Existing Application</b> to add a consumer to a new version of an existing application in <MadCap:variable name="Product-Names.ep_designer"/>.</li><li>For partial matches, select <b>Create New Version</b> to create a new version of the matching application in <MadCap:variable name="Product-Names.ep_designer"/>.</li><li>For partial matches, select <b>Update Existing Version</b> to update the most recent version of an existing application in <MadCap:variable name="Product-Names.ep_designer"/>.</li></ul></li>
      <li>If you are creating new applications from queues found only in the runtime, perform these steps:
				<ol style="list-style-type: lower-alpha;"><li>Select the application domain that you want to add the application to. You can also create a new application domain.</li><li>If you are creating only one application, enter an <b>Application Name</b>. If you are creating multiple applications, the application names are generated based on the consumer group name.</li><li>In the <b>Version</b> field, specify a semantic version value for the application in the format major.minor.patch. The default is 0.1.0. </li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are adding new consumers to existing applications  from queues found only in the runtime, perform these steps:
				<ol style="list-style-type: lower-alpha;"><li>Start typing the name of the application in the <b>Search</b> field.</li><li>Select the application that you want to add the consumer to.</li><li>Click <b>Select</b> next to the version that you want to import the queue into, You can select only versions in draft state.</li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are creating new versions of existing applications, perform these steps:<ol style="list-style-type: lower-alpha;"><li>Select how you want to increment the version numbers.</li><li>Select whether you want to remove the event broker associations from previous versions of the applications.</li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are updating an existing application version, click <b>Import</b>.</li>
      <li>A progress indicator displays during the import operation. Large imports may take some time to complete. After the import completes, click <b>Refresh Audit Results</b> <img src="../../Resources/Images/Cloud/reusable-icons/refresh.png" alt=""/> to view the updated results. The consumers you imported should display the result <b>Match Found</b>.</li>
    </ol>
    <h3><a name="Importing_Kafka_Objects"/>Importing Kafka Objects</h3>
    <p>You can import Kafka objects into <MadCap:variable name="Product-Names.eventportal_product_short"/>. Importing objects from the runtime creates the following objects in <MadCap:variable name="Product-Names.ep_designer"/>:</p>
    <ul>
      <li>Importing a Kafka consumer group creates an application version that has a consumer with the same name as the consumer group.</li>
      <li>Importing a Kafka topic creates an event version that has a topic address that matches the Kafka topic.</li>
      <li>Importing a Confluent subject creates a schema in <MadCap:variable name="Product-Names.ep_designer"/>. </li>
    </ul>
    <p>When you import Kafka objects found only in the runtime, <MadCap:variable name="Product-Names.eventportal_product_short"/> maintains the relationships between them when possible.</p>
    <dt>Topic and Subject Relationships</dt>
    <dd>In Kafka clusters,  an event represents a relationship between a topic and a subject. If a topic naming strategy or topic record naming strategy is set in the Kafka subjects that you import, when you later import Kafka topics, the new event created by the topic import automatically references the related schema created during the subject import.  If you import the event and schema into different application domains, the event version and schema version are automatically shared to maintain the reference.</dd>
    <dd>When you import a Kafka subject into <MadCap:variable name="Product-Names.eventportal_product_short"/>, all other subjects that it references are also imported into the same application domain in the same operation. This ensures that all of the subjects in the schema registry that are relevant to the cluster you are modeling are added to <MadCap:variable name="Product-Names.ep_designer"/>. </dd>
    <dt>Consumer Group and Topic Relationships</dt>
    <dd>If the audit of a Kafka event broker finds a consumer group and topics that the consumer group subscribes to, after you import both the consumer group as an application and the topics as events, the new application version automatically subscribes to the new event versions. If you import the application and a consumed event into different application domains, the event is automatically shared to maintain the reference. <br/></dd>
    <h4><a name="importing_consumer_groups"/>Importing Kafka Consumer Groups</h4>
    <p>You can import one or more Kafka consumer groups into <MadCap:variable name="Product-Names.ep_designer"/>. When you import consumer groups they become consumers within an <a href="event-portal-designer-applications.htm" target="_blank" class="link-internal">application</a>. </p>
    <p>If you import multiple consumer groups at the same time, they must have the same audit result type (Found Only in Runtime or Partial Match). You can choose whether to create multiple applications or a single application with multiple consumers. You can also import consumer groups as new consumers in a new version of an existing applications.</p>
    <p>To import Kafka consumer groups, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select <b>Consumer Groups</b>.</li>
      <li>Select the checkboxes next to the consumer groups you want to import.</li>
      <li style="font-weight: normal;">In the information panel, click <b>Import</b>.</li>
      <li>Select one of the following options:
				<ul><li>For consumer groups found only in runtime, select <b>Import as Multiple Applications</b> to create a separate application for each selected consumer group.</li><li>For consumer groups found only in runtime, select <b>Import as One Application</b> to create a single application with a consumer for each selected consumer group.</li><li>For consumer groups found only in runtime, select <b>Add to Existing Application</b> to add a consumer to a new version of an existing application in <MadCap:variable name="Product-Names.ep_designer"/>.</li><li>For partial matches, select <b>Create New Version</b> to create a new version of the matching application in <MadCap:variable name="Product-Names.ep_designer"/>.</li><li>For partial matches, select <b>Update Existing Version</b> to update the most recent version of the matching application in <MadCap:variable name="Product-Names.ep_designer"/>.</li></ul></li>
      <li>If you are creating new applications from consumer groups found only in the runtime, perform the following steps:
				<ol style="list-style-type: lower-alpha;"><li>Select the application domain that you want to add the application to. You can also create a new application domain.</li><li>If you are creating only one application, enter an <b>Application Name</b>. If you are creating multiple applications, the application names are generated based on the consumer group name.</li><li>In the <b>Version</b> field, specify a semantic version value for the application in the format major.minor.patch. The default is 0.1.0. </li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are adding new consumers to existing applications  from consumer groups found only in the runtime, perform these steps:
				<ol style="list-style-type: lower-alpha;"><li>Start typing the name of the application in the <b>Search</b> field.</li><li>Select the application that you want to add the consumer to.</li><li>Click <b>Select</b> next to the version that you want to import the consumer groups into, You can select only versions in draft state.</li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are creating new versions of existing applications, perform the following steps:<ol style="list-style-type: lower-alpha;"><li>Select how you want to increment the version numbers.</li><li>Select whether you want to remove the event broker associations from previous versions of the applications.</li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are updating existing application versions, click <b>Import</b>. </li>
      <li>A progress indicator displays during the import operation. Large imports may take some time to complete. After the import completes, click <b>Refresh Audit Resul</b> <img src="../../Resources/Images/Cloud/reusable-icons/refresh.png" alt=""/> to view the updated results. The consumers you imported should now display the result <b>Match Found</b>. </li>
    </ol>
    <h3><a name="import_topics"/>Importing Kafka Topics</h3>
    <p>You can import one or more Kafka topics into <MadCap:variable name="Product-Names.ep_designer"/>. When you import Kafka topics that were found only in the runtime, a new <a href="event-portal-designer-events.htm" target="_blank" class="link-internal">event</a> is added to <MadCap:variable name="Product-Names.ep_designer"/> for each topic and the topic address of the event matches the imported Kafka topic. To import multiple topics together, they must have the same audit result type (Found Only in Runtime or Partial Match).</p>
    <p class="Note">If you also intend to import referenced subjects from the Confluent Schema Registry, you should import the subjects first so <MadCap:variable name="Product-Names.eventportal_product_short"/> can use the subject's topic naming strategy or topic record naming strategy to automatically create references between the imported event versions and schema versions.</p>
    <p>To import Kafka topics from the audit results into <MadCap:variable name="Product-Names.ep_designer"/>, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select <b>Topics</b>.</li>
      <li>Select the checkboxes next to the topics you want to import.</li>
      <li style="font-weight: normal;">In the information panel, click <b>Import</b>.</li>
      <li>If you are importing topics found only in runtime, perform the following steps:
				<ol style="list-style-type: lower-alpha;"><li>Select the application domain that you want to add the new events to. You can also create a new application domain.</li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are updating an existing event from a partial match, click <b>Import</b>.</li>
      <li>A progress indicator displays during the import operation. Large imports may take some time to complete. After the import completes, click <b>Refresh Audit Result</b><img src="../../Resources/Images/Cloud/reusable-icons/refresh.png" alt=""/> to view the updated results. The topics you imported should now display the result <b>Match Found</b>.</li>
    </ol>
    <h3><a name="Importing_Kafka_Subjects"/>Importing Confluent Subjects</h3>
    <p>Unlike application versions and event versions, which you can add to a modeled event mesh from <MadCap:variable name="Product-Names.ep_designer"/>, you can associate a schema with a model event broker only by importing subjects from a Confluent Schema Registry. If you want to include Kafka schemas in your modeled event mesh, you must add connection details for the schema registry when you set up the <a href="event-portal-collect-runtime-data.htm#creating_connection_file" target="_blank" class="link-internal">Event Management Agent Connection</a>.</p>
    <p>When you import Kafka subjects found only in the runtime into <MadCap:variable name="Product-Names.eventportal_product_short"/>, all versions of a subject and all other subjects referenced by an imported subject found in the runtime are imported into the same application domain in the same operation. This ensures that all of the subjects in the registry that are relevant to the cluster you are modeling are added to <MadCap:variable name="Product-Names.ep_designer"/>. </p>
    <p>Imported schemas are created with object versions that correspond to each subject version in the registry. Each schema version  uses the registry version number  as the major version. For example, version 1 in the registry is imported as version 1.0.0 in <MadCap:variable name="Product-Names.eventportal_product_short"/>.</p>
    <p>You can change the version number, version name, description, and custom attributes of imported schema versions in <MadCap:variable name="Product-Names.ep_designer"/>, but you can't update the schema content or the list of referenced schemas. If necessary, you can <a href="event-portal-designer-schemas.htm#multiple-schema-version" target="_blank" class="link-internal">create a new version of the schema object</a> in <MadCap:variable name="Product-Names.ep_designer"/> and update the new version.</p>
    <p>If you select more than one subject to import, they must have the same audit result type (Found Only in Runtime or Partial Match). Additional referenced schemas are also imported, even if they have a different audit result.</p>
    <p>To import Confluent subjects from the audit results into <MadCap:variable name="Product-Names.ep_designer"/>, perform these steps:</p>
    <ol>
      <li>On the <b>Audit</b> tab, select <b>Subjects</b>.</li>
      <li>Select the checkboxes next to the subjects you want to import.</li>
      <li style="font-weight: normal;">In the information panel, click <b>Import</b>.</li>
      <li>If you are importing subjects found only in runtime, perform the following steps:
				<ol style="list-style-type: lower-alpha;"><li>Select the application domain that you want to add the schemas to. You can also create a new application domain.</li><li>If you are creating only one schema, enter a <b>Schema Name</b>. If you are creating multiple schemas, the schema names are generated based on the subject name.</li><li>Click <b>Import</b>.</li></ol></li>
      <li>If you are updating an existing schema from a partial match, click <b>Import</b>.</li>
      <li>A progress indicator displays during the import operation. Large imports may take some time to complete. After the import completes, click <b>Refresh Audit Result</b><img src="../../Resources/Images/Cloud/reusable-icons/refresh.png" alt=""/> to view the updated results. The subjects you imported should now display the result <b>Match Found</b>.</li>
    </ol>
  </body>
</html>
