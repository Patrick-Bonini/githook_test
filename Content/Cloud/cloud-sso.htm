<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="SAP.SapHideFromOutput">
  <head/>
  <body>
    <h1><MadCap:concept term="Cloud"/>Configuring Single Sign-On with OpenID Connect</h1>
    <p>Organizations with an identity provider that supports OpenID Connect (OIDC) can enable single sign-on (SSO) for <MadCap:variable name="Product-Names.cloud_product_firstuse"/> accounts  in the <MadCap:variable name="Product-Names.console_ui_long"/> and for management access to <MadCap:variable name="Product-Names.pubsub_brand_only"/> event brokers.</p>
    <p>Console SSO allows users to log in directly to <MadCap:conditionalText MadCap:conditions="SAP.SapHideFromOutput"><MadCap:variable name="Product-Names.cloud_product_long"/></MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="SAP.SapOnlyOutput"><MadCap:variable name="Product-Names.cloud_product_firstuse"/></MadCap:conditionalText>  after being authenticated through an OIDC service provider.  For more information about enabling Console SSO, see <MadCap:xref href="selfserve-cloud-sso.htm">Configuring Single Sign-On for [%=Product-Names.cloud_product_titlecase%]</MadCap:xref>.</p>
    <p>When Console SSO is enabled, users still need an account in <MadCap:variable name="Product-Names.cloud_product_short"/> with an assigned role to access the <MadCap:variable name="Product-Names.console_ui_short"/>. If you enable group management for <MadCap:variable name="Product-Names.cloud_product_short"/>, you can assign roles to user groups and users can be automatically added to a user group based on claim values received from the identity provider (IdP). For more information, see <MadCap:xref href="configure-cloud-user-management.htm">Configuring User Access</MadCap:xref>.</p>
    <p>If you set up Console SSO, you can also set up SSO for management access to your <MadCap:variable name="Product-Names.broker_cloud_short"/>s. For more information, see <MadCap:xref href="configure-oauth-for-broker-services.htm">Configuring Single Sign-On for [%=Product-Names.broker_cloud_short_title%]s</MadCap:xref>.</p>
    <h2><a name="Authentication_Data_Flow"/>Authentication Data Flow</h2>
    <p>The data flow of the <MadCap:variable name="Product-Names.cloud_product_short"/> SSO authentication process  is shown in the following diagram and described in the steps below:</p>
    <p>
      <img src="../Resources/Images/Cloud/diagrams/cloud-sso-data-flow.png" style="border-left-style: solid;border-left-width: 0px;border-left-color: ;border-right-style: solid;border-right-width: 0px;border-right-color: ;border-top-style: solid;border-top-width: 0px;border-top-color: ;border-bottom-style: solid;border-bottom-width: 0px;border-bottom-color: ;padding-left: 10px;mc-float: center;" alt="Diagram illustrating the data flow described in the following text."/>
    </p>
    <ol>
      <li>The user connects to the <MadCap:variable name="Product-Names.console_ui_short"/>.</li>
      <li><MadCap:variable name="Product-Names.cloud_product_short"/> redirects the user login request to the authorization endpoint of the IdP.</li>
      <li>The identity provider presents a login screen to the user. The IdP may use additional methods, such as two-factor authentication to verify the user's identity.</li>
      <li>The user provides the requested credentials to the IdP and logs in successfully.</li>
      <li>The IdP returns an authorization code to the user and redirects the user back to <MadCap:variable name="Product-Names.cloud_product_short"/>.</li>
      <li>The user sends the authorization code to <MadCap:variable name="Product-Names.cloud_product_short"/>.</li>
      <li><MadCap:variable name="Product-Names.cloud_product_short"/> requests the user's ID token, which includes user claims from the IdP.</li>
      <li>The IdP returns the ID token  to <MadCap:variable name="Product-Names.cloud_product_short"/>. The ID token contains the user's email claim. If group management is configured the token also includes the Groups claim or other claims set up for claim mapping. If <MadCap:variable name="Product-Names.cloud_product_short"/> is configured to request additional scopes, the token may include additional claims values for the requested scope.</li>
      <li><MadCap:variable name="Product-Names.cloud_product_short"/> maps the email claim and any other applicable claims to the user's email address. If group management is enabled, <MadCap:variable name="Product-Names.cloud_product_short"/> adds the user to the appropriate user group.</li>
      <li>The user accesses <MadCap:variable name="Product-Names.cloud_product_short"/>.</li>
    </ol>
    <h2><a name="how_sso_works"/>How SSO with OIDC Works</h2>
    <p>SSO is an authentication process that allows users to log in to one domain and then have access to several independent systems without further action. The user identity is maintained across the independent systems and the user can be assigned roles and permissions according to the individual system settings.</p>
    <p>SSO relies on an identity provider (IdP), such as Okta, Auth0, PingIdentity, or Microsoft Entra ID, to create, maintain, and manage identity information and to provide authentication services to the various independent systems. These IdPs use OAuth 2.0 and OIDC for identity management. OAuth is a delegation protocol for accessing APIs and is the industry-standard protocol for identity and access management. To learn more about OAuth, see the <a href="https://oauth.net/2/" target="_blank" class="link-offsite">OAuth 2.0 Protocol</a>. OpenID Connect (OIDC) is an identity layer that sits on top of OAuth. It verifies a user’s identity and provides profile information from the identity provider to the systems that user logs in to. To learn more, see the <a href="https://openid.net/connect/" target="_blank" class="link-offsite">OpenID website</a>.</p>
    <p>When a user attempts to authenticate with a system that uses OIDC, the login request is redirected to the IdP where the user provides credentials to prove their identity. After the IdP authenticates the user, it sends an authorization code to the user that the system then accepts as proof of identity. The system then requests user claims from the IdP to get any required information about the user and determine the level of access to give to the user. The IdP returns claims using JSON Web tokens.</p>
    <p>When you configure SSO in <MadCap:variable name="Product-Names.cloud_product_short"/>, you can specify additional scopes to request from the IdP. Scopes are collections of information (claims) that the IdP can include during authentication. By default, <MadCap:variable name="Product-Names.cloud_product_short"/> requests the "openid" and "email" scopes.</p>
    <p>Many IdPs can be configured to automatically include specific claims implicitly in the identity token for use in role management. However, for certain configurations, it may be necessary to explicitly request additional information (scopes) in addition to those mentioned above. In these cases, you can add the names of the these additional scopes to your SSO configuration.</p>
  </body>
</html>
