<?xml version="1.0"?>
<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-toc-path="PubSub+ Software Event Broker|Upgrade Procedures|[%=System.LinkedHeader%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png"/>
    <meta charset="utf-8"/>
    <meta http-equiv="Cache-control" content="no-cache"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <title>Docker Upgrade</title>
    <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" /> -->
    <!--style to display feedback button correctly in IE-->
    <!-- Google Tag Manager -->
    <!-- End Google Tag Manager -->
    <!-- links to get the EDA styling to work -->
    <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Resources/Stylesheets/MainStyles.min.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <style>@media screen and (min-width: 0\0)
{
	.feedback-button
	{
		margin-right: -40px;
		top: 50%;
		border-radius: 9px 9px 0px 0px;
	}

	#canvas
	{
		position: relative;
	}
}

@media print
{
	#plugin
	{
		overflow: visible !important;
	}
}

</style>
    <link href="../../Resources/Stylesheets/eda_styles.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,300" rel="stylesheet" type="text/css"/>
    <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
    <link href="../../Resources/Stylesheets/Tabbed_Content.css" rel="stylesheet"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png"/>
    <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
    <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    <script src="https://cmp.osano.com/AzZrhlTmT5f216Foa/84ba7dc4-a4e5-4b02-b120-977eb6f052d4/osano.js">
        </script>
    <script type="text/javascript">/*<![CDATA[*/(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KLSDFH');
		/*]]>*/</script>
    <script type="text/javascript" src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
  </head>
  <!-- Top Orange and Darkgrey header-->
  <!-- Div for EDA banner -->
  <div class="eda_banner">
    <p>Register Now for EDA Summit 2024 - Virtual Event <a href="https://edasummit.com/" target="_blank">Register for Free</a></p>
  </div>
  <!-- end Div for EDA banner -->
  <div class="top-nav">
    <div class="main_list">
      <ul class="top-navlinks">
        <li>
          <a href="https://solace.com/support/" target="_blank">Support</a>
        </li>
        <li>
          <a href="https://solace.com/contact/" target="_blank">Contact Us</a>
        </li>
      </ul>
    </div>
    <div class="container-fluid">
      <div class="src-li">
        <div id="srchWrapTwo">
          <form class="search" action="#">
            <div class="search-bar search-bar-container needs-pie">
              <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
              <div class="search-filter-wrapper">
                <span class="invisible-label" id="search-filters-label">Filter: </span>
                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                </div>
                <div class="search-filter-content" id="sf-content">
                  <ul>
                    <li>
                      <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                        <span id="filterSelectorLabel-00001">All Files</span>
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
              <div class="search-submit-wrapper" dir="ltr">
                <div class="search-submit" title="Search" role="button" tabindex="0">
                  <span class="invisible-label">Submit Search</span>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
      <span class="tool-tip" tooltip-position="left" tooltip="To search for CLI commands, events, or APIs, navigate to the related sections.">i</span>
      <!-- Sept. 28, 2022 - This is being moved to under div class= top-nav
			<div class="main_list">
				<ul class="top-navlinks">
					<li><a href="https://solace.com/support/" target="_blank">Support</a></li>
					<li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li>
				</ul>
			</div> -->
    </div>
    <!-- Sept. 27, 2022 - The commented out content below used to provide the products, company, etc., links in the top header, next to the search field. -->
    <!-- <div class="main_list"><ul class="top-navlinks"><li><a href="https://solace.com/products/" target="_blank">Products</a></li><li><a href="https://solace.com/company/" target="_blank">Company</a></li><li><a href="https://www.solace.dev/" target="_blank">Developers</a></li><li><a href="https://solace.com/support/" target="_blank">Support</a></li><li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li></ul></div> -->
  </div>
  <body>
    <div class="foundation-wrap off-canvas-wrapper">
      <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
        <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
          <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
        </aside>
        <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
          <div data-sticky-container="" class="title-bar-container">
            <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1000px)" data-mc-ignore="true">
              <a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
              <div class="middle title-bar-section outer-row clearfix">
                <div class="menu-icon-container relative clearfix">
                  <div class="central-account-wrapper">
                    <div class="central-dropdown">
                      <a class="central-account-drop">
                        <span class="central-account-image"/>
                        <span class="central-account-text">Account</span>
                      </a>
                      <div class="central-dropdown-content">
                        <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                        <hr class="central-separator"/>
                        <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                      </div>
                    </div>
                  </div>
                  <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas">
                    <span/>
                  </button>
                </div>
              </div>
              <div class="title-bar-layout outer-row">
                <div class="logo-wrapper">
                  <a class="logo" href="../../index.html" alt="Logo"/>
                </div>
                <div class="navigation-wrapper nocontent">
                  <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                    <li class="placeholder" style="visibility:hidden">
                      <a>placeholder</a>
                    </li>
                  </ul>
                </div>
                <div class="central-account-wrapper">
                  <div class="central-dropdown">
                    <a class="central-account-drop">
                      <span class="central-account-image"/>
                      <span class="central-account-text">Account</span>
                    </a>
                    <div class="central-dropdown-content">
                      <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                      <hr class="central-separator"/>
                      <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                    </div>
                  </div>
                </div>
                <div class="nav-search-wrapper">
                  <div class="nav-search row">
                    <form class="search" action="#">
                      <div class="search-bar search-bar-container needs-pie">
                        <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
                        <div class="search-filter-wrapper">
                          <span class="invisible-label" id="search-filters-label">Filter: </span>
                          <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                          <div class="search-filter-content" id="sf-content">
                            <ul>
                              <li>
                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                                  <span id="filterSelectorLabel-00001">All Files</span>
                                </button>
                              </li>
                            </ul>
                          </div>
                        </div>
                        <div class="search-submit-wrapper" dir="ltr">
                          <div class="search-submit" title="Search" role="button" tabindex="0">
                            <span class="invisible-label">Submit Search</span>
                          </div>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </nav>
          </div>
          <div class="main-section">
            <div class="row outer-row sidenav-layout">
              <nav class="sidenav-wrapper">
                <div class="sidenav-container">
                  <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                </div>
              </nav>
              <div class="body-container">
                <div data-mc-content-body="True">
                  <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic Print NextTopic;">
                    <div class="button-group-container-left">
                      <button class="button needs-pie print-button" title="Print">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Print">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie previous-topic-button" title="Navigate previous topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie next-topic-button" title="Navigate next topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                  <!-- Google Tag Manager (noscript) -->
                  <noscript>
                    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLSDFH" height="0" width="0" style="display:none;visibility:hidden"/>
                  </noscript>
                  <!-- End Google Tag Manager (noscript) -->
                  <div id="content">
                    <div id="contentBody">
                      <div class="row collapse">
                        <div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="ContentRow">
                          <div>
                            <div xmlns="" class="nocontent">
                              <div class="MCBreadcrumbsBox_MCBreadcrumbsSelf_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="4" data-mc-toc="True">
                                <span class="MCBreadcrumbsPrefix"> </span>
                              </div>
                            </div>
                            <div xmlns="" role="main" id="mc-main-content"><h1 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="aanchor393"/><MadCap:concept term="Software"/>Docker Upgrade</h1><p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">On this page you'll find procedures to upgrade your Solace PubSub+ event broker Docker images to version 9.11.0 or later (the current version is <span class="mc-variable Manifest-Products-Routers.SolOS_VMR variable">10.8.1</span>).</p><ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="nav tabs"><li><a class="tab" href="#standlone">Standalone from 9.10.0+ </a></li><li><a class="tab" href="#redundant">HA Group from 9.10.0+</a></li><li><a class="tab" href="#redundant-orch">HA Group from 9.10.0+ with Orchestration Tool</a></li></ul><div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" id="standlone"><h2 class="with-rule"><a name="Upgradin"/>Upgrade a Standalone Docker Image from Version <span class="mc-variable Minimum-Supported-Component-Versions.SW_Broker_Upgrade variable">9.10.0</span>+</h2><p>To upgrade a Solace PubSub+ event broker container instance, the user must delete the existing container instance and replace it with a new container instance running the target version. To preserve the existing state, the new container instance must be deployed with the storage elements from the existing instance. </p><p>This upgrade procedure will preserve the event broker&#x2019;s configuration and stored messages.  All of the persistent data needed to recreate a PubSub+ instance is contained in the <a href="../Configuring-Storage.htm" class="link-internal">storage elements</a>.  At a minimum, the <code>var</code> and <code>internalSpool</code> storage elements must be preserved in order to successfully upgrade an event broker instance.</p><p>This procedure describes upgrading from PubSub+ Enterprise to PubSub+ Enterprise.</p><p>On non-Enterprise event brokers, the following upgrades are also supported:</p><ul><li>from Evaluation to Enterprise</li><li>from Standard to Standard</li><li>from Standard to Enterprise</li></ul><p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word &#x2018;enterprise&#x2019; and change as needed).</p><p>The following procedure is one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly. </p><p>To upgrade a standalone Docker image from version <span class="mc-variable Minimum-Supported-Component-Versions.SW_Broker_Upgrade variable">9.10.0</span>+ to version 9.11.0 or later:</p><ol><li value="1">Log into the Docker host.</li><li value="2">Copy the tar file to the Docker host:</li><pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:<br/><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p><li value="3">
                Load the new software event broker Docker version into Docker:
                <pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li value="4"><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre><div class="Caution"><p>If you are using MQTT&#xA0;retained messages in your deployment, the next step clears the contents of each retain cache. If this content is stored somewhere else in the network, for example another DMR&#xA0;or MNR&#xA0;node, the content will be retrieved when this node comes back online.</p></div></li><li value="5"><p>Stop the Docker instance:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 1200 solace</b></pre></li><li value="6"><p>Record the host locations of the storage elements.</p><p>Before removing the container in the next step, it is important to record the host locations of the storage elements so that they can be re-attached to the new instance. To get information on volumes and the host path to each volume, click on <b>Finding Host Path to Volumes</b> below.</p><div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open"/></a><a name="Finding_Host_Path_to_Volumes" style="padding-bottom: 10px;display: inline-block;"/><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Finding Host Path to Volumes</a></span><div class="MCDropDownBody dropDownBody"><p>You can use <code>docker inspect &lt;container&gt;</code> to view volumes that belong to a container, as shown in the example below.</p><pre class="Code_Grayed">docker inspect solace
"Mounts": [
   {
       "Type": "volume",
       "Name": "adb",
       "Source": "/var/lib/docker/volumes/adb/_data",
       "Destination": "/usr/sw/internalSpool/softAdb",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "jail",
       "Source": "/var/lib/docker/volumes/jail/_data",
       "Destination": "/usr/sw/jail",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "diagnostics",
       "Source": "/var/lib/docker/volumes/diagnostics/_data",
       "Destination": "/var/lib/solace/diags",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "var",
       "Source": "/var/lib/docker/volumes/var/_data",
       "Destination": "/usr/sw/var",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },</pre><p> If the mount type is not a volume then use the source as the host path. If the mount type is a volume, then use the <code> docker volume inspect &lt;volume&gt;</code> command. In the example below, either the <code>Mountpoint</code> or the <code>device</code> directory can be used as the host path to the jail volume.	If you have the <code>device</code> directory configured, use that as the host path to the <code>jail</code> volume. If you don't have the <code>device</code> directory configured then use the<code> Mountpoint</code> directory.</p><pre class="Code_Grayed">docker volume inspect jail
[
      {
            "CreatedAt": "2019-10-23T14:11:49Z",
            "Driver": "local",
            "Labels": {},
            "Mountpoint": "/var/lib/docker/volumes/jail/_data",
            "Name": "jail",
            "Options": {
            "device": "/mnt/vmr/jail",
            "o": "bind",
            "type": "none"
            },
            "Scope": "local"cons
      }
]</pre></div></div></li><li value="7"><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre></li><li value="8"><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  The <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only.</p><pre class="Code_Grayed" xml:space="preserve">[user@host /]# exit
[sysadmin@solace ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v Code:/usr/sw/Code \
-v softAdb:/usr/sw/Code/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \
--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <a href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm" class="MCXref xref">Initializing a Software Event Broker Container</a>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container&#x2019;s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li value="9"><p>Restart software event broker Docker container.</p><pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre></li></ol><p>When the software event broker Docker container restarts, it will be running the configuration and message-spool from the previous version.</p><p>You have completed this procedure.</p></div><div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" id="redundant"><h2 class="with-rule"><a name="Upgradin"/>Upgrade a Redundant Docker Image Group from Version <span class="mc-variable Minimum-Supported-Component-Versions.SW_Broker_Upgrade variable">9.10.0</span>+</h2><p>To upgrade a Solace PubSub+ event broker container instance, the user must delete the existing container instance and replace it with a new container instance running the target version. To preserve the existing state, the new container instance must be deployed with the storage elements from the existing instance. </p><p>This upgrade procedure will preserve the event broker&#x2019;s configuration, including Redundancy and the spooled messages while providing service.  All of the persistent data needed to recreate a PubSub+ instance is contained in the storage elements.  At a minimum, the <code>var</code> and <code>internalSpool</code> storage elements must be preserved in order to successfully upgrade an event broker instance.</p><p>The procedure below describes upgrading from PubSub+ Enterprise to PubSub+ Enterprise.</p><p>On non-Enterprise event brokers, the following upgrades are also supported:</p><ul><li>from Evaluation to Enterprise</li><li>from Standard to Standard</li><li>from Standard to Enterprise</li></ul><p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word &#x2018;enterprise&#x2019; and change as needed).</p><p>For the following procedure, we will refer &#x2018;solace-primary&#x2019; as Primary Node, &#x2018;solace-backup&#x2019; as Backup Node, and &#x2018;solace-monitor&#x2019; as Monitoring Node.</p><p class="Note">It is important to reboot the three software event brokers one at a time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p><p>To upgrade a redundant Docker image group from version <span class="mc-variable Minimum-Supported-Component-Versions.SW_Broker_Upgrade variable">9.10.0</span>+ to version 9.11.0 or later, perform the following steps:</p><ul><li><a href="#Step" class="link-internal">Step 1: Check the redundancy configuration on each node</a></li><li><a href="#Step2" class="link-internal">Step 2: Upgrade the monitoring node</a></li><li><a href="#Step3" class="link-internal">Step 3: Upgrade the backup node</a></li><li><a href="#Step4" class="link-internal">Step 4: Upgrade the primary node</a></li></ul><h3><a name="Step"/>Step 1</h3><p>Check the redundancy configuration on each node.</p><ol><li value="1"><p>Log into each node as an admin user.</p></li><li value="2"><p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on each node. On solace-primary the Message Spool Status should be AD-Active, and on solace-backup the Message Spool Status should be AD-Standby:</p><pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Primary
Mate Router Name         : solace-backup
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Local Active       Shutdown
Routing Interface              intf0:1            intf0:1
Routing Interface Status       Up                 
VRRP Status                    Initialize         
VRRP Priority                  250                
Message Spool Status           AD-Active          
Priority Reported By Mate      Standby   

solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Message Routing Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
Redundancy Mode          : Active/Standby
Active-Standby Role      : Backup
Mate Router Name         : solace-primary
ADB Link To Mate         : Up
ADB Hello To Mate        : Up

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Mate Active
Routing Interface              intf0:1            intf0:1
Routing Interface Status                          Up
VRRP Status                                       Initialize
VRRP Priority                                     100
Message Spool Status                              AD-Standby
Priority Reported By Mate                         Active

solace-monitor&gt; <b>show redundancy</b>
Configuration Status     : Enabled
Redundancy Status        : Up
Operating Mode           : Monitoring Node
Switchover Mechanism     : Hostlist
Auto Revert              : No
</pre></li></ol><h3><a name="Step2"/>Step 2</h3><p>Perform the following steps on the monitoring node.</p><ol><li value="1"><p>Log into the solace-monitoring Docker host.</p><p class="Note">Step 1 to step 10 illustrate one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li value="2"><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li value="3"><p>Load the new event broker Docker version into Docker:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li value="4"><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker inspect solace</b></pre></li><li value="5"><p>Stop the docker instance:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker stop --time 1200 solace</b></pre></li><li value="6"><p>Record the host locations of the storage elements.</p><p>Before removing the container in the next step, it is important to record the host locations of the storage elements so that they can be re-attached to the new instance. To get information on volumes and the host path to each volume, click on <b>Finding Host Path to Volumes</b> below.</p><div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open"/></a><a name="Finding_Host_Path_to_Volumes" style="padding-bottom: 10px;display: inline-block;"/><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Finding Host Path to Volumes</a></span><div class="MCDropDownBody dropDownBody"><p>You can use <code>docker inspect &lt;container&gt;</code> to view volumes that belong to a container, as shown in the example below.</p><pre class="Code_Grayed">docker inspect solace
"Mounts": [
   {
       "Type": "volume",
       "Name": "adb",
       "Source": "/var/lib/docker/volumes/adb/_data",
       "Destination": "/usr/sw/internalSpool/softAdb",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "jail",
       "Source": "/var/lib/docker/volumes/jail/_data",
       "Destination": "/usr/sw/jail",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "diagnostics",
       "Source": "/var/lib/docker/volumes/diagnostics/_data",
       "Destination": "/var/lib/solace/diags",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "var",
       "Source": "/var/lib/docker/volumes/var/_data",
       "Destination": "/usr/sw/var",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },</pre><p> If the mount type is not a volume then use the source as the host path. If the mount type is a volume, then use the <code> docker volume inspect &lt;volume&gt;</code> command. In the example below, either the <code>Mountpoint</code> or the <code>device</code> directory can be used as the host path to the jail volume.	If you have the <code>device</code> directory configured, use that as the host path to the <code>jail</code> volume. If you don't have the <code>device</code> directory configured then use the<code> Mountpoint</code> directory.</p><pre class="Code_Grayed">docker volume inspect jail
[
      {
            "CreatedAt": "2019-10-23T14:11:49Z",
            "Driver": "local",
            "Labels": {},
            "Mountpoint": "/var/lib/docker/volumes/jail/_data",
            "Name": "jail",
            "Options": {
            "device": "/mnt/vmr/jail",
            "o": "bind",
            "type": "none"
            },
            "Scope": "local"cons
      }
]</pre></div></div></li><li value="7"><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker rm solace</b></pre></li><li value="8"><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  Note that the <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only:</p><pre class="Code" xml:space="preserve">[user@host /]# exit
[sysadmin@solace-monitor ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \
--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <a href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm#top" class="MCXref xref">Initializing a Software Event Broker Container</a>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container&#x2019;s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li value="9"><p>Restart event broker Docker container:</p><pre class="Code">[sysadmin@solace-monitor ~]$ <b>docker start solace</b></pre><p>When solace-monitor restarts, it will be running the configuration and message-spool from the previous version.</p></li><li value="10"><p>Log into the monitoring node and confirm that it is running the new version:</p><pre class="Code">solace-monitor&gt; <b>show version</b></pre></li><li value="11"><p>Ensure Redundancy Status is Up on solace-monitor:</p><pre class="Code">solace-monitor&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li></ol><h3><a name="Step3"/>Step 3</h3><p>Perform the following steps on  the backup node.</p><ol><li value="1"><p>Log into the backup node as an admin user.</p></li><li value="2"><p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on solace-backup:</p><pre class="Code" xml:space="preserve">solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li value="3"><p>If using Config-sync, ensure that it is in sync:</p><pre class="Code" xml:space="preserve">solace-backup&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre></li><li value="4"><p>Log into solace-backup Docker host.</p><p class="Note">Step 4 to step 14 illustrate one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li value="5"><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li value="6"><p>Load the new event broker Docker version into Docker:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li value="7"><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker inspect solace</b></pre></li><li value="8"><p>If you are using MQTT&#xA0;retained messages in your deployment, verify that your retain cache instances are synchronized. For more information, refer to <a href="../../Services/Managing-MQTT-Retained-Messages.htm#Verify_Caches_Sync" class="MCXref xref" data-mc-conditions="Default.NotForPDF">Verifying Retain Cache Redundancy</a>.</p></li><li value="9"><p>Stop the Docker instance:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker stop --time 1200 solace</b></pre></li><li value="10"><p>Record the host locations of the storage elements.</p><p>Before removing the container in the next step, it is important to record the host locations of the storage elements so that they can be re-attached to the new instance. To get information on volumes and the host path to each volume, click on <b>Finding Host Path to Volumes</b> below.</p><div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open"/></a><a name="Finding_Host_Path_to_Volumes" style="padding-bottom: 10px;display: inline-block;"/><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Finding Host Path to Volumes</a></span><div class="MCDropDownBody dropDownBody"><p>You can use <code>docker inspect &lt;container&gt;</code> to view volumes that belong to a container, as shown in the example below.</p><pre class="Code_Grayed">docker inspect solace
"Mounts": [
   {
       "Type": "volume",
       "Name": "adb",
       "Source": "/var/lib/docker/volumes/adb/_data",
       "Destination": "/usr/sw/internalSpool/softAdb",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "jail",
       "Source": "/var/lib/docker/volumes/jail/_data",
       "Destination": "/usr/sw/jail",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "diagnostics",
       "Source": "/var/lib/docker/volumes/diagnostics/_data",
       "Destination": "/var/lib/solace/diags",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "var",
       "Source": "/var/lib/docker/volumes/var/_data",
       "Destination": "/usr/sw/var",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },</pre><p> If the mount type is not a volume then use the source as the host path. If the mount type is a volume, then use the <code> docker volume inspect &lt;volume&gt;</code> command. In the example below, either the <code>Mountpoint</code> or the <code>device</code> directory can be used as the host path to the jail volume.	If you have the <code>device</code> directory configured, use that as the host path to the <code>jail</code> volume. If you don't have the <code>device</code> directory configured then use the<code> Mountpoint</code> directory.</p><pre class="Code_Grayed">docker volume inspect jail
[
      {
            "CreatedAt": "2019-10-23T14:11:49Z",
            "Driver": "local",
            "Labels": {},
            "Mountpoint": "/var/lib/docker/volumes/jail/_data",
            "Name": "jail",
            "Options": {
            "device": "/mnt/vmr/jail",
            "o": "bind",
            "type": "none"
            },
            "Scope": "local"cons
      }
]</pre></div></div></li><li value="11"><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker rm solace</b></pre></li><li value="12"><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  Note that the <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only:</p><pre class="Code" xml:space="preserve">[user@host /]# exit
[sysadmin@solace-backup ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \
--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;
</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <a href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm#top" class="MCXref xref">Initializing a Software Event Broker Container</a>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container&#x2019;s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li value="13"><p>Restart event broker Docker container:</p><pre class="Code">[sysadmin@solace-backup ~]$ <b>docker start solace</b></pre><p>When solace-backup restarts, it will be running the configuration and message-spool from the previous version.</p></li><li value="14"><p>Log into solace-backup and confirm that it is running the new version:</p><pre class="Code">solace-backup&gt; <b>show version</b></pre></li><li value="15"><p>Ensure Redundancy Status is Up on solace-backup:</p><pre class="Code">solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li value="16"><p>If using Config-sync, ensure that it is in sync:</p><pre class="Code" xml:space="preserve">solace-backup&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre></li><li value="17"><p>If the backup node provides AD service, ensure the Message Spool Status is AD-Standby:</p><pre class="Code">solace-backup&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre></li></ol><h3><a name="Step4"/>Step 4</h3><p>Perform the following steps on the primary node.</p><ol><li value="1"><p>Log into the primary node as an admin user.</p></li><li value="2"><p>Release activity from the primary node to the backup:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>enable</b>
solace-primary&gt; <b>configure</b>
solace-primary&gt; <b>redundancy release-activity</b>
</pre></li><li value="3"><p>On the primary node, ensure Redundancy Configuration Status is Enabled-Released and Redundancy Status is Down:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled-Released
Redundancy Status        : Down
</pre></li><li value="4"><p>On the backup node, ensure Redundancy Configuration Status is Enabled, Redundancy Status is Down and the Activity Status on the Backup Virtual Router is Local Active:</p><pre class="Code">Solace-backup&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Down

                               Primary Virtual    Backup Virtual
                               Router             Router
                               ---------------    ---------------
Activity Status                Shutdown           Local Active
</pre></li><li value="5"><p>Log into the solace-primary Docker host.</p><p class="Note">Step 5 to step 15 illustrate one method of upgrading a Docker container. The event broker Docker container can be upgraded using any supported Docker upgrade procedure. You should choose a procedure that matches your deployment. For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li value="6"><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace-prmiary ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p><u>Where</u>:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li value="7"><p>Load the new event broker version into Docker:</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li value="8"><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker inspect solace</b></pre></li><li value="9"><p>If you are using MQTT&#xA0;retained messages in your deployment, verify that your retain cache instances are synchronized. For more information, refer to <a href="../../Services/Managing-MQTT-Retained-Messages.htm#Verify_Caches_Sync" class="MCXref xref" data-mc-conditions="Default.NotForPDF">Verifying Retain Cache Redundancy</a>.</p></li><li value="10"><p>Stop the Docker instance:</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker stop --time 1200 solace</b></pre></li><li value="11"><p>Record the host locations of the storage elements.</p><p>Before removing the container in the next step, it is important to record the host locations of the storage elements so that they can be re-attached to the new instance. To get information on volumes and the host path to each volume, click on <b>Finding Host Path to Volumes</b> below.</p><div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open"/></a><a name="Finding_Host_Path_to_Volumes" style="padding-bottom: 10px;display: inline-block;"/><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Finding Host Path to Volumes</a></span><div class="MCDropDownBody dropDownBody"><p>You can use <code>docker inspect &lt;container&gt;</code> to view volumes that belong to a container, as shown in the example below.</p><pre class="Code_Grayed">docker inspect solace
"Mounts": [
   {
       "Type": "volume",
       "Name": "adb",
       "Source": "/var/lib/docker/volumes/adb/_data",
       "Destination": "/usr/sw/internalSpool/softAdb",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "jail",
       "Source": "/var/lib/docker/volumes/jail/_data",
       "Destination": "/usr/sw/jail",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "diagnostics",
       "Source": "/var/lib/docker/volumes/diagnostics/_data",
       "Destination": "/var/lib/solace/diags",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },
   {
       "Type": "volume",
       "Name": "var",
       "Source": "/var/lib/docker/volumes/var/_data",
       "Destination": "/usr/sw/var",
       "Driver": "local",
       "Mode": "z",
       "RW": true,
       "Propagation": ""
   },</pre><p> If the mount type is not a volume then use the source as the host path. If the mount type is a volume, then use the <code> docker volume inspect &lt;volume&gt;</code> command. In the example below, either the <code>Mountpoint</code> or the <code>device</code> directory can be used as the host path to the jail volume.	If you have the <code>device</code> directory configured, use that as the host path to the <code>jail</code> volume. If you don't have the <code>device</code> directory configured then use the<code> Mountpoint</code> directory.</p><pre class="Code_Grayed">docker volume inspect jail
[
      {
            "CreatedAt": "2019-10-23T14:11:49Z",
            "Driver": "local",
            "Labels": {},
            "Mountpoint": "/var/lib/docker/volumes/jail/_data",
            "Name": "jail",
            "Options": {
            "device": "/mnt/vmr/jail",
            "o": "bind",
            "type": "none"
            },
            "Scope": "local"cons
      }
]</pre></div></div></li><li value="12"><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace-primary ~]$ <b>docker rm solace</b></pre></li><li value="13"><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  Note that the <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only:</p><pre class="Code" xml:space="preserve">[user@host /]# exit
[sysadmin@solace-primary ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \-v var:/usr/sw/var \
-v internalSpool:/usr/sw/internalSpool \
-v softAdb:/usr/sw/internalSpool/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <a href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm#top" class="MCXref xref">Initializing a Software Event Broker Container</a>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container&#x2019;s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li value="14"><p>Restart event broker Docker container:</p><pre class="Code">[sysadmin@ solace-primary ~]$ <b>docker start solace</b></pre><p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p></li><li value="15"><p>Log into solace-primary and confirm that it is running the new version:</p><pre class="Code">solace-primary&gt; <b>show version</b></pre></li><li value="16"><p>No Release activity from the primary node:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>enable</b>
solace-primary&gt; <b>configure</b>
solace-primary&gt; <b>no redundancy release-activity</b></pre></li><li value="17"><p>Ensure Redundancy Status is Up on solace-primary:</p><pre class="Code">solace-primary&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li value="18"><p>If using Config-sync, ensure that it is in sync:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>show config-sync</b>
Admin Status            : Enabled
Oper Status             : Up
</pre></li><li value="19"><p>If the node provides AD service, ensure the Message Spool Status is AD-Standby:</p><pre class="Code" xml:space="preserve">solace-primary&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre></li></ol><p>You have completed this procedure.</p><p class="Note">The backup is now active and the primary is standby. For instructions describing how to revert the activity back to the primary, refer to <a href="../../Features/HA-Redundancy/Maintaining-Event-Broker-Redundancy-All-Broker.htm#Give-Up-Activity" class="MCXref xref">Forcing Backups to Give Up Activity to Primaries</a>.</p></div><div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" id="redundant-orch"><h2 class="with-rule"><a name="Upgradin2"/>Upgrade a Redundant Docker Image Group from Version <span class="mc-variable Minimum-Supported-Component-Versions.SW_Broker_Upgrade variable">9.10.0</span>+ Using an Orchestration Tool</h2><div class="Caution"><p>This procedure is specifically for upgrades using a container orchestration tool such as Kubernetes. The capabilities of such tools vary widely. For example, some do provide the flexibility to control the order in which an HA pair of Solace event brokers can be upgraded. When possible, it is recommended to use the upgrade procedure &#x2018;Upgrading Redundant Docker Image Group&#x2019; as it may reduce the number of activity switchover and ensures config-sync is in-sync during the upgrade. Otherwise, the procedure in this section is provided.</p></div><p>To upgrade a Solace PubSub+ event broker container instance, the user must delete the existing container instance and replace it with a new container instance running the target version. To preserve the existing state, the new container instance must be deployed with the storage elements from the existing instance. </p><p>This upgrade procedure will preserve the event broker&#x2019;s configuration and stored messages.  All of the persistent data needed to recreate a PubSub+ instance is contained in the <a href="../Configuring-Storage.htm" class="link-internal">storage elements</a>.  At a minimum, the <code>var</code> and <code>internalSpool</code> storage elements must be preserved in order to successfully upgrade an event broker instance.</p><p>This procedure describes upgrading from PubSub+ Enterprise to PubSub+ Enterprise.</p><p>On non-Enterprise event brokers, the following upgrades are also supported:</p><ul><li>from Evaluation to Enterprise</li><li>from Standard to Standard</li><li>from Standard to Enterprise</li></ul><p>For the upgrades between other editions, some prompts will have a different edition included and one must take care to change the file name and the docker create command (search for the word &#x2018;enterprise&#x2019; and change as needed).</p><p>The nodes (primary, backup and monitoring) can be upgrades in any order.</p><p class="Note">It is important to reboot the three software event brokers one at time. If the Monitoring and Backup Nodes are offline at the same time, the Primary Node will automatically reboot.</p><p>To upgrade a redundant Docker image group from version <span class="mc-variable Minimum-Supported-Component-Versions.SW_Broker_Upgrade variable">9.10.0</span>+ to version 9.11.0 or later using an orchestration tool:</p><ol><li value="1"><p>Pick a node not upgraded yet.</p></li><li value="2"><p>Log into the node as an admin user.</p></li><li value="3"><p>Ensure Redundancy Configuration Status is Enabled and Redundancy Status is Up on:</p><pre class="Code">solace&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre><p>The following step 4 to 11 illustrates one method of upgrading a Docker container. Event broker Docker can be upgraded using any supported Docker upgrade procedure.  You should choose a procedure that matches your deployment.  For example, if your event broker Docker deployment is managed by Linux service or systemctl, then this procedure will need to be adjusted accordingly.</p></li><li value="4"><p>Log into the solace Docker host.</p></li><li value="5"><p>Copy the tar file to the Docker host:</p><pre class="Code">[sysadmin@solace ~]$ <b>scp [&lt;username&gt;@]&lt;ip-addr&gt;:solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz /tmp</b></pre><p>Where:</p><p><code>&lt;username&gt;</code>, <code>&lt;ip-addr&gt;</code>, and <code>solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</code> correspond to the access information of where the new SolOS software is located.</p></li><li value="6"><p>Load the new event broker Docker version into Docker:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker load --input /tmp/solace-pubsub-enterprise-&lt;version&gt;-docker.tar.gz</b></pre></li><li value="7"><p>Use Docker inspect to read and record the settings used to create the old event broker Docker instance (In this example, the container is named <code>solace</code>):</p><pre class="Code">[sysadmin@solace ~]$ <b>docker inspect solace</b></pre></li><li value="8"><p>If you are using MQTT&#xA0;retained messages in your deployment, verify that your retain cache instances are synchronized. For more information, refer to <a href="../../Services/Managing-MQTT-Retained-Messages.htm#Verify_Caches_Sync" class="MCXref xref" data-mc-conditions="Default.NotForPDF">Verifying Retain Cache Redundancy</a>.</p></li><li value="9"><p>Stop the docker instance:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker stop --time 1200 solace</b></pre></li><li value="10"><p>Remove the Docker container:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker rm solace</b></pre></li><li value="11"><p>Create a new Docker instance. Parameters should be selected by reading the documentation of the new software version and comparing them to the parameters used for the previous load.  The <code>timezone</code> will be set to UTC unless it is overridden using the <code>TZ</code> environment variable.  When selecting the volumes for upgrade, consider where the data is stored from the previous software version and how to map that into the container.</p><p>The following <code>docker create</code> options is an example only.</p><pre class="Code_Grayed" xml:space="preserve">[user@host /]# exit
[sysadmin@solace ~]$ <b>docker create</b> \
--network=host \
--uts=host \
-v jail:/usr/sw/jail \
-v var:/usr/sw/var \
-v Code:/usr/sw/Code \
-v softAdb:/usr/sw/Code/softAdb \
-v adbBackup:/usr/sw/adb \
-v diagnostics:/var/lib/solace/diags \
--shm-size=4g \
--ulimit nofile=2448:38048 \
--env 'TZ=Canada/Eastern' \
--env 'umask=0022' \
--name=solace solace-pubsub-enterprise:&lt;version&gt;</pre><p>Config-keys can be specified in the docker create command. However, they only take effect when the container is booted for the first time and the database is absent. During an upgrade, config-keys are not re-evaluated and changes made to the config-keys when creating the new container will not take effect.</p><p>As explained in <a href="../Container-Tasks/Config-SW-Broker-Container-Cfg-Keys.htm" class="MCXref xref">Initializing a Software Event Broker Container</a>, TZ (timezone) and UMASK are not configuration keys. They are simply environment variables that are processed by the container&#x2019;s operating system. Unlike config-keys, changes to these environment variables (as shown in the above <code>docker create</code> command) take effect whenever the container is restarted.</p></li><li value="12"><p>Restart event broker Docker:</p><pre class="Code">[sysadmin@solace ~]$ <b>docker start solace</b></pre><p>When solace-primary restarts, it will be running the configuration and message-spool from the previous version.</p></li><li value="13"><p>Log into solace-primary and confirm that it is running the new version:</p><pre class="Code">solace&gt; <b>show version</b></pre></li><li value="14"><p>Ensure Redundancy Status is Up on solace:</p><pre class="Code">solace&gt; <b>show redundancy</b> 
Configuration Status     : Enabled
Redundancy Status        : Up
</pre></li><li value="15"><p>If the upgraded event broker is a messaging node and provides AD service, ensure the Message Spool Status is AD-Standby:</p><pre class="Code">solace&gt; <b>show redundancy</b> 
Message Spool Status             AD-Standby
</pre></li><li value="16"><p>Repeat from step 1 until all three nodes are upgraded.</p></li></ol><p>You have completed this procedure.</p></div>&#xA0;&#xA0;<script xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" type="text/javascript" src="../../Resources/Scripts/Tabbed_Content.js"/></div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="no-print">
                      <div>
                        <a href="#" id="docsFeedbackTrigger" class="docs-issue-collector">Provide feedback</a>
                      </div>
                    </div>
                    <footer class="my-4 pt-4 text-center no-print">
                      <div class="footer-txt text-center no-print">
                        <ul class="list-inline ">
                          <li class="list-inline-item text-muted"><a href="../../Resources/Documentation-Set.htm" class="doc-set-footer-link MCXref xref xrefdoc-set-footer-link">Documentation Coverage</a>: <span class="mc-variable Variables.DocumentSetNumber variable">2024.09.16.0001</span></li>
                          <li class="list-inline-item text-muted">Last Updated: <span class="mc-variable Variables.MonthDayYear variable">September 16, 2024</span></li>
                          <li class="list-inline-item text-muted" style="font-size:13px;"> &#xA9;  <span class="mc-variable Variables.CompanyNameLegal variable">Solace Corporation</span></li>
                        </ul>
                      </div>
                      <div class="footer-icons">
                        <ul class="list-inline">
                          <li class="list-inline-item">
                            <a href="https://facebook.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/facebook_22x21.png" class="Hyperlinked" alt="Facebook" title="Solace Facebook Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.linkedin.com/company/20219" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/LinkedIn_22x21.png" class="Hyperlinked" alt="LinkedIn" title="Solace LinkedIn Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://twitter.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/Twitter_22x21.png" class="Hyperlinked" alt="Twitter" title="Solace Twitter Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.youtube.com/user/SolaceSystems" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/youtube_22x21.png" class="Hyperlinked" alt="YouTube" title="Solace YouTube Channel" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.instagram.com/solacedotcom/" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/instagram_22x21.png" class="Hyperlinked" alt="Instagram" title="Solace Instagram Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://medium.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/medium_22x21.png" class="Hyperlinked" alt="Medium" title="Solace Medium Blog" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                        </ul>
                      </div>
                      <div class="footer_link_menu">
                        <ul class="link_list">
                          <li class="link_list_item">
                            <a href="https://solace.com/products/" target="_blank" class="footer-link">Products</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/company/" target="_blank" class="footer-link">Company</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://www.solace.dev/" target="_blank" class="footer-link">Developers</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/support/" target="_blank" class="footer-link">Support</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/contact/" target="_blank" class="footer-link">Contact Us</a>
                          </li>
                        </ul>
                      </div>
                    </footer>
                  </div>
                  <!-- JIRA issue collector -->
                  <script>/*<![CDATA[*/// Requires jQuery!
jQuery.ajax({
    url: "https://sol-jira.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/o2joag/b/24/e73395c53c3b10fde2303f4bf74ffbf6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=076e0808",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS = {
"triggerFunction": function(showCollectorDialog) {
//Requires that jQuery is available!
$("#docsFeedbackTrigger").click(function(e) {
e.preventDefault();
showCollectorDialog();
});
},
fieldValues: {
recordWebInfo: '1', // field Name
recordWebInfoConsent: ['1'] // field Id
}
};
/*]]>*/</script>
                  <script src="../../Resources/Scripts/thumbnail.js">
                                    </script>
                  <!-- Script for Launching offsite links in new tab -->
                  <script type="text/javascript">/*<![CDATA[*/$("a[href^='http']").attr("target","_blank");/*]]>*/</script>
                </div>
              </div>
            </div>
          </div>
          <a data-close="true"/>
        </div>
      </div>
    </div>
  </body>
</html>
