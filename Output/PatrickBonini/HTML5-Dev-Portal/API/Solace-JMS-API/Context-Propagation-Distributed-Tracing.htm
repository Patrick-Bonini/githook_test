<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|Developer Guide for Solace JMS API" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta http-equiv="Cache-control" content="no-cache" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Context Propagation for Distributed Tracing</title>
        <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" /> -->
        <!--style to display feedback button correctly in IE-->
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- links to get the EDA styling to work -->
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/MainStyles.min.css" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
        <style>@media screen and (min-width: 0\0)
{
	.feedback-button
	{
		margin-right: -40px;
		top: 50%;
		border-radius: 9px 9px 0px 0px;
	}

	#canvas
	{
		position: relative;
	}
}

@media print
{
	#plugin
	{
		overflow: visible !important;
	}
}

</style>
        <link href="../../Resources/Stylesheets/eda_styles.css" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,300" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script src="https://cmp.osano.com/AzZrhlTmT5f216Foa/84ba7dc4-a4e5-4b02-b120-977eb6f052d4/osano.js">
        </script>
        <script type="text/javascript">/*<![CDATA[*/(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KLSDFH');
		/*]]>*/</script>
        <script type="text/javascript" src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <!-- Top Orange and Darkgrey header-->
    <!-- Div for EDA banner -->
    <div class="eda_banner">
        <p>Register Now for EDA Summit 2024 - Virtual Event <a href="https://edasummit.com/" target="_blank">Register for Free</a></p>
    </div>
    <!-- end Div for EDA banner -->
    <div class="top-nav">
        <div class="main_list">
            <ul class="top-navlinks">
                <li><a href="https://solace.com/support/" target="_blank">Support</a>
                </li>
                <li><a href="https://solace.com/contact/" target="_blank">Contact Us</a>
                </li>
            </ul>
        </div>
        <div class="container-fluid">
            <div class="src-li">
                <div id="srchWrapTwo">
                    <form class="search" action="#">
                        <div class="search-bar search-bar-container needs-pie">
                            <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs" />
                            <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                </div>
                                <div class="search-filter-content" id="sf-content">
                                    <ul>
                                        <li>
                                            <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="search-submit-wrapper" dir="ltr">
                                <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div><span class="tool-tip" tooltip-position="left" tooltip="To search for CLI commands, events, or APIs, navigate to the related sections.">i</span>
            <!-- Sept. 28, 2022 - This is being moved to under div class= top-nav
			<div class="main_list">
				<ul class="top-navlinks">
					<li><a href="https://solace.com/support/" target="_blank">Support</a></li>
					<li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li>
				</ul>
			</div> -->
        </div>
        <!-- Sept. 27, 2022 - The commented out content below used to provide the products, company, etc., links in the top header, next to the search field. -->
        <!-- <div class="main_list"><ul class="top-navlinks"><li><a href="https://solace.com/products/" target="_blank">Products</a></li><li><a href="https://solace.com/company/" target="_blank">Company</a></li><li><a href="https://www.solace.dev/" target="_blank">Developers</a></li><li><a href="https://solace.com/support/" target="_blank">Support</a></li><li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li></ul></div> -->
    </div>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1000px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../index.html" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic Print NextTopic;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous topic" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next topic" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLSDFH" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <div id="content">
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="ContentRow" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                    <div>
                                                        <div class="nocontent" xmlns="">
                                                            <div class="MCBreadcrumbsBox_MCBreadcrumbsSelf_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="4" data-mc-toc="True"><span class="MCBreadcrumbsPrefix"> </span>
                                                            </div>
                                                        </div>
                                                        <div role="main" id="mc-main-content" xmlns="">
                                                            <h1 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Context Propagation for Distributed Tracing</h1>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Distributed tracing allows your enterprise applications to trace the flow of messages as they travel from your publisher, through the event mesh and to the receiving application.  For a detailed overview see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Overview.htm" class="MCXref xref">Distributed Tracing </a>.  For  information about version requirements, see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</p>
                                                            <div class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <ul>
                                                                    <li>The PubSub+ OpenTelemetry API Libraries support W3C propagators only.</li>
                                                                    <li>For information about configuring OpenTelemetry SDK environment variables see <a href="https://opentelemetry.io/docs/concepts/sdk-configuration/" class="link-offsite">OpenTelemetry SDK Configuration</a>.</li>
                                                                    <li>By default, traces include command line parameters visible to backend applications like Jaeger.
It is important to disable this feature for security purposes because these parameters may contain sensitive information such as your user name and password. For instructions, see <a href="https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md#resource-provider-spi" class="link-offsite">Disabling Automatic Resource Providers</a>	in the OpenTelemetry documentation in GitHub.	</li>
                                                                </ul>
                                                            </div>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Instrumenting-JMS-Distributed-Tracing"></a>Instrumenting JMS for Distributed Tracing</h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There are two ways to integrate distributed tracing into an application using the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> JMS API:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><a href="#Automat" class="MCXref xref"> Automatic Instrumentation</a> allows your applications to inject and extract standard OpenTelemetry data without any modifications to your source code.
            </li>
                                                                <li><a href="#Manual" class="MCXref xref">Manual Instrumentation</a> involves making changes to your enterprise application's source code. These code modifications allow you to inject and extract additional context, such as Baggage and Trace States, into messages.
            </li>
                                                            </ul>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Automat"></a> Automatic Instrumentation</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Automatic instrumentation does not require any application code changes to send telemetry data. You do not need to change the start up parameters in your application or implement any additional libraries. To use automatic instrumentation: </p>
                                                            <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li value="1"> Download the .jar files from the following locations, and place them in your project:</li>
                                                                <ul>
                                                                    <li><a href="https://mvnrepository.com/artifact/io.opentelemetry.javaagent/opentelemetry-javaagent" class="link-offsite" target="_blank">OpenTelemetry Instrumentation for Java</a>
                                                                    </li>
                                                                    <li><a href="https://mvnrepository.com/artifact/com.solace/solace-opentelemetry-jms-integration" class="link-offsite" target="_blank">PubSub+ OpenTelemetry Integration for Solace JMS API</a>
                                                                        <p>For OpenTelemetry version compatibility see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</p> </li>
                                                                </ul>
                                                                <li value="2"> At the command prompt, enter the following command to configure your publishing application to inject OpenTelemetry data into published messages. To allow your application to send trace data to an OTLP endpoint you’ll need to update the property <code>otel.exporter.otlp.endpoint=http://localhost:4317</code> to point to your collector's IP address:</li><pre xml:space="preserve">java -javaagent:<b>&lt;absolute-path-to-otel-jar&gt;</b>/opentelemetry-javaagent-all-<b>&lt;otel-java-version&gt;</b>.jar \
-Dotel.javaagent.extensions=<b>&lt;absolute-path-to-solace-jar&gt;</b>/solace-opentelemetry-jms-integration-<b>&lt;solace-opentelementry-version&gt;</b>.jar \
-Dotel.propagators=solace_jms_tracecontext \
-Dotel.exporter.otlp.endpoint=<b>&lt;http://localhost:4317&gt;</b> \
-Dotel.traces.exporter=otlp \
-Dotel.metrics.exporter=none \
-Dotel.instrumentation.jms.enabled=true \
-Dotel.resource.attributes="service.name=SolaceJMSPublisher" \
-jar <b>&lt;your-jms-publisher-application&gt;</b>.jar    </pre>
                                                                <p>Where :</p>
                                                                <ul>
                                                                    <li><code>&lt;absolute-path-to-otel-jar&gt;</code>is the absolute file path to the directory containing your OpenTelemetry Java Agent JAR file.</li>
                                                                    <li><code>&lt;absolute-path-to-solace-jar&gt;</code> is the absolute file path to the directory containing your <span class="mc-variable Variables.CompanyName variable">Solace</span> <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> OpenTelemetry JMS Integration JAR file.</li>
                                                                    <li><code>&lt;http://localhost:4317&gt;</code> is the URL of the <a href="https://opentelemetry.io/docs/collector/" class="link-offsite" target="_blank">Collector</a> you are using. The example <code>localhost:4317</code>is a default port for an OpenTelemetry Collector that is running locally.</li>
                                                                    <li><code>&lt;your-jms-publisher-application&gt;</code> is the name of the JAR file associated with your JMS publisher application. </li>
                                                                    <li><code>&lt;otel-java-version&gt;</code>	is the version OpenTelementry Instrumentation Java Library that is compatible with the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> OpenTelemetry Integration for Solace JMS API version(<code>&lt;solace-opentelementry-version&gt;</code>	). For information about the compatibility, see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</li>
                                                                    <li><code>&lt;solace-opentelementry-version&gt;</code> is the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> OpenTelemetry Integration for Solace JMS to use with the OpenTelementry Instrumentation Library (<code>&lt;otel-java-version&gt;</code>). For information about the compatibility, see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</li>
                                                                </ul>
                                                                <li value="3"> At the command prompt, enter following command to configure your queue receiver application to extract OpenTelemetry data from received messages:
</li>
                                                                <p><pre xml:space="preserve">
java -javaagent:<b>&lt;absolute-path-to-otel-jar&gt;</b>/opentelemetry-javaagent-all-<b>&lt;otel-java-version&gt;</b>.jar \
-Dotel.javaagent.extensions=<b>&lt;absolute-path-to-solace-jar&gt;</b>/solace-opentelemetry-jms-integration-<b>&lt;solace-opentelementry-version&gt;</b>.jar \
-Dotel.propagators=solace_jms_tracecontext \
-Dotel.traces.exporter=otlp \
-Dotel.metrics.exporter=none \
-Dotel.instrumentation.jms.enabled=true \
-Dotel.resource.attributes="service.name=SolaceJMSQueueSubscriber" \
-jar <b>&lt;your-jms-queue-receiver-application&gt;</b>.jar</pre>
                                                                </p>
                                                                <p>Where :</p>
                                                                <ul>
                                                                    <li><code>&lt;absolute-path-to-otel-jar&gt;</code> is the absolute file path to the directory containing your OpenTelemetry Java Agent JAR file.</li>
                                                                    <li><code>&lt;absolute-path-to-solace-jar&gt;</code> is the absolute file path to the directory containing your  <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> OpenTelemetry JMS Integration JAR file.</li>
                                                                    <li><code>&lt;your-jms-queue-receiver-application&gt;</code> is the name of the JAR file associated with your JMS queue receiver application.</li>
                                                                    <li><code>&lt;otel-java-version&gt;</code>	is the version OpenTelementry Instrumentation Java Library (such as <span class="mc-variable Manifest-Products-APIs.SDK-OTEL-JAVA-AUTOMATION-VERSION variable">1.29</span>.0) that is compatible with the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> OpenTelemetry Integration for Solace JMS API version(<code>&lt;solace-opentelementry-version&gt;</code>	). For information about the compatibility, see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</li>
                                                                    <li><code>&lt;solace-opentelementry-version&gt;</code> is the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> OpenTelemetry Integration for Solace JMS (such as 1.1.0) to use with the OpenTelementry Instrumentation Library (<code>&lt;otel-java-version&gt;</code>). For information about the compatibility, see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</li>
                                                                </ul>
                                                            </ol>
                                                            <p class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">When you use automatic instrumentation, the latest version of the <code>opentelemetry-javaagent-all-<b>&lt;otel-java-version&gt;</b>.jar</code> and<code> solace-opentelemetry-jms-integration-<b>&lt;solace-opentelementry-version&gt;</b>.jar</code> should not be added as Maven or Gradle dependencies in your applications. For information about the compatibility, see Distributed Tracing Version Compatibility.</p>
                                                            <p class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
           For auto-instrumentation, <span class="mc-variable Variables.CompanyName variable">Solace</span> recommends that you use the  OpenTelemetry Instrumentation for Java library, version <span class="mc-variable Manifest-Products-APIs.SDK-OTEL-JAVA-AUTOMATION-VERSION variable">1.29</span>, which <span class="mc-variable Variables.CompanyName variable">Solace</span> has tested to work with <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> products that support auto-instrumentation. Earlier versions of the library may not be compatible with <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> products. For version details, see <a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases" target="_blank" class="link-offsite">https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases</a>.
        </p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For a more detailed example about how to set up automatic instrumentation in the JMS API see <a href="https://codelabs.solace.dev/codelabs/dt-otel/index.html?index=..%2F..index#0" class="link-offsite">Getting Started with Solace Distributed Tracing and Context Propagation</a>.</p>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Manual"></a>Manual Instrumentation</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Manual Instrumentation involves making changes to your enterprise application's source code, and allows you to inject and extract additional context, such as baggage and trace states, into messages. Context propagation makes it easy to debug and optimize your application.  For more information about context propagation in <span class="mc-variable Variables.CompanyName variable">Solace</span> event messages, see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Context-Propagation.htm#top" class="link-internal">Distributed Tracing Context Propagation</a>. The following examples show you how to create spans using the OpenTelemetry API.</p>
                                                            <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Understanding How Context Propagation Enables Distributed Tracing in the JMS <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> API</h4>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">In your client application, you can use the OpenTelemetry API to create a span, which contains metadata about an operation in a distributed system. This span is associated with a context, which includes a unique <code>TraceID</code>. Next, when you use a <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> message producer to publish a message, the <span class="mc-variable Variables.CompanyName variable">Solace</span> OTel integration package injects the context, which contains the <code>TraceID</code>, into the message. As the message travels through the event broker and is received by a consuming application, spans are generated at each step and have the same <code>TraceID</code> present in the original message context.  When each span is closed in the publishing or consuming application, the Java OpenTelemetry API sends it to an OpenTelemetry collector, which collects, processes and exports the spans to a backend application that correlates the spans using their unique <code>TraceID</code>. A backend application uses the correlated spans to create a <i>trace</i>, which is an end-to-end snapshot detailing how the message traveled through the distributed system. If you do not use context propagation, then backend applications cannot use a unique TraceID to link the spans, making it difficult to trace the flow of messages through the distributed system.</p>
                                                            <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Dependencies</h4>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To enable context propagation for distributed tracing, you must first add the <a href="https://mvnrepository.com/artifact/com.solace/solace-opentelemetry-jms-integration" class="link-offsite" target="_blank">Solace PubSub+ OpenTelemetry Integration For Solace JMS API</a> as a dependency in your application. This library automatically adds the OpenTelemetry API and SDK libraries, which are required for context propagation.<MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"> For OpenTelemetry version compatibility see <a href="../../Features/Distributed-Tracing/Distributed-Tracing-Receiver-Versions.htm" class="MCXref xref">Distributed Tracing Version Compatibility</a>.</MadCap:conditionalText> Adding the libraries gives you access to the following two interfaces:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>SolaceJmsW3CTextMapSetter</code>— This interface allows a <code>TextMapPropagator</code> to inject context into a message on the publisher side.
			</li>
                                                                <li><code>SolaceJmsW3CTextMapGetter</code>—  This interface allows a <code>TextMapPropagator</code> to  extract context from a message on the receiver side. 
			</li>
                                                            </ul>
                                                            <div class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <p>This guide assumes you are familiar with configuring an instance of the OpenTelemetry class. For instructions for configuring OpenTelemetry objects, see <a href="https://opentelemetry.io/docs/instrumentation/java/manual/" class="link-offsite" target="_blank">OpenTelemetry Manual Instrumentation in Java</a> in the OpenTelemetry documentation.</p>
                                                            </div>
                                                            <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Generating a Send Span on Message Publish</h4>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Your publishing application can generate a send span and export it to the OpenTelemetry Collector. The following steps show you how to inject context into a message and generate a send span for a published message:</p>
                                                            <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li value="1">Create a new span and set span attributes with the <code>setAttribute()</code> method. Next, set the current context as the parent of this span. Start the span with the <code>startSpan()</code> method:</li><pre xml:space="preserve">
final Span sendSpan = tracer
	.spanBuilder("mySolacePublisherApp" + " " + MessagingOperationValues.PROCESS)
	.setSpanKind(SpanKind.CLIENT)
	//Publish to a non-temporary topic endpoint
	.setAttribute(SemanticAttributes.MESSAGING_DESTINATION_KIND, MessagingDestinationKindValues.TOPIC)
	.setAttribute(SemanticAttributes.MESSAGING_TEMP_DESTINATION, false)
	//Set more attributes as needed
	//.setAttribute(...)
	//.setAttribute(...)
	.setParent(Context.current()) //Set the current context as the parent span
	.startSpan();</pre>
                                                                <li value="2">
                                                                    <p>Set the created span from Step 1   (<code>sendSpan</code> in this example) as the new current context. Next, inject the current context into your message and then publish the message. Call the <code>end()</code> method on the span to export the span data:</p>
                                                                </li><pre xml:space="preserve">
try (Scope scope = sendSpan.makeCurrent()) {
	final SolaceJmsW3CTextMapSetter setter = new SolaceJmsW3CTextMapSetter();
	final TextMapPropagator propagator = openTelemetry.getPropagators().getTextMapPropagator();
	//Inject the current context with send span into the message
	propagator.inject(Context.current(), message, setter);
	//Publish the message to the given topic
	messageProducer.send(messageDestination, message);
} catch (Exception e) {
	sendSpan.recordException(e);                          //Span can record an exception 
	sendSpan.setStatus(StatusCode.ERROR, e.getMessage()); //Set span status as ERROR/FAILED
} finally {
	sendSpan.end(); //The span data is exported after you call end()
}	</pre>
                                                            </ol>
                                                            <div class="MCDropDown MCDropDown_Closed dropDown" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Example Function:</a></span>
                                                                <div class="MCDropDownBody dropDownBody"><pre class="Code" xml:space="preserve">
package com.solace.samples.jms.snippets;

import com.solace.opentelemetry.javaagent.jms.SolaceJmsW3CTextMapGetter;
import com.solace.opentelemetry.javaagent.jms.SolaceJmsW3CTextMapSetter;
import io.opentelemetry.api.OpenTelemetry;
import io.opentelemetry.api.trace.Span;
import io.opentelemetry.api.trace.SpanKind;
import io.opentelemetry.api.trace.StatusCode;
import io.opentelemetry.api.trace.Tracer;
import io.opentelemetry.context.Context;
import io.opentelemetry.context.Scope;
import io.opentelemetry.context.propagation.TextMapPropagator;
import io.opentelemetry.semconv.trace.attributes.SemanticAttributes;
import io.opentelemetry.semconv.trace.attributes.SemanticAttributes.MessagingDestinationKindValues;
import io.opentelemetry.semconv.trace.attributes.SemanticAttributes.MessagingOperationValues;
import java.util.function.Consumer;
import javax.jms.Message;
import javax.jms.MessageProducer;
import javax.jms.Topic;

public class HowToImplementManualInstrumentation {

/**
* Example how to inject a tracing context in the Solace Message and generate a SEND span for the
* published message
*
* @param message            A Solace message that support tracing context propagation.
* @param messageProducer    JMS Message producer that can publish messages
* @param messageDestination message will be published to this topic
* @param openTelemetry      The entry-point to telemetry functionality for tracing, metrics and
*                           baggage.
* @param tracer             Tracer is the interface for Span creation and interaction with the
*                           in-process context.
*/
void howToCreateSpanOnMessagePublish(Message message, MessageProducer messageProducer,
Topic messageDestination, OpenTelemetry openTelemetry, Tracer tracer) {

//Create a new span with a current context as parent of this span
final Span sendSpan = tracer
	.spanBuilder("mySolacePublisherApp" + " " + MessagingOperationValues.PROCESS)
	.setSpanKind(SpanKind.CLIENT)
	// published to a topic endpoint (non temporary)
	.setAttribute(SemanticAttributes.MESSAGING_DESTINATION_KIND, MessagingDestinationKindValues.TOPIC)
	.setAttribute(SemanticAttributes.MESSAGING_TEMP_DESTINATION, false)
	//Set more attributes as needed
	//.setAttribute(...)
	//.setAttribute(...)
	.setParent(Context.current()) // set current context as parent
	.startSpan();

//set sendSpan as new current context
try (Scope scope = sendSpan.makeCurrent()) {
	final SolaceJmsW3CTextMapSetter setter = new SolaceJmsW3CTextMapSetter();
	final TextMapPropagator propagator = openTelemetry.getPropagators().getTextMapPropagator();
	//and then inject current context with send span into the message
	propagator.inject(Context.current(), message, setter);
	// message is being published to the given topic
	messageProducer.send(messageDestination, message);
} catch (Exception e) {
	sendSpan.recordException(e); //Span can record exception if any
	sendSpan.setStatus(StatusCode.ERROR, e.getMessage()); //Set span status as ERROR/FAILED
} finally {
	sendSpan.end(); //End sendSpan. Span data is exported when span.end() is called.
	}
}
}			</pre>
                                                                </div>
                                                            </div>
                                                            <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Generating a Receive Span on Message Receive</h4>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Your consuming application can generate a receive span and then export it to the OpenTelemetry Collector. The following steps show you how to extract tracing context from a received message and generate a receive span:</p>
                                                            <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li value="1">Use a <code>SolaceJmsW3CTextMapGetter</code> to extract any existing context from the received message:</li><pre xml:space="preserve">
final SolaceJmsW3CTextMapGetter getter = new SolaceJmsW3CTextMapGetter();
final Context extractedContext = openTelemetry.getPropagators().getTextMapPropagator()
	.extract(Context.current(), message, getter);</pre>
                                                                <li value="2">Set the extracted context as the current context with the <code>makeCurrent()</code> method. Next create a child span (<code>receiveSpan </code>in this example) and set the extracted context as the parent of that child span. Start the span using the <code>startSpan()</code> method:</li><pre xml:space="preserve">
try (Scope scope = extractedContext.makeCurrent()) {
	//Create a child span and set extracted/current context as parent of this span
	final Span receiveSpan = tracer
		.spanBuilder("mySolaceReceiverApp" + " " + MessagingOperationValues.RECEIVE)
		.setSpanKind(SpanKind.CLIENT)
		//If the message was received on a non temporary queue endpoint
		.setAttribute(SemanticAttributes.MESSAGING_DESTINATION_KIND,
		MessagingDestinationKindValues.QUEUE)
		.setAttribute(SemanticAttributes.MESSAGING_TEMP_DESTINATION, false)
		//Set more attributes as needed
		//.setAttribute(...)
		//.setAttribute(...)
		.setParent(extractedContext) //Creates a parent-child relationship for a message publisher's application span 
		.startSpan();
//Try catch continues in next step...</pre>
                                                                <li value="3">Accept and process the received message, then call the <code>end()</code> method on the receive span to export the span data:</li><pre xml:space="preserve">	try {
		//Do something with the message in a callback function
		messageProcessor.accept(receivedMessage);
	} catch (Exception e) {
		receiveSpan.recordException(e);                          //Span can record exception if any
		receiveSpan.setStatus(StatusCode.ERROR, e.getMessage()); //and set span status as ERROR/FAILED
	} finally {
		receiveSpan.end(); //Span data is exported when you call span.end()
	}
}</pre>
                                                            </ol>
                                                            <div class="MCDropDown MCDropDown_Closed dropDown" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Example Function:</a></span>
                                                                <div class="MCDropDownBody dropDownBody"><pre class="Code" xml:space="preserve">
package com.solace.samples.jms.snippets;

import com.solace.opentelemetry.javaagent.jms.SolaceJmsW3CTextMapGetter;
import com.solace.opentelemetry.javaagent.jms.SolaceJmsW3CTextMapSetter;
import io.opentelemetry.api.OpenTelemetry;
import io.opentelemetry.api.trace.Span;
import io.opentelemetry.api.trace.SpanKind;
import io.opentelemetry.api.trace.StatusCode;
import io.opentelemetry.api.trace.Tracer;
import io.opentelemetry.context.Context;
import io.opentelemetry.context.Scope;
import io.opentelemetry.context.propagation.TextMapPropagator;
import io.opentelemetry.semconv.trace.attributes.SemanticAttributes;
import io.opentelemetry.semconv.trace.attributes.SemanticAttributes.MessagingDestinationKindValues;
import io.opentelemetry.semconv.trace.attributes.SemanticAttributes.MessagingOperationValues;
import java.util.function.Consumer;
import javax.jms.Message;
import javax.jms.MessageProducer;
import javax.jms.Topic;

public class HowToImplementManualInstrumentation {

/**
* Example how to extract a tracing context from the Solace Message and generate a RECEIVE span
* for the received message
*
* @param receivedMessage  A Solace message.
* @param messageProcessor A callback function that user could use to process a message
* @param openTelemetry    The OpenTelemetry class is the entry point to telemetry functionality
*                         for tracing, metrics and baggage from OpenTelemetry Java SDK.
* @param tracer           OpenTelemetry Tracer is the interface from OpenTelemetry Java SDK for
*                         span creation and interaction with the in-process context.
*/
void howToCreateNewSpanOnMessageReceive(Message receivedMessage,
	Consumer&lt;Message&gt; messageProcessor,
	OpenTelemetry openTelemetry, Tracer tracer) {

//Extract tracing context from message, if any using the SolaceJmsW3CTextMapGetter
final SolaceJmsW3CTextMapGetter getter = new SolaceJmsW3CTextMapGetter();
final Context extractedContext = openTelemetry.getPropagators().getTextMapPropagator()
	.extract(Context.current(), receivedMessage, getter);

//Set the extracted context as current context
try (Scope scope = extractedContext.makeCurrent()) {
	//Create a child span and set extracted/current context as parent of this span
	final Span receiveSpan = tracer
	.spanBuilder("mySolaceReceiverApp" + " " + MessagingOperationValues.RECEIVE)
	.setSpanKind(SpanKind.CLIENT)
	// for the case the message was received on a non temporary queue endpoint
	.setAttribute(SemanticAttributes.MESSAGING_DESTINATION_KIND,
	MessagingDestinationKindValues.QUEUE)
	.setAttribute(SemanticAttributes.MESSAGING_TEMP_DESTINATION, false)
	//Set more attributes as needed
	//.setAttribute(...)
	//.setAttribute(...)
	// creates a parent child relationship to a message publisher's application span is any
	.setParent(extractedContext)
	// starts span
	.startSpan();

	try {
		// do something with a message in a callback
		messageProcessor.accept(receivedMessage);
	} catch (Exception e) {
		receiveSpan.recordException(e); //Span can record exception if any
		receiveSpan
		.setStatus(StatusCode.ERROR, e.getMessage()); //and set span status as ERROR/FAILED
	} finally {
		receiveSpan.end(); //End receiveSpan. Span data is exported when span.end() is called.
		}
		}
	}
	}		</pre>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="no-print">
                                            <div><a href="#" id="docsFeedbackTrigger" class="docs-issue-collector">Provide feedback</a>
                                            </div>
                                        </div>
                                        <footer class="my-4 pt-4 text-center no-print">
                                            <div class="footer-txt text-center no-print">
                                                <ul class="list-inline ">
                                                    <li class="list-inline-item text-muted"><a href="../../Resources/Documentation-Set.htm" class="doc-set-footer-link MCXref xref xrefdoc-set-footer-link">Documentation Coverage</a>: <span class="mc-variable Variables.DocumentSetNumber variable">2024.09.16.0001</span></li>
                                                    <li class="list-inline-item text-muted">Last Updated: <span class="mc-variable Variables.MonthDayYear variable">September 16, 2024</span></li>
                                                    <li class="list-inline-item text-muted" style="font-size:13px;"> ©  <span class="mc-variable Variables.CompanyNameLegal variable">Solace Corporation</span></li>
                                                </ul>
                                            </div>
                                            <div class="footer-icons">
                                                <ul class="list-inline">
                                                    <li class="list-inline-item"><a href="https://facebook.com/solacedotcom" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/facebook_22x21.png" class="Hyperlinked" alt="Facebook" title="Solace Facebook Page" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://www.linkedin.com/company/20219" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/LinkedIn_22x21.png" class="Hyperlinked" alt="LinkedIn" title="Solace LinkedIn Page" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://twitter.com/solacedotcom" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/Twitter_22x21.png" class="Hyperlinked" alt="Twitter" title="Solace Twitter Feed" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://www.youtube.com/user/SolaceSystems" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/youtube_22x21.png" class="Hyperlinked" alt="YouTube" title="Solace YouTube Channel" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://www.instagram.com/solacedotcom/" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/instagram_22x21.png" class="Hyperlinked" alt="Instagram" title="Solace Instagram Feed" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://medium.com/solacedotcom" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/medium_22x21.png" class="Hyperlinked" alt="Medium" title="Solace Medium Blog" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                </ul>
                                            </div>
                                            <div class="footer_link_menu">
                                                <ul class="link_list">
                                                    <li class="link_list_item"><a href="https://solace.com/products/" target="_blank" class="footer-link">Products</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://solace.com/company/" target="_blank" class="footer-link">Company</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://www.solace.dev/" target="_blank" class="footer-link">Developers</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://solace.com/support/" target="_blank" class="footer-link">Support</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://solace.com/contact/" target="_blank" class="footer-link">Contact Us</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </footer>
                                    </div>
                                    <!-- JIRA issue collector -->
                                    <script>/*<![CDATA[*/// Requires jQuery!
jQuery.ajax({
    url: "https://sol-jira.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/o2joag/b/24/e73395c53c3b10fde2303f4bf74ffbf6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=076e0808",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS = {
"triggerFunction": function(showCollectorDialog) {
//Requires that jQuery is available!
$("#docsFeedbackTrigger").click(function(e) {
e.preventDefault();
showCollectorDialog();
});
},
fieldValues: {
recordWebInfo: '1', // field Name
recordWebInfoConsent: ['1'] // field Id
}
};
/*]]>*/</script>
                                    <script src="../../Resources/Scripts/thumbnail.js">
                                    </script>
                                    <!-- Script for Launching offsite links in new tab -->
                                    <script type="text/javascript">/*<![CDATA[*/$("a[href^='http']").attr("target","_blank");/*]]>*/</script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>