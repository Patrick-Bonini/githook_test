define({"685":{y:0,u:"../Security/Granting-Clients-Access.htm",l:-1,t:"Controlling Client Access with ACL Profiles",i:0.00227117639604456,a:"After a client authenticates successfully, the event broker checks the ACL profile assigned to the client based on either: the client\u0027s username, or  the LDAP authorization groups that the client belongs to (when LDAP authorization is used) This ACL profile controls whether an authenticated client ..."},"686":{y:0,u:"../Security/Assigning-Client-Profiles.htm",l:-1,t:"Configuring Clients with Client Profiles",i:0.000294876315737204,a:"Client profiles are objects provisioned on Message VPNs that are used to assign a common set of configuration properties to clients that have been successfully authorized. Client profiles control many client behaviors and capabilities. For example, client profiles control the allocation of ..."},"687":{y:0,u:"../Security/Configuring-Client-Authorization.htm",l:-1,t:"Configuring Client Authorization",i:0.000456817506045122,a:"After clients connecting to a Message VPN are authenticated, they must be authorized to access event broker resources and messaging capabilities. How much access that a client is authorized for is determined by the client profile and ACL profile it is assigned. Client profiles and ACL profiles can ..."},"688":{y:0,u:"../Security/Configuring-Client-Usernames.htm",l:-1,t:"Configuring Client Usernames",i:0.00343542879402048,a:"Learn to perform a range of configuration tasks for Client Usernames."},"689":{y:0,u:"../Security/ACL.htm",l:-1,t:"Access Control Lists (ACLs)",i:0.000191805868536886,a:"Access Control Lists (ACLs) In this section we\u0027ll introduce you to ACL technology, and then discuss how to configure and mange ACLs. ACL Overview ACL Configuration"},"690":{y:0,u:"../Security/ACL-Overview.htm",l:-1,t:"ACL Overview",i:0.000381323476966698,a:"Solace PubSub+ event brokers support  Access Control Lists (ACLs). ACLs are used to control which clients may connect to which Message VPNs, and which topics clients are allowed to publish and subscribe to in their Message VPN. ACLs support an allow / deny-with-exceptions type policy structure along ..."},"691":{y:0,u:"../Security/Managing-Access-Control-Lists.htm",l:-1,t:"ACL Configuration",i:0.00334165301299433,a:"Access Control Lists (ACLs) are used to manage whether clients may connect to Message VPNs, which topics clients are allowed to publish to, and which topics and share names clients are allowed to subscribe to in that Message VPN. Each of these access controls require a defined default action (allow ..."},"692":{y:0,u:"../Security/Configuring-Client-Profiles.htm",l:-1,t:"Configuring Client Profiles",i:0.00612023414336332,a:"Learn to perform a range of configuration tasks for Client Profiles."},"693":{y:0,u:"../Security/Configuring-LDAP-Groups.htm",l:-1,t:" Configuring Client LDAP Authorization",i:0.00092317914437761,a:" Configuring Client LDAP Authorization By default, clients that connect to a Message VPN are provided authorizations for access to event broker resources and messaging capabilities based on what client username accounts on that Message VPN that they use. This internal authorization method requires ..."},"694":{y:0,u:"../Security/Configuring-OAuth-Authorization.htm",l:-1,t:"Configuring OAuth Authorization",i:0.000190160768010616,a:"Solace PubSub+ event brokers support two different types of OAuth tokens: access_token and id_token.  The OAuth standards state that the access_token is required and is opaque data and that the id_token is optional and a JSON Web Token (JWT). PubSub+ event brokers permit both types of tokens and ..."},"695":{y:0,u:"../Security/Viewing-Client-Config-Info.htm",l:-1,t:"Viewing Client Configuration Information",i:0.00135692277938126,a:"You can use show User EXEC commands to monitor and validate client configurations and status on the given Solace PubSub+ event broker: Showing Client Information Showing Client Profile Information Showing Client Username Information Showing Aggregated Client Statistics Clearing Client Statistics ..."},"696":{y:0,u:"../Security/Disconnecting-Specific-Clients.htm",l:-1,t:"Disconnecting Specific Clients",i:0.000203578544077401,a:"To disconnect a specific client from the event broker, enter the following  Admin EXEC commands: solace# admin solace(admin)# client \u003cname\u003e message-vpn \u003cvpn-name\u003e [primary] [backup] [static] solace(admin/client)# disconnect Where: \u003cname\u003e is the full name of the client. \u003cvpn-name\u003e is the full name of ..."},"697":{y:0,u:"../Security/TLS-SSL-Message-Encryption-Overview.htm",l:-1,t:"TLS / SSL Encryption",i:0.00313816885812193,a:"By default, clients use plain text over TCP to exchange data with Solace PubSub+ event brokers, and the data that is exchanged is not compressed. However, clients can use Transport Layer Security (TLS)/ Secure Sockets Layer (SSL)‑encrypted connections to an event broker. This allows an  exchange of ..."},"698":{y:0,u:"../Security/Managing-Cryptographic-Keys.htm",l:-1,t:"Managing Cryptographic Keys",i:0.000186010773760665,a:"The event broker uses three categories of cryptographic keys, each for a different purpose: TLS server keys for TLS server authentication on inbound connections. TLS client keys for TLS client authentication on outbound connections with these types of connections:  bridges  replication  REST/RDP  ..."},"699":{y:0,u:"../Security/Managing-TLS-SSL-Service.htm",l:-1,t:"TLS / SSL Service Configuration",i:0.00107955528126635,a:"This section describes how to configure the Transport Layer Security (TLS) / Secure Sockets Layer (SSL) facility on Solace PubSub+ event brokers so that clients can exchange data with the event broker using TLS / SSL over single TCP connections instead of plain text over TCP. It also describes how ..."},"700":{y:0,u:"../Security/Managing-Server-Certs.htm",l:-1,t:"Managing Server Certificates",i:0.00164484268358168,a:"To enable TLS/SSL-encryption, you must set the TLS/SSL server certificate file that the Solace PubSub+ event broker is to use. This server certificate is presented to clients during TLS/SSL handshakes. The server certificate must be an x509v3 certificate and include a private key. The server ..."},"701":{y:0,u:"../Security/Managing-Certificate-Authorities.htm",l:-1,t:"Configuring Certificate Authorities",i:0.00273257974535853,a:"This section provides basic information that will help you configure  certificate authorities (CA)s and manage certificate revocation checking for client authentication. Enabling or Disabling the Standard Domain Validation Certificate Authorities List The standard domain validation CAs list is a ..."},"702":{y:0,u:"../Security/Configuring-OCSP-Certificate-Revocation.htm",l:-1,t:"Configuring OCSP Certificate Revocation Checking",i:0.00150460486611561,a:" To configure a Solace PubSub+ event broker to use a certificate authority (CA) with Open Certificate Status Protocol (OCSP) revocation checking, complete the following steps: Step 1: Review Prerequisites  Step 2: Configure Certificate Authorities Step 3: Configure OCSP Parameters  Step 4: Enable ..."},"703":{y:0,u:"../Security/Configuring-CRL-Certificate-Revocation.htm",l:-1,t:"Configuring CRL Certificate Revocation Checking",i:0.00150460486611561,a:"To configure a Solace PubSub+ event broker to use a certificate authority (CA) with Certificate Revocation List (CRL) revocation checking, complete the following steps: Step 1: Review Prerequisites  Step 2: Configure Certificate Authorities Step 3: Configure CRL Parameters Step 4: Enable ..."},"704":{y:0,u:"../Security/Configuring-OCSP-CRL-Certificate-Revocation.htm",l:-1,t:"Configuring OCSP-CRL Certificate Revocation Checking",i:0.00108952228937467,a:"To configure a Solace PubSub+ event broker to use a certificate authority (CA) with a combination of OCSP-CRL certificate revocation checking, complete the following steps: Step 1: Review Prerequisites  Step 2: Configure Certificate Authorities Step 3: Configure OCSP and CRL Parameters Step 4: ..."},"705":{y:0,u:"../Security/Monitoring-Certificate-Authorities.htm",l:-1,t:"Viewing Certificate Authorities",i:0.000186010773760665,a:"You can use the following show commands to view information about the certificate authority (CA) configuration on the event broker. Standard Domain Validation Certificate Authorities To view the standard domain validation CA configuration, enter the following command: solace\u003e show ..."},"706":{y:0,u:"../Security/TLS-SSL-Service-Connections.htm",l:-1,t:"TLS/SSL Service Connections",i:0.000733885552530974,a:"This section provides the general steps that are required to enable TLS/SSL-encrypted communication links for the following use cases: Publishing and Receiving Messages By default, when a client messaging application connects to an event broker, that connection is unsecured. However, a client ..."},"707":{y:0,u:"../Security/Configuring-TLS-Service-Connect-Settings.htm",l:-1,t:"Configuring TLS Service Connection Settings",i:0.000186010773760665,a:"The PubSub+ event broker supports TLS 1.2. Support for TLS 1.1  and (for appliances only) TLS 1.0 can be enabled for backward compatibility with your existing applications. However, this is not recommended, and TLS 1.1 and TLS 1.0 are disabled by default for enhanced security. To allow TLS 1.1 ..."},"708":{y:0,u:"../Security/Configuring-CRIME-Exploit-Protect.htm",l:-1,t:"Configuring CRIME Exploit Protection",i:0.000461422662878956,a:"CRIME ( Compression Ratio Info-Leak Made Easy ) is a security exploit that can be used to guess the content of messages that are being compressed and sent over a TLS connection. On such connections, the event broker protects against CRIME attacks by resetting the compression engine on a per-message ..."},"709":{y:0,u:"../Security/Configuring-Server-Cert-Validation.htm",l:-1,t:"Configuring Server Certificate Validation Settings",i:0.00143890672683678,a:"You can configure server certificate validation settings to make certificate validation more secure or less secure. These settings are used for validating the server certificate that is passed from a remote event broker to the local event broker during a TLS/SSL handshake. Certificate validation ..."},"710":{y:0,u:"../Security/Configuring-Cipher-Suites-for-Inbound-Connections.htm",l:-1,t:"Configuring Cipher Suites for Inbound Connections",i:0.000630284905628262,a:"Learn how to configure Cipher Suites for inbound connections."},"711":{y:0,u:"../Security/Enabling-TLS-Downgrade.htm",l:-1,t:"Enabling TLS/SSL Connection Downgrades on Message VPNs",i:0.000213133053867651,a:" If you want client connections to use TLS/SSL encryption to protect the clientsʼ credentials, but for performance reasons you do not want to encrypt the data that is transmitted after the clients are authenticated and authorized, you can use the TLS/SSL client connection downgrade option. The ..."},"712":{y:0,u:"../Security/Re-establish-Secure-Connects.htm",l:-1,t:"Re-establishing Secure Connections After MessageBroker Failovers",i:0.000186010773760665,a:"When high-availability (HA) redundant event brokers are used, and an event broker failover occurs, the amount of time required to reconnect clients significantly increases..."},"713":{y:0,u:"../Security/Monitoring-TLS-SSL-Service.htm",l:-1,t:"Monitoring TLS/SSL Configuration and Connections",i:0.00131470588785924,a:"There are a number of show commands that you can use to validate and monitor TLS/SSL configuration and connections on Solace PubSub+ event brokers: Show SSL Certificate Files Show SSL Server Certificate Show SSL Supported Cipher Suites Show SSL Cipher Suite List Show Stats SSL Monitoring TLS/SSL ..."},"714":{y:0,u:"../API/Connectors/Connectors.htm",l:-1,t:"Micro-Integrations, Connectors, and Integrations",i:0.000226588360333023,a:"Solace supports a wide range of micro-integrations, connectors, and integrations that enable you  get events flowing across your PubSub+ event brokers. Information about connectors can be found on the PubSub+ Integration Hub ( https://solace.com/integration-hub/ ). You\u0027ll find information for ..."},"715":{y:0,u:"../Micro-Integrations/Managed/managed-micro-integrations-overview.htm",l:-1,t:"PubSub+ Cloud-Managed Micro-Integrations ",i:0.000305705290167678,a:"Cloud-Managed Micro-Integrations is not enabled by default. To enable Micro-Integrations in your account, please  contact Solace . Micro-integrations are small, lightweight, event-driven integration modules that connect enterprise technologies (legacy and SaaS applications, messaging services, ..."},"716":{y:0,u:"../Micro-Integrations/Managed/discover-micro-integrations-available.htm",l:-1,t:"Discovering Micro-Integrations in PubSub+ Cloud",i:0.000711225275799574,a:"On the Micro-Integrations page in the PubSub+ Cloud Console, you can  find new Micro-Integrations to create or find existing Micro-Integrations that have been created to manage.  The discovery feature in the Cloud-Managed Micro-Integrationss console helps you to:   Search for a specific ..."},"717":{y:0,u:"../Micro-Integrations/Managed/create-micro-integration.htm",l:-1,t:"Designing Micro-Integrations",i:0.000600558895806939,a:"You can create two types of  Micro-Integrations between a PubSub+ event broker service and your external system:  Target Micro-Integrations—Data flows from the event broker service through the Micro-Integration to the external system.  SourceMicro-Integrations—Data flows from an external system ..."},"718":{y:0,u:"../Micro-Integrations/Managed/create-micro-integration-details.htm",l:-1,t:"Configuring Common and Vendor-Specific Parameters",i:0.000338694869079556,a:"When you configure your Micro-Integration when you create or edit it, you configure parameters based on the Micro-Integration Type that you\u0027re using. For information for either the source or target Micro-Integrations, see the following vendor-specific parameters: Amazon SNS Amazon SQS Azure Service ..."},"719":{y:0,u:"../Micro-Integrations/Managed/configure-event-broker-service.htm",l:-1,t:"Configuring Event Broker Service Connection Details for Micro-Integrations",i:0.000338694869079556,a:"You must configure the connection details between your Micro-Integration and event broker service. This includes defining the location, authentication method, and destination details. Most of the connection details  are the same for both source and target Micro-Integrations, however, you configure ..."},"720":{y:0,u:"../Micro-Integrations/Managed/authentication-mi.htm",l:-1,t:"Configuring Authentication for Micro-Integration Connectivity to Event Broker Services",i:0.000491019306331574,a:"The Micro-Integrations you create use basic authentication by default when establishing Messaging Connectivity with event broker services. You can choose to configure more advanced authentication options for your Micro-Integrations, including client certificate and OAuth authentication. Configuring ..."},"721":{y:0,u:"../Micro-Integrations/Managed/create-message-headers.htm",l:-1,t:"Configuring Message Headers",i:0.00187939278655111,a:"In general, the source  message header is propagated through the Micro-Integration to the target message header. When you configure the Micro-Integration, you can optionally configure mappings for the header information between the external system and the PubSub+event broker service.  If you want to ..."},"722":{y:0,u:"../Micro-Integrations/Managed/manage-micro-integrations.htm",l:-1,t:"Managing Micro-Integrations",i:0.000758847707008124,a:"After you have created, you can perform actions to change it states, such as moving it from deployed to undeployed. You can also manage the Micro-Integration by modify the configuration settings as required. After making modifications, you can update and redeploy the Micro-Integration. To manage the ..."},"723":{y:0,u:"../Micro-Integrations/Managed/upgrades-micro-integrations.htm",l:-1,t:"Upgrading Micro-Integrations",i:0.000237981020541505,a:"Solace performs  automatic upgrades for Micro-Integrations in PubSub+ Cloud. If an upgrade occurs to a Micro-Integration, you can see a record of the upgrade as an audit log. Audit logs of category INTEGRATION are for actions that occur to your Micro-Integrations. For more information about audit ..."},"724":{y:0,u:"../Micro-Integrations/Managed/managed-micro-integrations-troubleshooting.htm",l:-1,t:"Troubleshooting Micro-Integrations",i:0.00267262999611525,a:"  If you have any issues that don\u0027t allow you to deploy your Micro-Integration, you can view the error logs for your Micro-Integration and troubleshoot, otherwise you can contact Solace. For information about viewing the error logs, see  Viewing the Error Logs . Viewing the Error Logs You can view ..."},"725":{y:0,u:"../API/Connectors/Self-Contained-Connectors/self-contained-connectors.htm",l:-1,t:"PubSub+ Self-Contained Connectors",i:0.000267551919865584,a:"In many cases, external data is not always available in a form that is compatible for an event-driven architecture. Things like databases, filesystems, and SaaS applications need to be event-enabled to integrate with your  event-driven architecture and connect to PubSub+ event brokers. For example: ..."},"726":{y:0,u:"../API/Connectors/Self-Contained-Connectors/Connector-Manager/connector-manager.htm",l:-1,t:"PubSub+ Connector Manager for PubSub+ Self-Contained Connectors",i:0.00381029107966086,a:"As you have your PubSub+ Self-Contained Connectors running, managing and monitoring them is crucial to ensure the smooth functioning of your data pipeline. PubSub+ Connector Manager  fills in this gap to facilitate this. The Connector Manager: acts as a central configuration source for all  PubSub+ ..."},"727":{y:0,u:"../API/Connectors/Self-Contained-Connectors/Connector-Manager/connector-manager-example.htm",l:-1,t:"PubSub+ Connector Manager Example",i:0.000186010773760665,a:"PubSub+ Connector Manager is distributed with a few examples (sample configurations and shell scripts), allowing you to start and run the Connector Manager together with different PubSub+ Self-Contained Connectors  with minimum effort.  This section provides step-by-step instructions on how to run ..."},"728":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Overview.htm",l:-1,t:"Connector for Amazon SNS",i:0.000208752858159353,a:"The Solace PubSub+ Connector for Amazon SNS bridges data between a Solace PubSub+ event broker and a  Amazon Simple Notification Service (Amazon SNS)  notification service. The Connector for Amazon SNS provides you (as an operator) a flexible and efficient way to integrate Amazon SNS application ..."},"729":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Getting-Started.htm",l:-1,t:"Getting Started with the Connector for Amazon SNS",i:0.000531654148191583,a:"Presuming you’re using the default application.yml file provided within the download, follow one of the quick starts below to connect a PubSub+ event broker and an  Amazon SNS . The quick starts use default credentials as examples to get started  with one workflow enabled, workflow 0. Where: ..."},"730":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-container-configuration.htm",l:-1,t:"Modifying the Container Configuration",i:0.00369409152715054,a:"You can further configure the connector container. You can either modify the provided sample or create a custom application.yml or application.properties file in the configdirectory containing the properties required for the connector. To use the connector in a container:  Ensure you have the  ..."},"731":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Datapath-Configuration-Overview.htm",l:-1,t:"Configuring the Datapath for the Connector for Amazon SNS",i:0.000230370993649764,a:"You can configure data flows between an Amazon SNS and a PubSub+ event broker. The following aspects to configure are as follows: The connection details of the event broker and the Amazon SNS, see  Configuring Connection Details  . The input and output details, and the number of workflows, see  ..."},"732":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Configuring-Connection-Details.htm",l:-1,t:"Configuring Connection Details ",i:0.00145735161784993,a:" Solace PubSub+ Connection Details The Spring Cloud Stream Binder for PubSub+ uses  Spring Boot Auto-Configuration for the Solace Java API  to configure its session. In the application.yml, this typically is configured as follows: \nsolace:\n  java:\n    host: tcp://localhost:55555\n    msg-vpn: ..."},"733":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Enabling-Workflows.htm",l:-1,t:"Enabling Workflows",i:0.000218646834154958,a:"The provided application.yml enables workflow 0 and 1. To enable additional workflows, define the following properties in the application.yml, where \u003cworkflow-id\u003e is a value between [0-19]: \nspring:\n  cloud:\n    stream:\n      bindings: # Workflow bindings\n\t input-\u003cworkflow-id\u003e:\n\t   destination: ..."},"734":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/User-configured-header-transforms.htm",l:-1,t:"User-Configured Header Transforms",i:0.000590348348996624,a:"Generally, the consumed message’s headers are propagated through the connector to the output message. If you want to transform the headers, then you can do so as follows: \n# \u003cworkflow-id\u003e : The workflow ID ([0-19])\n# \u003cheader\u003e : The key for the outbound header\n# \u003cexpression\u003e : A SpEL expression which ..."},"735":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/User-configured-payload-transforms.htm",l:-1,t:"User-Configured Payload Transforms",i:0.000218646834154958,a:"Message payloads going through a workflow can be transformed using a Spring Expression Language (SpEL) expression as follows: # \u003cworkflow-id\u003e : The workflow ID ([0-19])\n# \u003cexpression\u003e : A SpEL expression\n                ..."},"736":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Message-Headers.htm",l:-1,t:"Message Headers",i:0.000218646834154958,a:"Solace and Amazon SNS message headers can be created or manipulated using the  User-Configured Header Transforms    feature. Solace Headers Solace headers exposed to the connector are documented within the  Spring Cloud Stream Binder for Solace PubSub+   documentation. Reserved Message Headers The ..."},"737":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Dynamic-Producer-Destinations.htm",l:-1,t:"Dynamic Producer Destinations",i:0.000218646834154958,a:"To route messages to dynamic destinations at runtime, use the  User-Configured Header Transforms    feature to set the following headers: Setting the scst_targetDestination header under solace.connector.default.workflow.transform-headers may  not  be  possible if all workflows do not follow the same ..."},"738":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Connector-Management-Deploymentment-Overview.htm",l:-1,t:"Configuring the Management and Deployment of the Connector for Amazon SNS",i:0.000230370993649764,a:"You can configure how management and deployment details of the Connector for Amazon SNS. You can choose to use a centralized configuration source for  the connector using  PubSub+ Connector Manager for PubSub+ Self-Contained Connectors  or configure the source locally. As part of configuring the ..."},"739":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Management-and-Monitoring.htm",l:-1,t:"Management and Monitoring the Connector",i:0.000203812261248461,a:"Monitoring the Connector’s States The PubSub+ connector provides an ability to monitor its internal states through exposed endpoints provided by  Spring Boot Actuator . An actuator shares information through the endpoints reachable over HTTP/HTTPS. The endpoints that are available are configured in ..."},"740":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Health.htm",l:-1,t:"Health",i:0.000203812261248461,a:"The connector reports its health status using the  Spring Boot Actuator health endpoint . To configure the information returned by the health endpoint, configure the following properties: management.endpoint.health.show-details management.endpoint.health.show-components  For more information about ..."},"741":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Leader-Election.htm",l:-1,t:"Redundancy Configuration",i:0.000203812261248461,a:"The connector has three leader election modes for redundancy: Operators can configure the leader election mode by setting the following configuration: \nsolace.connector.management.leader-election.mode\n=(standalone|active_active|active_standby)\n Leader Election Modes: Standalone and Active-Active ..."},"742":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Workflow-Management.htm",l:-1,t:"Workflow Management",i:0.000203812261248461,a:"Workflow Management Endpoint A custom workflows management endpoint using  Spring Actuator  is provided to manage workflows.  To enable the workflows management endpoint: management: \n  endpoints:\n    web:\n      exposure:\n        include: \"workflows\"\n Once the workflows management endpoint is ..."},"743":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Metrics.htm",l:-1,t:"Managing Metrics",i:0.000203812261248461,a:"This connector uses  Spring Boot Metrics  that leverages Micrometer to manage its metrics. Connector Meters In addition to the meters already provided by the Spring framework, this connector introduces the following custom meters: The solace.connector.process meter with result=failure is not a ..."},"744":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Security.htm",l:-1,t:"Security",i:0.000354448577020692,a:"Securing Endpoints Exposed Management Web Endpoints There are many endpoints that are automatically enabled for this connector. For a comprehensive list, see  Management and Monitoring Connector .  The health endpoint only returns the root status by default–basically there no health details ..."},"745":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Consuming-Object-Messages.htm",l:-1,t:"Consuming Object Messages",i:0.000203812261248461,a:"For the connector to process object messages, it requires access to the classes that define the object payloads. Assuming that your payload classes are in their own projects, and are packaged into their own JAR files, place these JAR files and their dependencies (if any) onto the connector’s ..."},"746":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/Adding-External-Libraries.htm",l:-1,t:"Adding External Libraries",i:0.000203812261248461,a:"The connector\u0027s JAR file uses the loader.path property as the recommended mechanism for adding external libraries to the connector’s classpath. See  Spring Boot - PropertiesLauncher Features  for more information. To add libraries to the connector’s container image, see  Modifying the Container ..."},"747":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Configuration.htm",l:-1,t:"Connector Configuration",i:0.000354448577020692,a:"Providing Configuration For information about  about how the connector detects configuration properties, see  Spring Boot: Externalized Configuration . Converting Canonical Spring Property Names to Environment Variables For information about converting the Spring property names to environment ..."},"748":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SNS/AWSSNS-Asynchronous-Publishing.htm",l:-1,t:"Asynchronous Publishing",i:0.000203812261248461,a:"This connector does not support asynchronous publishing. Publish acknowledgments are resolved synchronously for all workflows regardless of the configuration option that you set:  \u003cworkflow-id\u003e : The workflow ID ..."},"749":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SQS/AWSSQS-Overview.htm",l:-1,t:"Connector for Amazon SQS",i:0.000208752858159353,a:"The Solace PubSub+ Connector for Amazon SQS bridges data between a Solace PubSub+ event broker and an  Amazon Simple Queue Service (Amazon SQS) message queuing service . The Connector for Amazon SQS provides you (as an operator) a flexible and efficient way to integrate  Amazon SQS  application data ..."},"750":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SQS/AWSSQS-Getting-Started.htm",l:-1,t:"Getting Started With the Connector for Amazon SQS",i:0.000492587022232857,a:"Presuming you’re using the default application.yml file provided within the download, follow one of the quick starts below to connect a PubSub+ event broker and an  Amazon SQS . The quick starts use default credentials as examples to get started with two workflows enabled, workflow 0 and workflow 1. ..."},"751":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SQS/AWSSQS-container-configuration.htm",l:-1,t:"Modifying the Container Configuration",i:0.00398074607301553,a:"You can further configure the connector container. You can either modify the provided sample or create a custom application.yml or application.properties file in the configdirectory containing the properties required for the connector. To use the connector in a container:  Ensure you have the  ..."},"752":{y:0,u:"../API/Connectors/Self-Contained-Connectors/AWS-SQS/AWSSQS-Datapath-Configuration-Overview.htm",l:-1,t:"Configuring the Datapath for the Connector for Amazon SQS",i:0.000230370993649764,a:"You can configure data flows between an Amazon SQS and a PubSub+ event broker. The following aspects to configure are as follows: The connection details of the event broker and the Amazon SQS, see   Configuring Connection Details . The input and output details, and the number of workflows, see   ..."},});