<?xml version="1.0"?>
<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-searchable="False" data-mc-toc-path="[%=Product-Names.cloud_product_titlecase%]|[%=System.LinkedTitle%]" data-mc-conditions="Default.NotForPDF" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="robots" content="noindex, nofollow"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png"/>
    <meta charset="utf-8"/>
    <meta http-equiv="Cache-control" content="no-cache"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <title>PubSub+ Event Portal 1.0</title>
    <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" /> -->
    <!--style to display feedback button correctly in IE-->
    <!-- Google Tag Manager -->
    <!-- End Google Tag Manager -->
    <!-- links to get the EDA styling to work -->
    <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Resources/Stylesheets/MainStyles.min.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <style>@media screen and (min-width: 0\0)
{
	.feedback-button
	{
		margin-right: -40px;
		top: 50%;
		border-radius: 9px 9px 0px 0px;
	}

	#canvas
	{
		position: relative;
	}
}

@media print
{
	#plugin
	{
		overflow: visible !important;
	}
}

</style>
    <link href="../../Resources/Stylesheets/eda_styles.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,300" rel="stylesheet" type="text/css"/>
    <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" data-mc-stylesheet-type="table"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png"/>
    <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
    <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    <script src="https://cmp.osano.com/AzZrhlTmT5f216Foa/84ba7dc4-a4e5-4b02-b120-977eb6f052d4/osano.js">
        </script>
    <script type="text/javascript">/*<![CDATA[*/(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KLSDFH');
		/*]]>*/</script>
    <script type="text/javascript" src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
  </head>
  <!-- Top Orange and Darkgrey header-->
  <!-- Div for EDA banner -->
  <div class="eda_banner">
    <p>Register Now for EDA Summit 2024 - Virtual Event <a href="https://edasummit.com/" target="_blank">Register for Free</a></p>
  </div>
  <!-- end Div for EDA banner -->
  <div class="top-nav">
    <div class="main_list">
      <ul class="top-navlinks">
        <li>
          <a href="https://solace.com/support/" target="_blank">Support</a>
        </li>
        <li>
          <a href="https://solace.com/contact/" target="_blank">Contact Us</a>
        </li>
      </ul>
    </div>
    <div class="container-fluid">
      <div class="src-li">
        <div id="srchWrapTwo">
          <form class="search" action="#">
            <div class="search-bar search-bar-container needs-pie">
              <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
              <div class="search-filter-wrapper">
                <span class="invisible-label" id="search-filters-label">Filter: </span>
                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                </div>
                <div class="search-filter-content" id="sf-content">
                  <ul>
                    <li>
                      <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                        <span id="filterSelectorLabel-00001">All Files</span>
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
              <div class="search-submit-wrapper" dir="ltr">
                <div class="search-submit" title="Search" role="button" tabindex="0">
                  <span class="invisible-label">Submit Search</span>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
      <span class="tool-tip" tooltip-position="left" tooltip="To search for CLI commands, events, or APIs, navigate to the related sections.">i</span>
      <!-- Sept. 28, 2022 - This is being moved to under div class= top-nav
			<div class="main_list">
				<ul class="top-navlinks">
					<li><a href="https://solace.com/support/" target="_blank">Support</a></li>
					<li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li>
				</ul>
			</div> -->
    </div>
    <!-- Sept. 27, 2022 - The commented out content below used to provide the products, company, etc., links in the top header, next to the search field. -->
    <!-- <div class="main_list"><ul class="top-navlinks"><li><a href="https://solace.com/products/" target="_blank">Products</a></li><li><a href="https://solace.com/company/" target="_blank">Company</a></li><li><a href="https://www.solace.dev/" target="_blank">Developers</a></li><li><a href="https://solace.com/support/" target="_blank">Support</a></li><li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li></ul></div> -->
  </div>
  <body>
    <div class="foundation-wrap off-canvas-wrapper">
      <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
        <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
          <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
        </aside>
        <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
          <div data-sticky-container="" class="title-bar-container">
            <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1000px)" data-mc-ignore="true">
              <a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
              <div class="middle title-bar-section outer-row clearfix">
                <div class="menu-icon-container relative clearfix">
                  <div class="central-account-wrapper">
                    <div class="central-dropdown">
                      <a class="central-account-drop">
                        <span class="central-account-image"/>
                        <span class="central-account-text">Account</span>
                      </a>
                      <div class="central-dropdown-content">
                        <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                        <hr class="central-separator"/>
                        <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                      </div>
                    </div>
                  </div>
                  <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas">
                    <span/>
                  </button>
                </div>
              </div>
              <div class="title-bar-layout outer-row">
                <div class="logo-wrapper">
                  <a class="logo" href="../../index.html" alt="Logo"/>
                </div>
                <div class="navigation-wrapper nocontent">
                  <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                    <li class="placeholder" style="visibility:hidden">
                      <a>placeholder</a>
                    </li>
                  </ul>
                </div>
                <div class="central-account-wrapper">
                  <div class="central-dropdown">
                    <a class="central-account-drop">
                      <span class="central-account-image"/>
                      <span class="central-account-text">Account</span>
                    </a>
                    <div class="central-dropdown-content">
                      <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                      <hr class="central-separator"/>
                      <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                    </div>
                  </div>
                </div>
                <div class="nav-search-wrapper">
                  <div class="nav-search row">
                    <form class="search" action="#">
                      <div class="search-bar search-bar-container needs-pie">
                        <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
                        <div class="search-filter-wrapper">
                          <span class="invisible-label" id="search-filters-label">Filter: </span>
                          <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                          <div class="search-filter-content" id="sf-content">
                            <ul>
                              <li>
                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                                  <span id="filterSelectorLabel-00001">All Files</span>
                                </button>
                              </li>
                            </ul>
                          </div>
                        </div>
                        <div class="search-submit-wrapper" dir="ltr">
                          <div class="search-submit" title="Search" role="button" tabindex="0">
                            <span class="invisible-label">Submit Search</span>
                          </div>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </nav>
          </div>
          <div class="main-section">
            <div class="row outer-row sidenav-layout">
              <nav class="sidenav-wrapper">
                <div class="sidenav-container">
                  <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                </div>
              </nav>
              <div class="body-container">
                <div data-mc-content-body="True">
                  <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic Print NextTopic;">
                    <div class="button-group-container-left">
                      <button class="button needs-pie print-button" title="Print">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Print">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie previous-topic-button" title="Navigate previous topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie next-topic-button" title="Navigate next topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                  <!-- Google Tag Manager (noscript) -->
                  <noscript>
                    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLSDFH" height="0" width="0" style="display:none;visibility:hidden"/>
                  </noscript>
                  <!-- End Google Tag Manager (noscript) -->
                  <div id="content">
                    <div id="contentBody">
                      <div class="row collapse">
                        <div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="ContentRow">
                          <div>
                            <div xmlns="" class="nocontent">
                              <div class="MCBreadcrumbsBox_MCBreadcrumbsSelf_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="4" data-mc-toc="True">
                                <span class="MCBreadcrumbsPrefix"> </span>
                              </div>
                            </div>
                            <div xmlns="" role="main" id="mc-main-content">
                              <h1 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="aanchor204"/><MadCap:concept term="Cloud"/><MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span></MadCap:conditionalText><span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> 1.0</h1>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="mc-variable Product-Names.eventportal_product_long variable">PubSub+&#xA0;Event Portal</span> is an event management tool&#x2014;presented through an accessible Web user interface (UI)&#x2014;that enables you to design, discover, visualize, share, and manage various aspects of your event-driven architecture (EDA). </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A key benefit of using  <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> is its ability to track the relationships that exist in an extremely decoupled event-driven architecture (EDA). It enables the reuse of schemas and events, and graphically presents the relationships that exist between applications and events. </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Furthermore, as an <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> user, you can model your event-driven architecture (EDA) in different operational environments. <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> allows for environment separation, in the same way how the event broker services are separated within enterprises. This means you can create a different cloud console or <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> account for each environment within enterprise. You can then create and grant different user access permissions for each of these environments, and use that to model your EDAs as they progress from one environment to the next.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To get started, let's first understand the <a href="#Foundati" class="MCXref xref">Foundational Elements of Event Portal</a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Foundati"/>Foundational Elements of <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span></h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">When designing an event-driven architecture (EDA), it is essential to model the enterprise or interworking systems as a whole, which means dividing it into smaller, more manageable pieces. Once broken down into what the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> defines as an Application Domain, within each application domain, you can create a set of event-driven entities or objects (schemas, events and applications) which represent the runtime interactions.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following are the four foundational elements of the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <a href="#Applicat" class="MCXref xref">Application Domain</a>
                                </li>
                                <li>
                                  <a href="#Schema" class="MCXref xref">Schema</a>
                                </li>
                                <li>
                                  <a href="#Event5" class="MCXref xref">Event</a>
                                </li>
                                <li>
                                  <a href="#Applicat2" class="MCXref xref">Application</a>
                                </li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Schemas, Events, and Applications are often referred to as objects in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Applicat"/>Application Domain</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An application domain represents a namespace where applications, events, and schemas can live. Application domains are useful to decompose the enterprise and create organizational boundaries within which teams can work. Within the application domain, you can create a suite of applications, events and schemas that are isolated from other application domains. This provides a way to create independent event-driven architectures for different products. You can also <a href="#Shared" class="link-internal">share events and schemas</a> across application domains enabling the integration of events and data between different organizational groups, in a controlled and governed manner. The use of one or more application domains provides a way to organize and create event-driven architectures for different teams, groups or lines of business within the organization. Organizations should determine the best use of application domains based on their organizational structure and architectural goals.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An application, event and schema can only belong to one application domain for organizational ownership reasons. An event and schema can be marked as &#x201C;shared&#x201D; to enable their use across application domain boundaries. This enables the users of the application domain to more strictly govern those events that are exposed externally to their application domain while maintaining agility in terms of the ability to make changes to those events which are contained within the application domain.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Furthermore, application domains define a topic domain. For all the events in the application domain, the topics defined for these events should be named with the topic domain at the beginning of the topic address. For example, if a topic domain is defined as <code>solace/weather</code>, then an event in that application domain may be named <code>solace/weather/blizzard/started</code>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Schema"/>Schema</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">In simple terms, a schema represents the contract to describe the payload of an event. Producers and consumers of an event can trust that the event's payload matches the schema definition assigned to that event. Schemas define a type of payload through JSON, AVRO, XML, Binary, or Text. JSON, AVRO, and XML schemas have content that describes each property of the schema. The content is either in JSON or AVRO Schema format, or XSD/DTD format.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Furthermore, you can search and view JSON schemas in a more <a href="event-portal-designer.htm#Viewing" class="link-internal">human-readable</a> format along with the actual schema source. This makes it easy for users to easily read, browse, and understand the schema contents without going through the source.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Event5"/>Event</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The event represents a business moment or an action that can be communicated with zero or more interested applications. The event is where you define metadata that describes and categorizes the event. An event is produced on a specific topic that must be defined for that event. From a modelling perspective, events reference payload schemas, and events are referenced by applications, thus forming the glue that binds applications together.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">It is important to note that an event (or an <i>event type</i>), as referred to in the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> is different from an <i>event instance</i>. For more information on this topic, refer to <a href="#Event4" class="MCXref xref">Event Type vs Event Instance</a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Applicat2"/>Application</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An application represents a piece of software that produces and consumes events. Applications connect to the event broker in an event-driven architecture and communicate with other applications via events. A single application represents a class of applications that are running the same code base; therefore, there is no need to create multiple applications for each instance in a cluster.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">When creating an application, you can specify the Application Type: Standard or Kafka Connector. </p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li><b>Standard</b>: A standard application that connects to an event mesh.</li>
                                <li><b>Kafka Connector</b>: A Kafka Connector is used for moving data into Kafka from other systems and out of Kafka into other systems.</li>
                              </ul>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Kafka"/><MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">Solace </MadCap:conditionalText>to Kafka Connectors</h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> A connector is used in Kafka for connecting Kafka brokers with external systems to stream data into or out of Apache Kafka. In the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, a Kafka Connector is an application class you select to configure associated published and/or subscribed events and a set of Kafka-native attributes.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There are two sets of <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">Solace</MadCap:conditionalText>  to Kafka connectors. Both these sets are comprised of a Source connector and a Sink connector to support bi-directional flow, although both connectors are not required. .</p>
                              <dl xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <dt><MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">Solace</MadCap:conditionalText>-Kafka Sink Connector</dt>
                                <dd>The <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">Solace</MadCap:conditionalText>-Kafka sink connector consumes Kafka records and publishes them as<MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"> Solace</MadCap:conditionalText>  events.</dd>
                                <dd>
                                  <img class="img-border" src="../../Resources/Images/Event-Portal/solace-kafka-sink-connector.png" alt=" "/>
                                </dd>
                                <dd>The following objects and relationships are discovered:</dd>
                                <dd><span class="mc-variable Product-Names.cloud_product_short variable">PubSub+ Cloud</span><![CDATA[                ]]></dd>
                              </dl>
                              <dl xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <dd class="orderded">Logical Event Mesh
            </dd>
                                <dd class="orderded">
                the topics and queues that the events are published to
            </dd>
                                <dd><![CDATA[
                ]]><u>Kafka
</u><![CDATA[            ]]></dd>
                                <dd class="orderded">
               Logical Event Mesh
            </dd>
                                <dd class="orderded">
                topics
            </dd>
                                <dd class="orderded">
                schemas
            </dd>
                                <dd class="orderded">
                the sink connector
            </dd>
                                <dd class="orderded">
               consumer group for the connector (along with the associated topic subscriptions)            </dd>
                              </dl>
                              <dl xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <dt><MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">Solace</MadCap:conditionalText>-Kafka Source Connector</dt>
                                <dd>The Solace-Kafka source connector consumes Kafka records and publishes them as Solace events.</dd>
                                <dd>
                                  <img class="img-border" src="../../Resources/Images/Event-Portal/solace-kafka-source-connector.png" alt=" "/>
                                </dd>
                                <dd>The following objects and relationships are discovered:</dd>
                                <dd>
                                  <u>
                                    <span class="mc-variable Product-Names.pubsub_brand_only variable" data-mc-conditions="SAP.SapHideFromOutput">PubSub+</span>
                                  </u>
                                </dd>
                                <dd class="orderded">Logical Event Mesh</dd>
                                <dd class="orderded">the topics and queues (and associated subscriptions) used as input to the connector</dd>
                                <dd class="orderded">connector client (and associated subscriptions)</dd>
                                <dd><u>Kafka
Discovery</u><![CDATA[           ]]></dd>
                                <dd class="orderded">Logical Event Mesh</dd>
                                <dd class="orderded">topics</dd>
                                <dd class="orderded">schemas</dd>
                                <dd class="orderded">the connector (along with the list of topics the connector is publishing to)</dd>
                              </dl>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To learn more about Kafka connector, refer to the discussion on connectors in <a href="https://kafka.apache.org/documentation/#connect_overview" target="_blank" class="link-offsite">Kafka's documentation</a>. Refer to  <a href="event-portal-discovery.htm#ep-discovery-workflow-add-connector" class="MCXref xref">Adding Connectors to an Application Domain</a> to learn how it's supported in the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Event6"/><span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> Tools</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Use these tools to create, design, manage, discover, visualize, and share all events within your ecosystem.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a href="event-portal-discovery.htm" class="MCXref xref">Discovery</a>: Discover and visualize events your event driven architecture from your event brokers. 
            Initial support is for discovery and the import of events, schemas, and application interactions from Apache Kafka, Confluent, and Amazon MSK.  Support for additional brokers types will follow.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a href="event-portal-designer.htm" class="MCXref xref">Designer</a>: Design and view all aspects of your event-driven architecture.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a href="event-portal-catalog.htm" class="MCXref xref">Catalog</a>: Browse for events, schemas, and applications defined in your environment using a searchable, sortable, and filterable interface.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a href="event-api-products.htm" class="MCXref xref">Event API Products (Beta)</a> : Bundle your events and make them available as Event API Products.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Logical"/>Logical Event Mesh</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A Logical Event Mesh (LEM) represents the <a href="../Event-Mesh/Mesh-Builder.htm" class="link-internal">event mesh</a> over which the associated published and subscribed events flow within an event-driven architecture. For event broker services, a LEM represents a Message VPN or a set of Message VPNs connected via DMR or MNR links. For Kafka brokers a LEM represents a Kafka broker cluster. Each LEM has a set of <a href="#Topic" class="link-internal">topic addresses</a> which are registered as published and/or subscribed to by applications connected to that event mesh. Based on the LEM, users can see the events that each application <a href="#Client" class="link-internal">client delivery endpoint</a> will attract through their respective subscriptions and therefore, know the events the application will be consuming in runtime, and how they will be consumed.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An organization may have one or more LEMs of the same event broker type and/or different broker types. An application may use multiple LEM at the same time; for example, an application could be using a LEM for <span class="mc-variable Product-Names.pubsub_brand_only variable" data-mc-conditions="SAP.SapHideFromOutput">PubSub+</span>  event and another for Kafka event. It's important to remember that a LEM must have a specific broker type for the event routing behaviour to be correctly modelled in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>. This allows for the associated Client Delivery Endpoint to be tailored to those specific broker types and constructs. For example, you can use consumer groups for Kafka CDEs, and Event Queues for  <span class="mc-variable Variables.CompanyName variable">Solace</span> CDEs.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The scope of a LEM for the following event broker types is as follows:</p>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">
                                  <b>
                                    <span class="mc-variable Variables.CompanyName variable">Solace</span>
                                    <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span>
                                  </b>
                                </MadCap:conditionalText>
                              </h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event brokers and </MadCap:conditionalText> <span class="mc-variable Product-Names.broker_cloud_short variable">event broker service</span>s, it represents the model of a Message VPN or a set of DMR or MNR meshed Message VPNs (an event mesh). The topic level delimiter is always a forward slash symbol (<code>/</code>).</p>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <b>Kafka</b>
                              </h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For Kafka, it represents a cluster of event brokers. That is, the mesh over which the associated published and subscribed events flow. If you have more than one Kafka Cluster, you will have one Logical Event Mesh per Cluster. The topic level delimiter is configurable and can be set to whatever the organization has decided to use. Dots (<code>.</code>) and Underscores (<code>_</code>) are commonly used.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Topic3"/>Topic Tree</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Topic Tree represents all topic addresses that will be published within a <a href="#Logical" class="MCXref xref">Logical Event Mesh</a> (LEM). The scope for a topic address is limited to the LEM in which they are targeted or published. For <span class="mc-variable Product-Names.pubsub_brand_only variable" data-mc-conditions="SAP.SapHideFromOutput">PubSub+</span> events, you can only associate one event per topic address. In other words, it cannot be published to multiple Logical Event Meshes. To model this, you will need to create a separate event with a slightly different name and the same topic address with a different associated target Logical Event Mesh. However, for Kafka-based events, you can have multiple events with the same topic address but different schemas.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The primary purpose of a topic tree is to enable the system, and therefore users to evaluate <a href="#Client" class="link-internal">Client Delivery Endpoint</a> subscriptions and determine the topic addresses (and therefore which events)  the associated consuming applications will attract. The Topic Tree inherits the topic delimiter from the Logical Event Mesh.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An organization should first define a topic hierarchy (refer to our <a href="../../Messaging/Topic-Architecture-Best-Practices.htm" class="MCXref xref">Topic Architecture Best Practices</a> guide) and then create the topic addresses based on the topic hierarchy. These addresses are placed within a bounded context of a LEM against which subscriptions can be evaluated.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Topic"/>Topic Address</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Topic Address is a set of <a href="#Topic2" class="MCXref xref">Topic Level</a> that are used to construct a topic for a published event. The events defined in the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> must have a topic address for the runtime event broker to route the events to interested parties. </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Based on the topic address, a Client Delivery Endpoint (CDE) receives the published event depending on the CDE's subscriptions. There can be zero or more CDEs with subscriptions that match an event published with the Topic Address.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An event is only available for consumption within a Logical Event Mesh if it fulfills the following requirements:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>it is targeted to a Logical Event Mesh</li>
                                <li>a topic address has been created for it</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Once the topic address is created, it will be added to the Topic Tree and evaluated against the Logical Event Mesh subscriptions.  All the appropriate event to application relationships are automatically determined and updated.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Topic2"/>Topic Level</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A topic level is a component of a topic address that can be a literal value or a variable. A variable is a placeholder that is substituted for a concrete value by publishing applications at runtime. A variable type topic level can be bounded (with a defined value set) or it can be unbounded. </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">If a topic level is static, then you can use a literal topic level to represent it. However, you could also define an enum with a specific set of values that do not have to be replaced with constrained values by applications at runtime.  Whether to use literal or variable is up to the person designing the topic address. </p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Topic </h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Topics are a means of classifying information, and in practice they're simply strings that are composed of one or more levels. For more information, refer to <a href="../../Get-Started/what-are-topics.htm" class="MCXref xref">Understanding Topics</a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Topic Subscriptions</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A&#xA0;Topic subscription is a string used to attract events that are published on an event mesh.  A topic subscription can contain wildcards, used to match multiple topics or hierarchies of topics. Wildcard characters and matching behavior vary between messaging protocols.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Client"/>Client Delivery Endpoints</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A Client Delivery Endpoint (CDE) represents  the location on an Event Mesh that is used by an application to consume events. For this to happen, the following must be defined in the CDE:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>a Logical Event Mesh for the CDE must be specified</li>
                                <li>the type of the CDE must be specified</li>
                                <li>the CDE must have subscriptions to consume events</li>
                                <li>a CDE&#xA0;can only be associated with an Application and each CDE&#xA0;can only be associated once with an Application</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A CDE is scoped to a single Logical Event Mesh, however, an application may have relationships with zero or more CDEs. In the case where the CDE represents a physical endpoint (a queue or topic endpoint; for example, in <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event broker or </MadCap:conditionalText> <span class="mc-variable Product-Names.broker_cloud_short variable">event broker service</span>), the name of the endpoint is used for the CDE.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following CDEs are currently supported in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>: </p>
                              <dl xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <dt><a name="Event"/>Event Queue</dt>
                                <dd>An Event Queue is similar to a <a href="../../Get-Started/topic-endpoints-queues.htm"><a href="../../Get-Started/topic-endpoints-queues.htm" class="link-internal" data-mc-conditions="SAP.SapHideFromOutput">Queue</a></a>, but it's specifically used for pub/sub message exchange pattern. It does not support request/reply or point-to-point message exchange patterns. </dd>
                                <dt>Durable Topic Endpoint</dt>
                                <dd>Durable topic endpoints are provisioned objects on the event broker that have a life span independent of a particular client session.<MadCap:conditionalText data-mc-conditions="SAP.SAPTempHide"> To learn more, refer to <a href="../../Messaging/Guaranteed-Msg/Endpoints.htm#Endpoint_Durability" class="MCXref xref">Endpoint Durability</a>.</MadCap:conditionalText></dd>
                                <dt>Direct Client Endpoint</dt>
                                <dd>Direct Client Endpoints are client connections with one or more subscriptions.   It is a essentially a direct messaging client&#x2014;a consuming or subscribing client without a queue or topic endpoint.</dd>
                                <dt>Consumer Group (Kafka only)</dt>
                                <dd>Client username and client name is the same as the event brokers, don't apply to Connector Groups as that concept doesn't exist in Kafka. <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> supports the concept of Kafka's consumer groups. </dd>
                                <dd>A consumer group is used by Kafka to group consumers into a logical subscriber for a topic. In <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, you can model consumer groups in  <span class="mc-variable Product-Names.ep_designer variable">Designer</span>. This enables the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>'s runtime discovery to associate a discovered consumer group to an existing application. Kafka consumers that belong to the same consumer group share a group ID. The consumers in a group divide the topic partitions, as fairly as possible, so that each consumer consumes only a single partition from the group. </dd>
                                <dd>To learn how you can set up consumer groups in the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, see <a href="event-portal-discovery.htm#Mapping" class="MCXref xref">Mapping Consumer Groups to Applications</a>. You can also visit the Kafka's documentation to learn more about <a href="https://docs.confluent.io/current/clients/consumer.html#consumer-groups" target="_blank" class="link-offsite">consumer groups</a>.</dd>
                              </dl>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Event4"/>Event Type vs Event Instance</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An <i>event type</i> (or event as it is referred to in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>) represents a class of events produced in an event-driven architecture. The event type is made up of its topic and schema that represents the allowed payload for the event.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An <i>event instance</i> is a specific instance of an event that is produced. An event instance has an event type. It conforms to the schema of the event type and is produced on a topic defined for the event type. Over the lifecycle of an application, many event instances are produced and consumed.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Shared"/>Shared Events and Schemas
        </h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">By default, you can only reference events and schemas within their own application domain. For another application domain to reference your events and schemas, the event or schema must be marked as shared. For example, imagine a situation where there are two application domains modeled in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>: the Weather Events and the Traffic Events. Say, an event is created in the Weather Events application domain called the Blizzard. Since the Traffic Events application domain should be able to consume the Blizzard event, the creator of the Blizzard marks the event as shared. Now when an application is created in the Traffic Event application domain, it can choose to publish or subscribe to the Blizzard event. If it were not marked as shared, it would not be allowed to reference by applications in the Traffic Events application domain.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule">
                                <a name="discovery-agent"/>
                                <span class="mc-variable Product-Names.discovery_agent variable">Discovery Agent</span>
                              </h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can use the <span class="mc-variable Product-Names.discovery_agent variable">Discovery Agent</span> to run a <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> scan against your event broker. The agent will connect to your event broker to scan your event-driven architecture using a specified set of topic subscriptions. The gathered data is generated as a JSON file (<span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> file), which you can upload into <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>. </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following event brokers are currently supported: Apache Kafka, Confluent, Amazon MSK, and <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><span class="mc-variable Product-Names.cloud_product_long variable">PubSub+ Cloud</span></MadCap:conditionalText></MadCap:conditionalText> <span class="mc-variable Product-Names.broker_cloud_short variable">event broker service</span>s.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can install the agent locally and use it to scan your EDA and generate a <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> file. To install the agent or learn how to run a <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> scan, refer to <a href="event-portal-discovery.htm#Installi" class="MCXref xref">Installing the Discovery Agent </a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Informat"/>Information <span class="mc-variable Product-Names.discovery_agent variable">Discovery Agent</span> Captures and Uploads</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The information the agent gathers during a <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> scan depends on the event broker type. </p>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span>
                                <span class="mc-variable Product-Names.broker_cloud_short_title variable">Event Broker Service</span>
                              </h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following data/metadata is returned in the <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> scans:</p>
                              <table xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <thead>
                                  <tr class="TableStyle-Table_Num-Head-Header1">
                                    <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Information Gathered By Agent</th>
                                    <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Broker</td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>The<MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"> event broker or </MadCap:conditionalText><span class="mc-variable Product-Names.broker_cloud_short variable">event broker service</span> information taken from the input data specified by the user, which is also uploaded in the <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> file.</p>
                                      <pre xml:space="preserve">"broker": {
"	brokerType": "solace",
	"hostname": "mySolaceHost.solace.com"
	"additionalAttributes": {
"	vpnName": "myVpnName" 
	}
}
</pre>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Clients</td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>An active or inactive messaging client in the event broker. A client has a top level attribute, which is used to indicate of the client is a consumer or his client type implies message flow direction in the context of relationships with channel objects.</p>
                                      <p> Te following client type information is captured:</p>
                                      <ul>
                                        <li>
                                          <code>clientType: Client Application</code>
                                        </li>
                                        <li>
                                          <code>clientUserName: myClientUsername</code>
                                        </li>
                                        <li>
                                          <code>clientProfleName: myClientProflleName</code>
                                        </li>
                                        <li>
                                          <code>aclProfileName: myAclProfileName</code>
                                        </li>
                                      </ul>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Channels</td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>A channel represents the event broker entities that are responsible for the transmission and storage of messages. </p>
                                      <p>The channel types include: </p>
                                      <ul>
                                        <li>Topics</li>
                                        <li> Queues</li>
                                        <li>Topic Endpoints </li>
                                      </ul>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyE-Column1-Body1">Subscriptions</td>
                                    <td class="TableStyle-Table_Num-BodyD-Column1-Body1">
                                      <p>Subscriptions represents a potentially unbounded &#x201C;channel space&#x201D; described by a set of criteria (topic strings with wildcards, routing keys, etc.)</p>
                                      <p>Subscription types</p>
                                      <ul>
                                        <li> client to topic subscription </li>
                                        <li> queue to topic subscription</li>
                                      </ul>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyB-Column1-Body1">Object Relationships</td>
                                    <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
                                      <p>The object relations represent relationship between two or more to-level objects. </p>
                                      <p>The following relationships are captured:</p>
                                      <ul>
                                        <li>
                                          <code>clientToSubscriptionRelationship</code>
                                          <li>
                                            <code>channelToSubscriptionRelationship</code>
                                          </li>
                                          <li>
                                            <code>clientToChannelRelationship</code>
                                          </li>
                                          <li>
                                            <code>channelToChannelRelationship</code>
                                          </li>
                                        </li>
                                      </ul>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Kafka Broker</h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following data/metadata is returned in the <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> scans:</p>
                              <table xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <thead>
                                  <tr class="TableStyle-Table_Num-Head-Header1">
                                    <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Information Gathered By Agent</th>
                                    <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Topics</td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">A list of topic names.</td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Connectors</td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>A list of connectors with the following configuration data:</p>
                                      <ul>
                                        <li>connector class</li>
                                        <li>connector type</li>
                                        <li>maximum thread allocation</li>
                                      </ul>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">Consumer Groups</td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>A list of consumer groups with a flag indicating if they are simple consumers.</p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyE-Column1-Body1">Schemas</td>
                                    <td class="TableStyle-Table_Num-BodyD-Column1-Body1">A list of schemas. In the case of a string schema (non-json format), the contents of the message will be included.</td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyB-Column1-Body1">Object Relationships</td>
                                    <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
                                      <p>The object relations represent relationship between two or more to-level objects. </p>
                                      <p>The following relationships are captured:</p>
                                      <ul>
                                        <li>
                                          <code>connectorToTopicAssociations</code>
                                        </li>
                                        <li>
                                          <code>consumerGroupToTopicAssociations</code>
                                        </li>
                                        <li>
                                          <code>topicToSchemaAssociations</code>
                                        </li>
                                      </ul>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Primitive-Type"/>Primitive Types</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Some message payloads consist of primitive types such as <code>String</code> and <code>Numbers</code>, rather than more complex structures (JSON or XML). <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> supports primitive event types so that you can model your events (for example, Kafka topics) with payloads that are simple primitives. Primitive types for message payloads are automatically detected in the <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span> and can be committed or imported into <span class="mc-variable Product-Names.ep_designer variable">Designer</span>. Likewise, you can also create and edit an event to use a primitive type in the <span class="mc-variable Product-Names.ep_designer variable">Designer</span>. Using AsyncAPI, you can generate an AsyncAPI specification for the application associated with an event with primitive payloads.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following primitive types are currently supported in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Avro: <code>Null</code>, <code>Boolean</code>, <code>Int</code>, <code>Long</code>, <code>Float</code>, <code>Double</code>, <code>Byte</code>, <code>String</code></li>
                                <li>JSON: <code>Null</code>, <code>Boolean</code>, <code>Number</code>, <code>String</code></li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To learn how to use a Primitive Type when designing an event, see <a href="event-portal-designer.htm#manage-events" class="MCXref xref">Managing Events</a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Multiple2"/>Multiple Record Types</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">It is common for Kafka-based applications to publish events to the event broker on the same topic that does not share the same schema. In <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, you can discover, re-discover, and stage different topics with more than one record type. In other words, topics that have multiple records with different payload schemas are discovered in <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span>. The payload schema could be JSON, Avro, XML, text, or Binary. Discovered events for the same topic are uniquely named to differentiate each event before committing them into the <span class="mc-variable Product-Names.ep_designer variable">Designer</span> as events. Once committed, the topic to schema association occurs in the backend, which can then be visualized in <span class="mc-variable Product-Names.ep_designer variable">Designer</span>.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To learn how to discover and commit your EDA into <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, refer to <a href="event-portal-discovery.htm" class="MCXref xref">Discovery</a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Tags"/>Tags</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Applications, events and schemas all have the option to have tags associated with them. Searching for a tag name in <span class="mc-variable Product-Names.ep_catalog variable">Catalog</span> will find all the objects associated with that tag.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Tags can be a great way to share information with other members of your organization by grouping sets of objects together. Here are some examples of how you can use tags:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Create a tag called <code>Java</code> and set it against all of your Java-based applications</li>
                                <li>Create a tag called <code>User</code> and tag all of your schemas related to users</li>
                                <li>Create a tag called <code>Sign in Flow</code> and tag the series of events and applications that are involved in the sign in flow for your application</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">In the future release of the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, <span class="mc-variable Product-Names.ep_designer variable">Designer</span> will have the ability to filter applications and events based on the tags applied to them. This will give another layer of customization to visualize your event-driven architectures.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Revision"/>Revision History</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> Revision history track the changes to objects in <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>. Any time an application, event or schema is updated, it creates a new revision. For schemas, you can perform additional tasks such as creating multiple versions of a particular schema and advanced version control management. Refer to <a href="#Multiple" class="MCXref xref">Schema Versions and Version Control</a> for more information.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can restore an old revision of an object at any point. The act of restoring an object to a previous revision creates a new revision of that object. For example, an object whose current revision is at Rev 2, when restored to Rev 1, will result in it having three revisions. The new Rev 3 will be the same as Rev 1 since it was restored from it.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There are few exceptions that you should consider when using the revision history of an object:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Owner and tag information of an object is not included in the revision history. Changing the owners or tags of an object will not create a new revision of the object.</li>
                                <li>
                Restoring to a revision of an object whose associations have changed will not change the associated objects. For example, imagine an event and schema that have both undergone ten revisions. At the time of the second revision of the event, the schema was on its first revision. Reverting the event to its second revision will not return the schema to its first revision, it will continue to be its tenth revision.
            </li>
                                <li>Application domains do not track revision history. Instead, if you need to revert an application domain and all of its contained objects to a point in time, it is recommended to use the import/export functionality.</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For tutorials, refer to <a href="event-portal-designer.htm#Performi" class="MCXref xref">Managing Object Revisions</a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Multiple"/>Schema Versions and Version Control</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can create schemas with our without versions. When using schema versions, you can create and store multiple versions of the same schema, which can be used in your EDAs that require two or more versions of a particular schema. Revision History is support with schema version control, such as saving revisions of each schema, viewing changes in the revisions, and reverting to an older revision.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For additional information and tutorials, see <a href="event-portal-designer.htm#Create3" class="MCXref xref">Managing Schemas</a> .</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Archive Objects and Revisions</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">When you delete an object, it will be archived for ninety days, along with its associated revisions. You can restore the deleted object and its associated revisions anytime within the ninety days.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To learn more, refer to <a href="event-portal-designer.htm#Deleting" class="MCXref xref">Deleting an Object</a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="Role-Bas"/>Role-Based Access Control (RBAC)</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> supports the ability to apply access controls to application domains through <span class="mc-variable Product-Names.ep_designer variable">Designer</span>. <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>'s role-based access control (RBAC) helps you manage who has access to applications domains and their resources and what they can do with it. For example, enterprise architects could be responsible for the entire event-driven architecture (EDA) and its assets, and therefore require Administrator or <span class="mc-variable Product-Names.ep_manager variable">Event Portal Manager</span> role to view and modify all application domains. On the other hand, application developers may be responsible for specific parts of the EDA, and therefore may only require access to view or edit one or more specific application domains. In that case, they can be assigned <span class="mc-variable Product-Names.ep_user variable">Event Portal User</span> role with Viewer, Editor or Manager level access to specific application domains. </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information on <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> RBAC, refer to <a href="event-portal-designer.htm#Creating" class="MCXref xref">Managing Application Domains</a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="AsyncAPI"/>AsyncAPI</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">AsyncAPI is an open-source initiative that seeks to improve the current state of Event-Driven Architectures (EDA). Using AsyncAPI allows development teams to create applications that communicate asynchronously through events more easily. The core of AsyncAPI is a specification that describes how to create a document that explains the inner workings of an event-driven API.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can use an AsyncAPI specification for many functions, such as:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Generating documentation</li>
                                <li>Generating code</li>
                                <li>Validating events received by your application</li>
                                <li>Applying API management policies</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Learn more about AsyncAPI on their website at <a href="https://www.asyncapi.com/" target="_blank" class="link-offsite">https://www.asyncapi.com</a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">AsyncAPI and the <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span></h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> natively supports the AsyncAPI 2.0.0 specification and applications can be exported into an AsyncAPI document. You can export applications in JSON and YAML; the two supported formats of AsyncAPI.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To learn how to generate an AsyncAPI document for an application, refer to <a href="event-portal-designer.htm#Exportin" class="MCXref xref">Generating an AsyncAPI</a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a name="REST"/>REST API</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> provides a RESTful API that you can use to manage your data in the <span class="mc-variable Product-Names.cloud_product_short variable">PubSub+ Cloud</span>. Use the REST&#xA0;API to integrate other applications, systems, or client applications with <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span>, and model or retrieve your event-driven architectures from your own client applications. </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information, refer to the <a href="Event-Portal-REST-API.htm" class="MCXref xref">Event Portal v1 REST API</a> documentation.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule">Related Topics </h2>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Learn the basics of <span class="mc-variable Product-Names.ep_discovery variable">Discovery</span>, <span class="mc-variable Product-Names.ep_designer variable">Designer</span>, and <span class="mc-variable Product-Names.ep_catalog variable">Catalog</span>: <a href="../ggs_signup.htm" class="MCXref xref">Getting Started with PubSub+&#xA0;Cloud </a></li>
                                <li>Already completed the getting started tutorials? Find advanced topics in the following pages: <a href="event-portal-discovery.htm" class="MCXref xref">Discovery</a>, <a href="event-portal-designer.htm" class="MCXref xref">Designer</a>, and <a href="event-portal-catalog.htm" class="MCXref xref">Catalog</a></li>
                                <li>Overview information for <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> APIs, sample codes, and reference guides: <a href="Event-Portal-REST-API.htm" class="MCXref xref">Event Portal v1 REST API</a>.</li>
                                <li>Checkout the best practices for creating an event topic architecture: <a href="../../Messaging/Topic-Architecture-Best-Practices.htm" class="MCXref xref">Topic Architecture Best Practices</a>.</li>
                              </ul>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="no-print">
                      <div>
                        <a href="#" id="docsFeedbackTrigger" class="docs-issue-collector">Provide feedback</a>
                      </div>
                    </div>
                    <footer class="my-4 pt-4 text-center no-print">
                      <div class="footer-txt text-center no-print">
                        <ul class="list-inline ">
                          <li class="list-inline-item text-muted"><a href="../../Resources/Documentation-Set.htm" class="doc-set-footer-link MCXref xref xrefdoc-set-footer-link">Documentation Coverage</a>: <span class="mc-variable Variables.DocumentSetNumber variable">2024.09.16.0001</span></li>
                          <li class="list-inline-item text-muted">Last Updated: <span class="mc-variable Variables.MonthDayYear variable">September 16, 2024</span></li>
                          <li class="list-inline-item text-muted" style="font-size:13px;"> &#xA9;  <span class="mc-variable Variables.CompanyNameLegal variable">Solace Corporation</span></li>
                        </ul>
                      </div>
                      <div class="footer-icons">
                        <ul class="list-inline">
                          <li class="list-inline-item">
                            <a href="https://facebook.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/facebook_22x21.png" class="Hyperlinked" alt="Facebook" title="Solace Facebook Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.linkedin.com/company/20219" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/LinkedIn_22x21.png" class="Hyperlinked" alt="LinkedIn" title="Solace LinkedIn Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://twitter.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/Twitter_22x21.png" class="Hyperlinked" alt="Twitter" title="Solace Twitter Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.youtube.com/user/SolaceSystems" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/youtube_22x21.png" class="Hyperlinked" alt="YouTube" title="Solace YouTube Channel" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.instagram.com/solacedotcom/" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/instagram_22x21.png" class="Hyperlinked" alt="Instagram" title="Solace Instagram Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://medium.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/medium_22x21.png" class="Hyperlinked" alt="Medium" title="Solace Medium Blog" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                        </ul>
                      </div>
                      <div class="footer_link_menu">
                        <ul class="link_list">
                          <li class="link_list_item">
                            <a href="https://solace.com/products/" target="_blank" class="footer-link">Products</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/company/" target="_blank" class="footer-link">Company</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://www.solace.dev/" target="_blank" class="footer-link">Developers</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/support/" target="_blank" class="footer-link">Support</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/contact/" target="_blank" class="footer-link">Contact Us</a>
                          </li>
                        </ul>
                      </div>
                    </footer>
                  </div>
                  <!-- JIRA issue collector -->
                  <script>/*<![CDATA[*/// Requires jQuery!
jQuery.ajax({
    url: "https://sol-jira.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/o2joag/b/24/e73395c53c3b10fde2303f4bf74ffbf6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=076e0808",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS = {
"triggerFunction": function(showCollectorDialog) {
//Requires that jQuery is available!
$("#docsFeedbackTrigger").click(function(e) {
e.preventDefault();
showCollectorDialog();
});
},
fieldValues: {
recordWebInfo: '1', // field Name
recordWebInfoConsent: ['1'] // field Id
}
};
/*]]>*/</script>
                  <script src="../../Resources/Scripts/thumbnail.js">
                                    </script>
                  <!-- Script for Launching offsite links in new tab -->
                  <script type="text/javascript">/*<![CDATA[*/$("a[href^='http']").attr("target","_blank");/*]]>*/</script>
                </div>
              </div>
            </div>
          </div>
          <a data-close="true"/>
        </div>
      </div>
    </div>
  </body>
</html>
