<?xml version="1.0"?>
<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedHeader%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png"/>
    <meta charset="utf-8"/>
    <meta http-equiv="Cache-control" content="no-cache"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <title>Using PubSub+ Cache With the Python API</title>
    <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" /> -->
    <!--style to display feedback button correctly in IE-->
    <!-- Google Tag Manager -->
    <!-- End Google Tag Manager -->
    <!-- links to get the EDA styling to work -->
    <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../../Resources/Stylesheets/MainStyles.min.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <style>@media screen and (min-width: 0\0)
{
	.feedback-button
	{
		margin-right: -40px;
		top: 50%;
		border-radius: 9px 9px 0px 0px;
	}

	#canvas
	{
		position: relative;
	}
}

@media print
{
	#plugin
	{
		overflow: visible !important;
	}
}

</style>
    <link href="../../Resources/Stylesheets/eda_styles.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,300" rel="stylesheet" type="text/css"/>
    <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
    <link href="../../Resources/TableStyles/Table_Num.css" rel="stylesheet" data-mc-stylesheet-type="table"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png"/>
    <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
    <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    <script src="https://cmp.osano.com/AzZrhlTmT5f216Foa/84ba7dc4-a4e5-4b02-b120-977eb6f052d4/osano.js">
        </script>
    <script type="text/javascript">/*<![CDATA[*/(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KLSDFH');
		/*]]>*/</script>
    <script type="text/javascript" src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
  </head>
  <!-- Top Orange and Darkgrey header-->
  <!-- Div for EDA banner -->
  <div class="eda_banner">
    <p>Register Now for EDA Summit 2024 - Virtual Event <a href="https://edasummit.com/" target="_blank">Register for Free</a></p>
  </div>
  <!-- end Div for EDA banner -->
  <div class="top-nav">
    <div class="main_list">
      <ul class="top-navlinks">
        <li>
          <a href="https://solace.com/support/" target="_blank">Support</a>
        </li>
        <li>
          <a href="https://solace.com/contact/" target="_blank">Contact Us</a>
        </li>
      </ul>
    </div>
    <div class="container-fluid">
      <div class="src-li">
        <div id="srchWrapTwo">
          <form class="search" action="#">
            <div class="search-bar search-bar-container needs-pie">
              <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
              <div class="search-filter-wrapper">
                <span class="invisible-label" id="search-filters-label">Filter: </span>
                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                </div>
                <div class="search-filter-content" id="sf-content">
                  <ul>
                    <li>
                      <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                        <span id="filterSelectorLabel-00001">All Files</span>
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
              <div class="search-submit-wrapper" dir="ltr">
                <div class="search-submit" title="Search" role="button" tabindex="0">
                  <span class="invisible-label">Submit Search</span>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
      <span class="tool-tip" tooltip-position="left" tooltip="To search for CLI commands, events, or APIs, navigate to the related sections.">i</span>
      <!-- Sept. 28, 2022 - This is being moved to under div class= top-nav
			<div class="main_list">
				<ul class="top-navlinks">
					<li><a href="https://solace.com/support/" target="_blank">Support</a></li>
					<li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li>
				</ul>
			</div> -->
    </div>
    <!-- Sept. 27, 2022 - The commented out content below used to provide the products, company, etc., links in the top header, next to the search field. -->
    <!-- <div class="main_list"><ul class="top-navlinks"><li><a href="https://solace.com/products/" target="_blank">Products</a></li><li><a href="https://solace.com/company/" target="_blank">Company</a></li><li><a href="https://www.solace.dev/" target="_blank">Developers</a></li><li><a href="https://solace.com/support/" target="_blank">Support</a></li><li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li></ul></div> -->
  </div>
  <body>
    <div class="foundation-wrap off-canvas-wrapper">
      <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
        <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
          <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
        </aside>
        <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
          <div data-sticky-container="" class="title-bar-container">
            <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1000px)" data-mc-ignore="true">
              <a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
              <div class="middle title-bar-section outer-row clearfix">
                <div class="menu-icon-container relative clearfix">
                  <div class="central-account-wrapper">
                    <div class="central-dropdown">
                      <a class="central-account-drop">
                        <span class="central-account-image"/>
                        <span class="central-account-text">Account</span>
                      </a>
                      <div class="central-dropdown-content">
                        <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                        <hr class="central-separator"/>
                        <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                      </div>
                    </div>
                  </div>
                  <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas">
                    <span/>
                  </button>
                </div>
              </div>
              <div class="title-bar-layout outer-row">
                <div class="logo-wrapper">
                  <a class="logo" href="../../index.html" alt="Logo"/>
                </div>
                <div class="navigation-wrapper nocontent">
                  <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                    <li class="placeholder" style="visibility:hidden">
                      <a>placeholder</a>
                    </li>
                  </ul>
                </div>
                <div class="central-account-wrapper">
                  <div class="central-dropdown">
                    <a class="central-account-drop">
                      <span class="central-account-image"/>
                      <span class="central-account-text">Account</span>
                    </a>
                    <div class="central-dropdown-content">
                      <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                      <hr class="central-separator"/>
                      <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                    </div>
                  </div>
                </div>
                <div class="nav-search-wrapper">
                  <div class="nav-search row">
                    <form class="search" action="#">
                      <div class="search-bar search-bar-container needs-pie">
                        <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
                        <div class="search-filter-wrapper">
                          <span class="invisible-label" id="search-filters-label">Filter: </span>
                          <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                          <div class="search-filter-content" id="sf-content">
                            <ul>
                              <li>
                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                                  <span id="filterSelectorLabel-00001">All Files</span>
                                </button>
                              </li>
                            </ul>
                          </div>
                        </div>
                        <div class="search-submit-wrapper" dir="ltr">
                          <div class="search-submit" title="Search" role="button" tabindex="0">
                            <span class="invisible-label">Submit Search</span>
                          </div>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </nav>
          </div>
          <div class="main-section">
            <div class="row outer-row sidenav-layout">
              <nav class="sidenav-wrapper">
                <div class="sidenav-container">
                  <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                </div>
              </nav>
              <div class="body-container">
                <div data-mc-content-body="True">
                  <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic Print NextTopic;">
                    <div class="button-group-container-left">
                      <button class="button needs-pie print-button" title="Print">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Print">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie previous-topic-button" title="Navigate previous topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie next-topic-button" title="Navigate next topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                  <!-- Google Tag Manager (noscript) -->
                  <noscript>
                    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLSDFH" height="0" width="0" style="display:none;visibility:hidden"/>
                  </noscript>
                  <!-- End Google Tag Manager (noscript) -->
                  <div id="content">
                    <div id="contentBody">
                      <div class="row collapse">
                        <div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="ContentRow">
                          <div>
                            <div xmlns="" class="nocontent">
                              <div class="MCBreadcrumbsBox_MCBreadcrumbsSelf_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="4" data-mc-toc="True">
                                <span class="MCBreadcrumbsPrefix"> </span>
                              </div>
                            </div>
                            <div xmlns="" role="main" id="mc-main-content">
                              <h1 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Using <span class="mc-variable Product-Names.pubsub_cache variable">PubSub+ Cache</span> With the Python API</h1>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Cache is a scalable, in-memory message cache for direct messaging. It allows client applications to request the most current messages for a topic of interest when they come online, or when they start subscribing to topics that they were not originally subscribed to. For information about setting up a <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Cache instance, see <a href="../../Additional-Products/Solace-PubSub-Cache/PubSub-Cache-Overview.htm#top" class="MCXref xref">PubSub+ Cache</a>. The <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Python API allows your applications to send cache requests to receive cached messages that your receiving application is interested in. The following sections describe how to send cache requests and receive cached messages:</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="Note">To consume cached messages, your application needs access to the <code>ReceiverCacheRequests</code> interface. The  <code>DirectMessageReceiver</code> interface includes the <code>ReceiverCacheRequests</code> interface, so a <code>DirectMessageReceiver</code> instance is required to consume cached messages. See <a href="Python-DM-Receive.htm#Creating-A-DirectMessageReceiver-Object" class="MCXref xref">Creating a DirectMessageReceiver </a> for more information.</p>
                              <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li value="1">
                                  <p>
                                    <a href="#Creating" class="MCXref xref">Creating a CachedMessageSubscriptionRequest Object</a>
                                  </p>
                                </li>
                                <li value="2">
                                  <p>
                                    <a href="#Creating2" class="MCXref xref">Sending a Cache Request</a>
                                  </p>
                                </li>
                                <li value="3">
                                  <p>
                                    <a href="#Correlat" class="MCXref xref">Creating an Event&#xA0;Listener Using the CacheRequestOutcomeListener Class</a>
                                  </p>
                                </li>
                                <li value="4">
                                  <p>
                                    <a href="#Consider" class="MCXref xref">Considerations When Receiving Cached Messages</a>
                                  </p>
                                </li>
                              </ol>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Creating"/>Creating a CachedMessageSubscriptionRequest Object</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To send a cache request, you first create an object of the <code>CachedMessageSubscriptionRequest</code> class. This class contains four different functions for requesting cached messages that each return an instance of <code>CachedMessageSubscriptionRequest</code>. Select the function that best suits the needs of your application:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <p>
                                    <code>as_available(cache_name: str, subscription: TopicSubscription, cache_access_timeout: int, max_cached_messages: int=0, cached_message_age: int=0)</code>
                                  </p>
                                  <ul>
                                    <li> Returns an instance of a <code>CachedMessageSubscriptionRequest</code> used to configure a cached data request. The request object adds a live data subscription to the topic passed into the function parameter if your receiver is not already subscribed to that topic. This means your application receives a mix of cached messages from the cache request and live messages from the topic subscription.</li>
                                  </ul>
                                </li>
                                <li>
                                  <p>
                                    <code>live_cancels_cached(cache_name: str, subscription: TopicSubscription, cache_access_timeout: int, max_cached_messages: int=0, cached_message_age: int=0)</code>
                                  </p>
                                  <ul>
                                    <li>Returns an instance of a <code>CachedMessageSubscriptionRequest</code> that configures the cache request application to receive the latest messages.  The request object adds a live data subscription to the topic passed into the function parameter if your receiver is not already subscribed to that topic. When there are no live (non-cached) messages, cached messages that match your chosen topic subscription are considered the latest. Otherwise, live messages  that match your chosen topic subscription are considered the latest. </li>
                                  </ul>
                                </li>
                                <li>
                                  <p>
                                    <code>cached_first(cache_name: str, subscription: TopicSubscription, cache_access_timeout: int, max_cached_messages: int=0, cached_message_age: int=0)</code>
                                  </p>
                                  <ul>
                                    <li>Returns an instance of <code>CachedMessageSubscriptionRequest</code> that configures  the cache request to receive cached messages when available, followed by live (non-cached) messages.  The request object adds a live data subscription to the topic passed into the function parameter if your receiver is not already subscribed to that topic. </li>
                                  </ul>
                                </li>
                                <li>
                                  <p>
                                    <code>cached_only(cache_name: str, subscription: TopicSubscription, cache_access_timeout: int, max_cached_messages: int=0, cached_message_age: int=0)</code>
                                  </p>
                                  <ul>
                                    <li>Returns an instance of a <code>CachedMessageSubscriptionRequest</code> that configures your application to receive cached messages only for the duration of the cache request. </li>
                                    <li>Only use <code>cached_only()</code> when your receiver has no live subscriptions that match the cache request subscription, because your receiver will receive duplicates of any cached messages on overlapping topic subscriptions. When you have pre-existing live data subscriptions that overlap with your cache request topic subscription, use <code>as_available()</code> or <code>cached_first()</code> to avoid message duplication.</li>
                                  </ul>
                                </li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="Note">
                                <span>When you use the <code>as_available()</code>, <code>live_cancels_cached()</code>, and <code>cached_first()</code> functions, the cache request creates a live topic subscription if one does not already exist on your receiver. This subscription persists even after the cache request ends. You can remove the subscription by calling the <code>remove_subscription(topic_sub)</code> function on your receiver object after the cache outcome returns, which cancels the receipt of any live data to your client application on that subscription.</span>
                              </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The parameters of all four functions are the same:<br/></p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li><code>cache_name</code>&#x2014;name of the Solace cache to retrieve from.</li>
                                <li><code>subscription</code>&#x2014;matching topic subscription.</li>
                                <li><code>cache_access_timeout</code>&#x2014;cache request timeout (in milliseconds). This value must be between 3,000  and 2,147,483,647, for most applications a value of 10,000 (10 seconds) is sufficient. See <a href="#Appropriate-Cache-Timeout" class="MCXref xref">Assign an Appropriate cache_access_timeout Value</a> for more information.</li>
                                <li><code>max_cached_messages</code>&#x2014;max number of messages expected to be received from a cache. Default value is 0, which means there is no limit on the number of messages that can be received from a cache.</li>
                                <li><code>cached_message_age</code>&#x2014;maximum age (in seconds) of the messages to be retrieved from a cache. Default value is 0, which means there is no limit on the age of messages that can be received from a cache.</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following example shows how to create an instance of <code>CachedMessageSubscriptionRequest</code> using the <code>as_available()</code> function:<br/></p>
                              <pre xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:space="preserve">
cached_message_subscription_request = CachedMessageSubscriptionRequest.as_available("my_cache_name",
                                                                                   TopicSubscription.of("my/cache/example"),
                                                                                   10000)	</pre>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Creating2"/>Sending a Cache Request</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To create a cache request and begin receiving cached messages from a <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> cache instance, you use the <code>request_cached()</code> function from the <code>ReceiverCacheRequests</code> class. It is important to note that when you use the Python API to make a cache request, it uses a non-blocking function that returns immediately, but the actual request may be deferred. If you make multiple cache requests prior to receiving a cache outcome, you need to use unique cache request ids to avoid receiving duplicate messages. This function requests messages from a broker which were previously cached using <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> cache:</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <code>request_cached(cached_message_subscription_request: CachedMessageSubscriptionRequest, cache_request_id: int, completion_listener: CacheRequestOutcomeListener)</code>
                                <ul>
                                  <li><code>cached_message_subscription_request</code>&#x2014;Request for cached messages matching specified subscription and other fulfillment criteria.</li>
                                  <li><code>cache_request_id</code>&#x2014;request identifier which can be used for response callback correlation purposes. This ID needs to be unique for the duration of each cache request that occurs on a <code>MessagingService</code> instance. This                                         value is returned on a callback of the <code style="font-family: ;">CacheRequestOutcomeListener</code>'s <code>on_completion(                                      )</code> function.  This identifier is how the application correlates cache requests with cache responses and data messages. Live messages do not have a cache request ID.  It is the responsibility of the application to ensure the identifier is unique so that no collisions in your correlations occur. This value should not be confused with the <code>CORRELATION_ID</code> property used for general message correlation in the <code>InboundMessage</code> class.</li>
                                  <li><code>completion_listener</code>&#x2014;an instance of <code>CacheRequestOutcomeListener</code>, a callback that notifies the application when a cache request is completed.</li>
                                </ul>
                              </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following example shows how to send a cache request:</p>
                              <pre xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:space="preserve">
cache_request_id = 12345
        
cache_request_outcome_listener = MyCacheRequestOutcomeListener()
        
direct_message_receiver.requestCached(cached_message_subscription_request, cache_request_id, cache_request_outcome_listener)</pre>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">After a cache request is made, your <code>MessageHandler</code> begins receiving messages, that can be cached, live or both depending on the cache request function used to configure your cache request. You can check whether a message is a cached message with the function <code>get_cache_status()</code>. This function returns a <code>CacheStatus</code>enum, which can be one of three values:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <p><code>LIVE</code>&#x2014;The message was retrieved directly from a  <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event broker and not from a cache instance.</p>
                                </li>
                                <li>
                                  <p><code>CACHED</code>&#x2014;The message was retrieved from a cache instance.</p>
                                </li>
                                <li>
                                  <p><code>SUSPECT</code>&#x2014;The message was retrieved from a suspected cache instance.</p>
                                </li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can get the cache request identifier from a cached message with the <code>get_cache_request_id()</code> function. The example below shows a <code>MessageHandler</code> implementation that checks the cache status of inbound messages and retrieves the cache request ID from cached messages:</p>
                              <pre xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:space="preserve">
class MessageHandlerExample(MessageHandler):
    def __init__(self, direct_receiver: DirectMessageReceiver):
        self.receiver: DirectMessageReceiver = direct_receiver		
			
    def on_message(self, message: InboundMessage):
        message_type = message.get_cache_status()
        if message_type == CacheStatus.LIVE:
            print("Message is not cached.")
        elif message_type == CacheStatus.CACHED:
            print("Message is cached.")
            cache_request_id = message.get_cache_request_id()
        else:
            print("Message is from a suspected cache instance. Check your cache instance.")
							
# Register an asynchronous message receiver on the DirectMessageReceiver instance.			
direct_receiver.receive_async(MessageHandlerExample())		</pre>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="Note">If an error occurs during a cache request or if the message receiver or <code>MessagingService</code> is terminated, the API cancels all outstanding cache requests.  This termination process blocks your application until the API has passed notifications to the application for all canceled cache requests.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Correlat"/>Creating an Event&#xA0;Listener Using the CacheRequestOutcomeListener Class</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">This class is a callback for listening for the results of a cache request, with cache request identifier support. It notifies your application when a cache request is complete. It must contain one function, <code>on_completion()</code>: </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <code>on_completion (result: CacheRequestOutcome, cache_request_id: int, exception: Union[Exception,None])</code>
                                <ul>
                                  <li><code>result</code>&#x2014;the outcome of the cache request, can be one of the following enums:
				<ul><li><code>OK</code>&#x2014;cached data was returned in a cache reply, or the cache request was fulfilled by live data.</li><li><code>NO_DATA</code>&#x2014;there was no data in the cache reply.</li><li><code>SUSPECT_DATA</code>&#x2014;there was suspect data in the cache reply.</li><li><code>FAILED</code>&#x2014;The request failed for some reason, such as a timeout. This is the only <code>CacheRequestOutcome</code> that results in an exception being set on the <code>on_completion()</code> callback.</li></ul></li>
                                  <li><code>cache_request_id</code>&#x2014;the cache request identifier associated with the given completed computation unit. This ID can be used for response callback correlation purposes, to correlate cache requests with their associated messages.</li>
                                  <li><code>exception</code>&#x2014;an <code>Exception</code> if the cache request fails. The exception is <code>None</code> if you get a result other than <code>FAILED</code>.</li>
                                </ul>
                              </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following example shows a simple example implementation of a <code>CacheRequestOutcomeListener</code>: </p>
                              <pre xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:space="preserve">
class MyCacheRequestOutcomeListener(CacheRequestOutcomeListener):
    def on_completion(result: <span>CacheRequestOutcome</span>, cache_request_id: int, exception: Exception):
        print("Completed!")	</pre>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Consider"/>Considerations When Receiving Cached Messages</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There are considerations to be aware of when you receive cached messages with the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Python API. The following two sections explain what can happen you have overlapping topic subscriptions and provide additional information about how <code>cache_access_timeout</code> works.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Avoid Overlapping topic subscriptions when possible</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">When you use the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Python API to consume cached messages, we recommend that you do not have overlapping topic subscriptions. Overlapping topic subscriptions occur when you use the same or overlapping topic subscriptions across one or more message consumers connected to the same <code>MessagingService</code> instance. If you have overlapping topic subscriptions, it is important to understand how cache requests can affect your applications. </p>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Multiple Message Consumers with Topic Subscription Overlap</h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The table below explains what happens when a cache request is made by a message consumer when</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <p> more than one message consumer is connected to the same <code>MessagingService</code> instance<br/><b>AND</b></p>
                                </li>
                                <li>
                                  <p>the topic subscription used in the cache request overlaps with a topic subscription used by one or more of those message consumers.</p>
                                </li>
                              </ul>
                              <table xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-table-style: url('../../Resources/TableStyles/Table_Num.css');width: 100%;margin-left: 0;margin-right: auto;" class="TableStyle-Table_Num" cellspacing="0">
                                <col class="TableStyle-Table_Num-Column-Column1">
                                                                </col>
                                <col class="TableStyle-Table_Num-Column-Column1">
                                                                </col>
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <thead>
                                  <tr class="TableStyle-Table_Num-Head-Header1">
                                    <th class="TableStyle-Table_Num-HeadE-Column1-Header1" style="text-align: left;">Function used to configure cache request</th>
                                    <th class="TableStyle-Table_Num-HeadD-Column1-Header1" style="border-left-style: solid;border-left-width: 1px;border-right-style: solid;border-right-width: 1px;border-bottom-style: solid;border-bottom-width: 1px;padding-left: 4pt;padding-right: 6pt;padding-top: 6pt;padding-bottom: 6pt;text-align: left;" colspan="2">Result<br/></th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="font-weight: bold;text-align: left;">
                                      <code>as_available()</code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="text-align: left;" colspan="2">The cache response delivers cached messages to <b>all</b> message consumers connected to the <code>MessagingService</code> instance that have a matching topic subscription.</td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="font-weight: bold;text-align: left;">
                                      <code>live_cancels_cached()</code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="text-align: left;" colspan="2">The cache response delivers cached messages to <b>all</b> message consumers connected to the <code>MessagingService</code> instance that have a matching topic subscription.</td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1" style="font-weight: bold;text-align: left;">
                                      <code>cached_first()</code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1" style="text-align: left;" colspan="2">
                                      <p colspan="2">The cache response delivers cached messages to <b>all</b> message consumers connected to the <code>MessagingService</code> instance that have a matching topic subscription.</p>
                                      <p colspan="2">
                                        <b>AND</b>
                                      </p>
                                      <p>All consumers with live data subscriptions will stop receiving live data until all cached messages are received for any overlapping topic subscriptions.</p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyB-Column1-Body1" style="font-weight: bold;text-align: left;">
                                      <code>cached_only()</code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyA-Column1-Body1" style="text-align: left;" colspan="2">The cache response delivers cached messages to <b>all</b> consumers that have a matching topic subscription.</td>
                                  </tr>
                                </tbody>
                              </table>
                              <h4 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Single Message Consumer with Topic Overlap</h4>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">If you use the <code>cached_only()</code> function in your cache message request, and your application meets the following two conditions:</p>
                              <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li value="1">
                                  <p> Only one message consumer is connected to the <code>MessagingService</code> instance.<br/></p>
                                </li>
                                <li value="2">
                                  <p>The topic subscription used in the cache request matches any of the message consumer's live topic subscriptions.</p>
                                </li>
                              </ol>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Your message consumer receives duplicates of any cached messages on those overlapping topic subscriptions. To avoid message duplication in this scenario, use the <code>as_available()</code> or <code>cached_first()</code> functions.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information, see the <a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Appropriate-Cache-Timeout"/>Assign an Appropriate cache_access_timeout Value</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There is no default value for <code>cache_access_timeout</code>. In most cases, a value of 10,000 (equal to 10 seconds) is sufficient. This value  specifies a timer for the internal requests that occur between the Python API and a <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> cache instance. A single call to <code>request_cached()</code> can lead to one or more of these internal requests. As long as each of these internal requests complete before the specified <code>cache_access_timeout</code> value, a timeout does not occur.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For example, if you specify a <code>cache_access_timeout</code> of 3000 milliseconds and there are 10 internal requests that each take 2000 milliseconds to complete, the time that it takes the <code>request_cached()</code> function to return is the sum of the those requests, which is 20,000 milliseconds. Because none of the <i>individual</i> requests took longer than 3000 milliseconds no timeout occurs in this scenario.
</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> In some scenarios, such as high-network latency and which back-pressure strategy your application uses, increases to the <code>cache_access_timeout</code> value may be required. For example, if you use the default back-pressure strategy of <code>on_back_pressure_elastic()</code>, where you have an unlimited internal message buffer, this back-pressure can cause delays in the API that affect how long it takes internal requests to complete. You may need to increase your <code>cache_access_timeout</code> value to account for these delays. </p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="no-print">
                      <div>
                        <a href="#" id="docsFeedbackTrigger" class="docs-issue-collector">Provide feedback</a>
                      </div>
                    </div>
                    <footer class="my-4 pt-4 text-center no-print">
                      <div class="footer-txt text-center no-print">
                        <ul class="list-inline ">
                          <li class="list-inline-item text-muted"><a href="../../Resources/Documentation-Set.htm" class="doc-set-footer-link MCXref xref xrefdoc-set-footer-link">Documentation Coverage</a>: <span class="mc-variable Variables.DocumentSetNumber variable">2024.09.16.0001</span></li>
                          <li class="list-inline-item text-muted">Last Updated: <span class="mc-variable Variables.MonthDayYear variable">September 16, 2024</span></li>
                          <li class="list-inline-item text-muted" style="font-size:13px;"> &#xA9;  <span class="mc-variable Variables.CompanyNameLegal variable">Solace Corporation</span></li>
                        </ul>
                      </div>
                      <div class="footer-icons">
                        <ul class="list-inline">
                          <li class="list-inline-item">
                            <a href="https://facebook.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/facebook_22x21.png" class="Hyperlinked" alt="Facebook" title="Solace Facebook Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.linkedin.com/company/20219" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/LinkedIn_22x21.png" class="Hyperlinked" alt="LinkedIn" title="Solace LinkedIn Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://twitter.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/Twitter_22x21.png" class="Hyperlinked" alt="Twitter" title="Solace Twitter Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.youtube.com/user/SolaceSystems" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/youtube_22x21.png" class="Hyperlinked" alt="YouTube" title="Solace YouTube Channel" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.instagram.com/solacedotcom/" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/instagram_22x21.png" class="Hyperlinked" alt="Instagram" title="Solace Instagram Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://medium.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../../Resources/Images/Social-Media/medium_22x21.png" class="Hyperlinked" alt="Medium" title="Solace Medium Blog" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                        </ul>
                      </div>
                      <div class="footer_link_menu">
                        <ul class="link_list">
                          <li class="link_list_item">
                            <a href="https://solace.com/products/" target="_blank" class="footer-link">Products</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/company/" target="_blank" class="footer-link">Company</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://www.solace.dev/" target="_blank" class="footer-link">Developers</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/support/" target="_blank" class="footer-link">Support</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/contact/" target="_blank" class="footer-link">Contact Us</a>
                          </li>
                        </ul>
                      </div>
                    </footer>
                  </div>
                  <!-- JIRA issue collector -->
                  <script>/*<![CDATA[*/// Requires jQuery!
jQuery.ajax({
    url: "https://sol-jira.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/o2joag/b/24/e73395c53c3b10fde2303f4bf74ffbf6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=076e0808",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS = {
"triggerFunction": function(showCollectorDialog) {
//Requires that jQuery is available!
$("#docsFeedbackTrigger").click(function(e) {
e.preventDefault();
showCollectorDialog();
});
},
fieldValues: {
recordWebInfo: '1', // field Name
recordWebInfoConsent: ['1'] // field Id
}
};
/*]]>*/</script>
                  <script src="../../Resources/Scripts/thumbnail.js">
                                    </script>
                  <!-- Script for Launching offsite links in new tab -->
                  <script type="text/javascript">/*<![CDATA[*/$("a[href^='http']").attr("target","_blank");/*]]>*/</script>
                </div>
              </div>
            </div>
          </div>
          <a data-close="true"/>
        </div>
      </div>
    </div>
  </body>
</html>
