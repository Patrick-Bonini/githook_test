<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedHeader%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta http-equiv="Cache-control" content="no-cache" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Messaging Service</title>
        <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" /> -->
        <!--style to display feedback button correctly in IE-->
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- links to get the EDA styling to work -->
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/MainStyles.min.css" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
        <style>@media screen and (min-width: 0\0)
{
	.feedback-button
	{
		margin-right: -40px;
		top: 50%;
		border-radius: 9px 9px 0px 0px;
	}

	#canvas
	{
		position: relative;
	}
}

@media print
{
	#plugin
	{
		overflow: visible !important;
	}
}

</style>
        <link href="../../Resources/Stylesheets/eda_styles.css" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,300" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script src="https://cmp.osano.com/AzZrhlTmT5f216Foa/84ba7dc4-a4e5-4b02-b120-977eb6f052d4/osano.js">
        </script>
        <script type="text/javascript">/*<![CDATA[*/(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KLSDFH');
		/*]]>*/</script>
        <script type="text/javascript" src="../../Skins/Default/Scripts/TopicToolBar.js">
        </script>
    </head>
    <!-- Top Orange and Darkgrey header-->
    <!-- Div for EDA banner -->
    <div class="eda_banner">
        <p>Register Now for EDA Summit 2024 - Virtual Event <a href="https://edasummit.com/" target="_blank">Register for Free</a></p>
    </div>
    <!-- end Div for EDA banner -->
    <div class="top-nav">
        <div class="main_list">
            <ul class="top-navlinks">
                <li><a href="https://solace.com/support/" target="_blank">Support</a>
                </li>
                <li><a href="https://solace.com/contact/" target="_blank">Contact Us</a>
                </li>
            </ul>
        </div>
        <div class="container-fluid">
            <div class="src-li">
                <div id="srchWrapTwo">
                    <form class="search" action="#">
                        <div class="search-bar search-bar-container needs-pie">
                            <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs" />
                            <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                </div>
                                <div class="search-filter-content" id="sf-content">
                                    <ul>
                                        <li>
                                            <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="search-submit-wrapper" dir="ltr">
                                <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div><span class="tool-tip" tooltip-position="left" tooltip="To search for CLI commands, events, or APIs, navigate to the related sections.">i</span>
            <!-- Sept. 28, 2022 - This is being moved to under div class= top-nav
			<div class="main_list">
				<ul class="top-navlinks">
					<li><a href="https://solace.com/support/" target="_blank">Support</a></li>
					<li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li>
				</ul>
			</div> -->
        </div>
        <!-- Sept. 27, 2022 - The commented out content below used to provide the products, company, etc., links in the top header, next to the search field. -->
        <!-- <div class="main_list"><ul class="top-navlinks"><li><a href="https://solace.com/products/" target="_blank">Products</a></li><li><a href="https://solace.com/company/" target="_blank">Company</a></li><li><a href="https://www.solace.dev/" target="_blank">Developers</a></li><li><a href="https://solace.com/support/" target="_blank">Support</a></li><li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li></ul></div> -->
    </div>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1000px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../index.html" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic Print NextTopic;">
                                        <div class="button-group-container-left">
                                            <button class="button needs-pie print-button" title="Print">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Print">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie previous-topic-button" title="Navigate previous topic" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                            <button class="button needs-pie next-topic-button" title="Navigate next topic" disabled="true">
                                                <div>
                                                    <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                                                        <div class="button-icon"> </div>
                                                    </div>
                                                </div>
                                            </button>
                                        </div>
                                    </div>
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLSDFH" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <div id="content">
                                        <div id="contentBody">
                                            <div class="row collapse">
                                                <div class="ContentRow" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                    <div>
                                                        <div class="nocontent" xmlns="">
                                                            <div class="MCBreadcrumbsBox_MCBreadcrumbsSelf_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="4" data-mc-toc="True"><span class="MCBreadcrumbsPrefix"> </span>
                                                            </div>
                                                        </div>
                                                        <div role="main" id="mc-main-content" xmlns="">
                                                            <h1 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Messaging-Service"></a>Messaging Service</h1>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API&#160;for Python provides the <code>MessagingService</code> class, which handles all the functionality for interacting with a <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event broker. To create a <code>MessagingService</code> instance, you must first configure a properties dictionary with the information required to establish a connection to the event broker, including the host details and the authentication scheme.</p>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Creating-A-Properties-Object"></a>Creating a Property Dictionary</h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To connect to an event broker, you need to configure service properties in a dictionary. A properties dictionary can have a number of properties, however it must contain the <code>host</code> and <code>vpn-name</code> keys. The broker properties dictionary is passed to the <code>MessagingServiceClientBuilder</code> to configure the connection to the event broker. There are five categories of properties that can be configured in a broker properties dictionary:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>solace.messaging.config.solace_properties.service_properties</code> (required for the&#160;<code>vpn-name</code> property)</li>
                                                                <li><code>solace.messaging.config.solace_properties.transport_layer_properties</code> (required for <code>host</code> property )</li>
                                                                <li><code>solace.messaging.config.solace_properties.authentication_properties</code>
                                                                </li>
                                                                <li><code>solace.messaging.config.solace_properties.client_properties</code>
                                                                </li>
                                                                <li><code>solace.messaging.config.solace_properties.transport_layer_security_properties</code>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The code below shows an example of a broker properties dictionary used for establishing a connection to an event broker using basic authentication:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
from solace.messaging.config.solace_properties import transport_layer_properties, service_properties, authentication_properties
# ...
broker_props = {
    transport_layer_properties.HOST: "tcps://messaging.solace.cloud:55443",
    service_properties.VPN_NAME: "my_VPN",
    authentication_properties.SCHEME_BASIC_USER_NAME: "my_username",
    authentication_properties.SCHEME_BASIC_PASSWORD: "my_password",
    }</pre>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Alternatively if you're running samples, the configuration you want to use can be passed into the client application via a JSON file. The following sample code shows how you can use the <code>json.loads()</code> function to parse JSON data and use it to create a broker properties dictionary:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
import json
# ...
# Read the JSON file
with open('/path/to/config.json') as file:
       json_data = file.read()

# Unmarshal JSON into a dictionary
configDict = json.loads(json_data)

# Use from_properties(configDict) to use JSON data when creating your MessagingService instance
messaging_service = MessagingService.builder()<b>.from_properties(configDict)</b>.build()</pre>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For a more detailed example, see the <code>read_config()</code> function in <a href="https://github.com/SolaceSamples/solace-samples-python/blob/main/howtos/sampler_boot.py" class="link-offsite">sampler_boot.py</a> in the <span class="mc-variable Variables.CompanyName variable">Solace</span> GitHub repository.</p>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Message"></a>End-to-End Payload Compression</h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Python API can perform end-to-end payload compression to allow for: </p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li>
                                                                    <p>faster message throughput </p>
                                                                </li>
                                                                <li>
                                                                    <p>reduced bandwidth usage</p>
                                                                </li>
                                                                <li>
                                                                    <p>improved performance in your applications</p>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">While end-to-end payload compression creates more work for individual <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> APIs, it enables faster aggregate rates of message publishing and message receiving. The <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event broker offers transport message compression that compresses the entire message, see <a href="../../Messaging/Message-Compression.htm#top" class="MCXref xref">Streaming Compressed Connections</a>. However, when you send and receive large messages, compressing the entire message creates a lot of work for the event broker, which can result in slower throughput. If your application needs to send and receive large messages, we recommend you use end-to-end payload compression to improve performance.</p>
                                                            <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li value="1">
                                                                    <p><a href="#Consider" class="MCXref xref">Considerations When Compressing Message Payloads</a>
                                                                    </p>
                                                                </li>
                                                                <li value="2">
                                                                    <p><a href="#Compress-Python" class="MCXref xref">Compressing Message Payloads in the PubSub+ Python API</a>
                                                                    </p>
                                                                </li>
                                                            </ol>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Consider"></a>Considerations When Compressing Message Payloads</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following sections explain what you should be aware of when you compress message payloads with the <span class="mc-variable Manifest-Products-APIs.PubSub-GenericAll-Messaging-API variable">PubSub+&#160;Messaging API</span>s. </p>
                                                            <dl xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <dt>
                                                                    <p style="font-weight: bold;">Use only one form of message compression</p>
                                                                </dt>
                                                                <dd>
                                                                    <p>We recommend you only use one form of compression, either <a href="../../Messaging/Message-Compression.htm#top" class="MCXref xref">Streaming Compressed Connections</a> through the event broker or end-to-end payload compression through the APIs. Compressing the same message multiple times can waste resources and usually does not result in smaller message sizes.</p>
                                                                </dd>
                                                                <dt>
                                                                    <p style="font-weight: bold;">Do not use end-to-end payload compression with small messages</p>
                                                                </dt>
                                                                <dd>
                                                                    <p>End-to-end Payload Compression works best with messages that are a few megabytes in size. <span class="mc-variable Variables.CompanyName variable">Solace</span> does not recommend using message payload compression with small messages, because end-to-end payload compression can actually increase the size of small messages.</p>
                                                                </dd>
                                                                <dt>
                                                                    <p style="font-weight: bold;">Upgrade your publisher and receiver applications</p>
                                                                </dt>
                                                                <dd>
                                                                    <p>Receiver applications automatically decompress any compressed message payloads <i>only</i> if the API supports message payload compression <i>and</i> is updated to the minimum supported version. If your receiver application does not support message payload compression, this can cause potential errors or exceptions. Make sure you update your publisher <i>and</i> receiver applications to the minimum supported versions for payload compression. For version support information, see <a href="../API-Developer-Guide/Feature-Support-PubSub-Messaging-APIs.htm#top" class="MCXref xref">Feature Support in PubSub+&#160;Messaging APIs</a>.</p>
                                                                </dd>
                                                                <dt>
                                                                    <p style="font-weight: bold;">End-to-end payload compression limitations</p>
                                                                </dt>
                                                                <dd>
                                                                    <p>End-to-end payload compression does not currently support <span class="mc-variable Product-Names.pubsub_cache variable">PubSub+ Cache</span>.</p>
                                                                    <p>End-to-end payload compression is not compatible with:</p>
                                                                    <ul>
                                                                        <li>
                                                                            <p>SolCache </p>
                                                                        </li>
                                                                        <li>
                                                                            <p>Non-SMF protocols, such as AMQP, HTTP, Kafka and MQTT</p>
                                                                        </li>
                                                                    </ul>
                                                                    <p>If your applications use any of the above, we recommend you do not use end-to-end payload compression.</p>
                                                                </dd>
                                                            </dl>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Compress-Python"></a>Compressing Message Payloads in the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Python API</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Your publisher application can compress the payload of any message before you publish it. To compress a message payload, you must set <code>PAYLOAD_COMPRESSION_LEVEL</code>, which tells the API you want end-to-end payload compression enabled. The payload compression level property can be set to an integer from 0-9:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li>
                                                                    <p><code>0</code>—Payload compression is disabled. This is the default setting.</p>
                                                                </li>
                                                                <li>
                                                                    <p><code>1 - 9</code>—Payload compression is enabled. 1 is the lowest level of compression with the fastest data throughput, and 9 is the highest level of compression with the slowest data throughput.</p>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Your payload compression level should be adjusted according to your network and performance requirements. The following code snippet shows how to set <code>PAYLOAD_COMPRESSION_LEVEL</code> in a broker properties dictionary:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
from solace.messaging.config.solace_properties import service_properties
# ...
service_props = {
    # ...
    service_properties.PAYLOAD_COMPRESSION_LEVEL: 9 
}</pre>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Establish-conneection-to-event-broker"></a>Establishing a Connection to an Event Broker </h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A <code>MessagingService</code> object allows the API to establish a connection to the event broker. To create a <code>MessagingService</code> object, do the following:</p>
                                                            <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li value="1">
                                                                    <p>Call the <code>MessagingService</code> class' <code>builder()</code> function to return a <code>MessagingServiceClientBuilder</code> object.</p>
                                                                </li>
                                                                <li value="2">
                                                                    <p>The <code>MessagingServiceClientBuilder</code> object gives you access to a number of functions that let you customize a <code>MessagingService</code> object. These include the following:</p>
                                                                    <ul>
                                                                        <li><code>from_properties(configuration: dict)</code>—Pass the necessary broker properties dictionary to the <code>MessagingServiceClientBuilder</code>.</li>
                                                                        <li style="font-weight: normal;font-size: 11pt;"><code>with_authentication_strategy(authentication_strategy: AuthenticationStrategy)</code>
                                                                        </li>
                                                                        <li><code>with_transport_security_strategy(transport_layer_security_strategy: TransportSecurityStrategy)</code>
                                                                        </li>
                                                                        <li><code>with_reconnection_retry_strategy(strategy: RetryStrategy)</code>
                                                                        </li>
                                                                    </ul>
                                                                </li>
                                                                <li value="3">
                                                                    <p>Call the <code>build()</code> function on the <code>MessagingServiceClientBuilder</code> object to return a <code>MessagingService</code> object.</p>
                                                                </li>
                                                                <li value="4">
                                                                    <p>Call the <code>connect()</code> function on your <code>MessagingService</code> object to connect to the event broker. </p>
                                                                </li>
                                                            </ol>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following sample code shows how to create a simple <code>MessagingService</code> instance and connect it to an event broker:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
# Build A messaging service with a reconnection strategy of 20 retries over an interval of 3 seconds
messaging_service = MessagingService.builder().from_properties(broker_props)\
    .with_reconnection_retry_strategy(RetryStrategy.parametrized_retry(20, 3)) \
    .with_authentication_strategy(BasicUserNamePassword.of("my_username", "my_password")) \
    .build()

# Blocking connect thread
messaging_service.connect()	</pre>
                                                            <p class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To sever a <code>MessagingService</code> object's connection to the event broker, call <code>disconnect()</code> on it. This also makes the <code>MessagingService</code> object eligible for garbage collection.</p>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Connecting-Through-Proxies"></a>Connecting to a Host Event Broker Through Proxies in the Python API</h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can use  HTTP or SOCKS5 proxies to connect to event brokers inside your private network. Instead of requiring you to give firewall access to each client,  you only need to make one firewall exception for the external proxy server, which authenticates the clients to the broker. You may need to use proxies to meet security requirements. <span class="mc-variable Variables.CompanyName variable">Solace</span> supports proxies in most situations.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To set a host use:</p>
                                                            <p class="Code" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">transport_layer_properties.HOST</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To connect to an event broker through an HTTP or SOCKS protocol version 5 proxy server, the configured host setting must include those parameters required for a standard, direct connection to an event broker, but it must also include a proxy service string:</p>
                                                            <p class="Code" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">[Protocol:]Host[:Port][%ProxyService]</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><u>Where</u>:</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><code>ProxyService</code>—The proxy server that is used to connect to event broker. The proxy service string format is specified as:</p>
                                                            <p class="Code" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">[ProxyProtocol]://[username:password@]proxyHost[:proxyPort]</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><u>Where</u>:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>ProxyProtocol</code>—The protocol used to communication with the proxy server. The valid values are:
                <ul><li><code>socks5</code>—Connect to the server with the SOCKS Protocol Version 5, RFC 1928 (IETF Standards Track Document).</li><li><code>httpc</code>—Connect to the server with the HTTP Connect Protocol, RFC 2817 (IETF Standards Track Document).</li></ul></li>
                                                                <li><code>username:password@</code>—If authentication is required for the proxy server, the username and password may be specified before the proxy host.
            </li>
                                                                <li><code>proxyHost</code>—The IP address (or hostname) of the proxy server.
            </li>
                                                                <li><code>proxyPort</code>—The port to connect to for a connection. If the port number is not specified, the default is port 1080 for SOCKS5 and port 3128 default for HTTP Connect.
            </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><u>Examples</u>:</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following examples show how to connect to an event broker through a proxy server.</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>192.168.160.28%socks5://192.168.1.1</code>—Connects to an event broker at 192.168.160.28 through a SOCKS5 proxy server at 192.168.1.1.</li>
                                                                <li><code>192.168.160.28%httpc://192.168.1.1</code>—Connects to an event broker at 192.168.160.28 through an HTTP-Connect proxy server at 192.168.1.1.</li>
                                                                <li><code>tcps:solace.company.com%socks5://User:PassWord@proxy.company.com:13128</code>—Connect to an event broker at <code>solace.company.com</code> using SSL over TCP through a SOCKS5 proxy server at <code>proxy.company.com</code>, port 13128. Authenticate with the proxy server using username <code>User</code> and password <code>PassWord</code>.</li>
                                                                <li><code>http://192.168.160.28:44444%httpc://proxy.company.com:11050</code>—Connect to the event broker at 192.168.160.28, port 44444, using HTTP. Connect through the proxy server at proxy.company.com, port 11050.</li>
                                                            </ul>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Transport-Layer-Security"></a>Using Transport Layer Security</h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Transport Layer Security (TLS) allows for encrypted authentication and data transmission between the <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Python API and a <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event broker. The Python API supports Transport Layer Security versions. The versions available are TLS 1.1, and TLS 1.2 . The recommended version to use is the most recent version of TLS. </p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can use the <code>with_transport_security_strategy()</code> function with the <code>config</code> package to configure the TLS&#160;connection properties to use, or whether or not to disable certificate validation entirely. When you use TLS, you must always use the secure TCP&#160;&#160;protocol (<code>tcps</code>or <code>https</code>) in  setting the <code>host</code>&#160;property for your connection, for example:</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><pre xml:space="preserve">broker_props = {
    solace.messaging.config.solace_properties.transport_layer_properties.HOST: "<b>tcps</b>://messaging.solace.cloud:55443",
    solace.messaging.config.solace_properties.service_properties.VPN_NAME: "myVPN",
}</pre>
                                                            </p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">We recommend using certificate validation when configuring your messaging service. The Python API's <code>config</code> module provides the following functions for configuring certificate validation:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li>
                                                                    <p><code>with_certificate_validation(ignore_expiration: bool, validate_server_name: bool, trust_store_file_path: str, trusted_common_name_list: str)</code>
                                                                    </p>
                                                                    <ul>
                                                                        <li> <code>ignore_expiration</code>— When set to true, expired certificates are accepted. This is not recommended because it poses a security risk.						</li>
                                                                        <li><code>validate_server_name</code>— When set to true, the default setting, certificates without the matching host are not accepted. </li>
                                                                        <li><code>trust_store_file_path</code>— The location of the trust store files. If an empty string is passed, no file path will be set.</li>
                                                                        <li><code>trusted_common_name_list</code>— A comma-separated list of acceptable common names for matching with server certificates. An empty string will match no names.
Modern TLS implementations confirm the subject alternative name in the server certificate, so it is usually unnecessary to set this parameter. If your server certificate cannot be upgraded appropriately, you may use <code>trusted_common_name_list</code> for additional validation of the server certificate.					</li>
                                                                    </ul>
                                                                    <p>&#160;</p>
                                                                    <p>The following sample code shows the recommended security setup for client applications when you use TLS: </p><pre xml:space="preserve">
# Creates a transport security strategy with validation on certificates that excludes dated TLS/SSL protocols			
transport_security = TLS.create().with_certificate_validation(True, False, "./trusted-store", "") \
                .with_excluded_protocols(TLS.SecureProtocols.TLSv1,
                                         TLS.SecureProtocols.TLSv1_1,
                                         TLS.SecureProtocols.SSLv3) 
			
# Build A messaging service
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(BasicUserNamePassword.of("username", "password")) \
               .with_transport_security_strategy(transport_security) \
               .build()	
</pre>
                                                                </li>
                                                                <li>
                                                                    <p><code>without_certificate_validation()</code>—This function configures your TLS connection not to  validate server certificates. </p>
                                                                    <p class="Warning">Only use <code>without_certificate_validation()</code>  in development environments. We recommend that you never use this function in production environments because it creates a security vulnerability.</p>
                                                                    <p> The following sample code shows how to use the <code>without_certificate_validation()</code> function:</p>
                                                                    <p><pre xml:space="preserve">
# Creates a transport security strategy without validation on certificates			
transport_security = TLS.create().without_certificate_validation()
			
# Build a messaging service
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(BasicUserNamePassword.of("username", "password")) \
               .with_transport_security_strategy(transport_security) \
               .build()						</pre>
                                                                    </p>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You can also configure the aspects of the TLS&#160;connection using  <code>transport_layer_security_properties</code> in a properties dictionary. The TLS&#160;connection can be configured using various fields found in  <code>solace.messaging.config.solace_properties.transport_layer_security_properties</code>. We recommend that you use the default settings (set to <code>true</code> and enabled) to ensure secure connections for the following properties: </p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>solace.messaging.config.solace_properties.transport_layer_security_properties.CERT_REJECT_EXPIRED</code>
                                                                </li>
                                                                <li><code>solace.messaging.config.solace_properties.transport_layer_security_properties.CERT_VALIDATE_SERVERNAME</code>
                                                                </li>
                                                                <li><code>solace.messaging.config.solace_properties.transport_layer_security_properties.CERT_VALIDATED</code>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <h2 class="with-rule" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Authentication"></a>Authentication </h2>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> The <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messing API for Python supports a number of  authentication schemes (or strategies). that you can choose from.&#160;The scheme that you choose may depend on the credentials that the connecting client is required to provide. You can use one of the following  authentication schemes:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><a href="#Basic" class="MCXref xref">Basic Authentication </a>
                                                                </li>
                                                                <li><a href="#Kerberos" class="MCXref xref">Kerberos Authentication </a>
                                                                </li>
                                                                <li><a href="#Client" class="MCXref xref">Client Certificate Authentication </a>
                                                                </li>
                                                                <li><a href="#OAuth" class="MCXref xref">OAuth 2.0 Authentication</a>
                                                                </li>
                                                            </ul>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Basic"></a>Basic Authentication </h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Basic authentication is the default client authentication scheme  which allows a client to authenticate with an event broker using a client username and password. To specify basic authentication, create an instance of a <code>MessagingService</code> and specify the following as the parameter for the <code>with_authentication_strategy()</code> function:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>BasicUserNamePassword.of(username: str, password: str)</code>
                                                                </li>
                                                                <ul>
                                                                    <li><code>username</code>— The user name to use to create a <code>BasicUserNamePassword</code> object.</li>
                                                                    <li><code>password</code>—The password to use to create a <code>BasicUserNamePassword</code> object.</li>
                                                                </ul>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following sample code shows how to use basic authentication:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
# Build a messaging service
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(BasicUserNamePassword.of("username", "password")) \
               .build()	
</pre>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Kerberos"></a>Kerberos Authentication </h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The Python API provides support for  <a href="../../Security/Configuring-Client-Authentication.htm#Config-Kerberos" class="link-internal">Kerberos Authentication</a>. Connecting using this function requires you to load a Kerberos Keytab on the  broker (see <a href="https://docs.solace.com/Admin/Managing-Event-Broker-Files.htm" class="link-offsite">Managing Event Broker Files</a>) and Kerberos authentication must be configured and enabled for any Message VPNs that Kerberos-authenticated clients connect to.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">. Call the <code>with_authentication_strategy()</code> function and pass the following as the parameters:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>Kerberos.of(service_name: str)</code>
                                                                    <ul>
                                                                        <li><code>service_name</code>—A valid Kerberos service name.</li>
                                                                    </ul>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The following sample code shows how to use Kerberos for authentication:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
# Build a messaging service
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(Kerberos.of("client_kerberos_service_name")) \
               .build()	
</pre>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="Client"></a>Client Certificate Authentication </h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To use the <a href="../../Security/Configuring-Client-Authentication.htm#Client-Cert" class="link-internal">Client certificate authentication</a> scheme, the following steps are required: </p>
                                                            <ol xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li value="1">
                                                                    <p>Configure the host event broker to use TLS connections (see <a href="#Transport-Layer-Security" class="MCXref xref">Using Transport Layer Security</a>).</p>
                                                                </li>
                                                                <li value="2">
                                                                    <p>Your application must connect to the broker using TLS.</p>
                                                                </li>
                                                                <li value="3">
                                                                    <p>Enable Client certificate verification on the Message VPN that the application uses to connect.</p>
                                                                </li>
                                                                <li value="4">
                                                                    <p>The client-side certificate must be present in a keystore file and configured using the following:</p>
                                                                    <ul>
                                                                        <li>
                                                                            <p> <code>ClientCertificateAuthentication.of(certificate_file: str, key_file: str, key_password: str)</code></p>
                                                                        </li>
                                                                        <ul>
                                                                            <li><code>certificate_file</code>—The file that contains the client certificate or the client-certificate chain. </li>
                                                                            <li><code>key_file</code>—The file contains the client private key.</li>
                                                                            <li><code>key_password</code>—The password if the private key (<code>key_file</code>) is password protected.</li>
                                                                        </ul>
                                                                    </ul>
                                                                </li>
                                                            </ol>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> The following sample code shows how to configure client certificate authentication:</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
# Build a messaging service
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(ClientCertificateAuthentication.of(certificate_file,
                                                                                key_file, 
                                                                                key_password)) \
               .build()	
</pre>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a name="OAuth"></a>OAuth 2.0 Authentication</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">OAuth 2.0 is an open standard for access delegation and authorization. It is commonly used as a mechanism  to grant websites or applications access to users' information on other websites without giving them access to sensitive credentials. The  OAuth authentication scheme allows access through the use of tokens issued to third-party clients by an authorization server that provides access to Message VPNs on <span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event brokers. To use OAuth 2.0 authentication, configure the host event broker to use TLS connections (see <a href="#Transport-Layer-Security" class="MCXref xref">Using Transport Layer Security</a>) and make sure your application connects to the event broker using TLS. For more information, see <a href="../../Security/Configuring-Client-Authentication.htm#OAuth" class="MCXref xref">OAuth Authentication</a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The Python API supports different fields that can be sent to the event broker:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li>
                                                                    <p><code>access_token</code>—A <code>String</code> for applications to make requests for data access.</p>
                                                                    <p><b>and/or</b> <br /></p>
                                                                    <p><code>oidc_id_token</code>—A <code>String</code> for Open ID Connect (OIDC) connections.</p>
                                                                </li>
                                                                <li><code>issuer_identifier</code>—(Optional)&#160;A <code>String</code> to identify the appropriate OAuth provider configuration.</li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">OAuth authentication requires an <code>access_token</code>, an <code>oidc_id_token</code>, or both to be enabled using this function:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>OAuth2.of(access_token: str, oidc_id_token: str, issuer_identifier: str)</code>
                                                                    <ul>
                                                                        <li>At least one of <code>access_token </code>or <code>oidc_id_token</code> must be provided. Optionally, <code>issuer_identifier </code>can be provided. If any of the parameters is not required, <code>None</code> can be passed.</li>
                                                                    </ul>
                                                                </li>
                                                            </ul>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information,  see the <a href="../../API-Developer-Online-Ref-Documentation/go/index.html" class="link-internal"><a href="../../API-Developer-Online-Ref-Documentation/python/index.html" class="link-internal"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> Messaging API for Python reference</a></a>.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> The following sample code shows how to use  OAuth authentication with OpenID&#160;Connect (OIDC):</p><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
# Configure service access to use a Open ID connect authentication with an ID token and an optional access token.
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(OAuth2.of("my_access_token", 
                                                       "my_oidc_token",
                                                       None)) \
               .with_transport_security_strategy(transport_security) \
               .build()	
</pre><pre xml:space="preserve" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
# Configure service access to use OAuth 2 authentication with an access token and an optional issuer identifier.
messaging_service = MessagingService.builder().from_properties(broker_props)\
               .with_authentication_strategy(OAuth2.of("my_access_token",
                                                       None, 
                                                       "my_issuer_identifier")) \
               .with_transport_security_strategy(transport_security) \
               .build()	
</pre>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Required Event Broker Configurations</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For a client application to use an OAuth authentication scheme, a Message VPN OAuth  profile must be configured for the host event broker and OAuth authentication must be configured and enabled for any Message VPNs to which a client connects. For more information, see <a href="../../Security/Configuring-Client-Authentication.htm#OAuth" class="MCXref xref">OAuth Authentication</a>.</p>
                                                            <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Refreshing Expired OAuth Tokens</h3>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">By default, event brokers disconnect clients when their tokens expire (see <a href="../../Security/Configuring-Client-Authentication.htm#Disconnect-Token-Expiry" class="MCXref xref">Disconnect on Token Expiration</a>). When a client session  is disconnected, the client application tries to reconnect a number of times using the same OAuth token based on the <code>RECONNECTION_ATTEMPTS</code> property. If the reconnection attempts are exceeded, then the connection cannot be re-established and the client application must recreate the session with all its subscriptions.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To avoid needing to destroy and recreate the session, the client should update the OAuth token before it expires, or while reconnecting. To update the OAuth token, use the <code>update_property(name: str, value: Any)</code>&#160;function, which allows you to set a modifiable service property after the creation of the <code>MessagingService</code> object. The first parameter is one of the following strings and the second parameter is the token:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li><code>messaging_service.update_property(authentication_properties.SCHEME_OAUTH2_ACCESS_TOKEN, new_access_token)</code> to update an expired access token</li>
                                                                <li><code>messaging_service.update_property(authentication_properties.SCHEME_OAUTH2_OIDC_ID_TOKEN, new_id_token)</code> to update an expired ID&#160;token
</li>
                                                            </ul>
                                                            <p class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Modifiable service properties may not update immediately and may require the next reconnection attempt to update.</p>
                                                            <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Refreshing the expired token can happen while:</p>
                                                            <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                                                <li>
                                                                    <p>the client application is connected. In this case, the client contacts the authentication server to refresh the token and modifies the session to use the updated token the next time the API&#160;connects to the event broker.</p>
                                                                </li>
                                                                <li>
                                                                    <p style="font-weight: normal;">the client application is reconnecting. The reconnecting event includes a diagnostic subCode.  If this subCode is <code>Login Failure</code>, this may indicate that your token has expired.   In this case, the API tries to reconnect (using the expired token). The client  then contacts the authentication server to refresh the token and modifies the session to use the updated token the next time the API attempts to reconnect to the event broker.</p>
                                                                </li>
                                                            </ul>
                                                            <p style="font-weight: normal;" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">In general, it is better if the client application is aware of potential token expiry and refreshes the token before it expires.</p>
                                                            <p class="Note" xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">When the client application's session is reconnected, the Python API re-applies the client application's direct subscriptions. If there is a change in the ACLs as a result of the refreshed token, the subscriptions may be rejected by the event broker.</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="no-print">
                                            <div><a href="#" id="docsFeedbackTrigger" class="docs-issue-collector">Provide feedback</a>
                                            </div>
                                        </div>
                                        <footer class="my-4 pt-4 text-center no-print">
                                            <div class="footer-txt text-center no-print">
                                                <ul class="list-inline ">
                                                    <li class="list-inline-item text-muted"><a href="../../Resources/Documentation-Set.htm" class="doc-set-footer-link MCXref xref xrefdoc-set-footer-link">Documentation Coverage</a>: <span class="mc-variable Variables.DocumentSetNumber variable">2024.09.16.0001</span></li>
                                                    <li class="list-inline-item text-muted">Last Updated: <span class="mc-variable Variables.MonthDayYear variable">September 16, 2024</span></li>
                                                    <li class="list-inline-item text-muted" style="font-size:13px;"> ©  <span class="mc-variable Variables.CompanyNameLegal variable">Solace Corporation</span></li>
                                                </ul>
                                            </div>
                                            <div class="footer-icons">
                                                <ul class="list-inline">
                                                    <li class="list-inline-item"><a href="https://facebook.com/solacedotcom" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/facebook_22x21.png" class="Hyperlinked" alt="Facebook" title="Solace Facebook Page" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://www.linkedin.com/company/20219" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/LinkedIn_22x21.png" class="Hyperlinked" alt="LinkedIn" title="Solace LinkedIn Page" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://twitter.com/solacedotcom" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/Twitter_22x21.png" class="Hyperlinked" alt="Twitter" title="Solace Twitter Feed" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://www.youtube.com/user/SolaceSystems" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/youtube_22x21.png" class="Hyperlinked" alt="YouTube" title="Solace YouTube Channel" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://www.instagram.com/solacedotcom/" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/instagram_22x21.png" class="Hyperlinked" alt="Instagram" title="Solace Instagram Feed" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                    <li class="list-inline-item"><a href="https://medium.com/solacedotcom" target="_blank" class="social-media-icon"><img src="../../Resources/Images/Social-Media/medium_22x21.png" class="Hyperlinked" alt="Medium" title="Solace Medium Blog" style="width: 22;height: 21;" /></a>
                                                    </li>
                                                </ul>
                                            </div>
                                            <div class="footer_link_menu">
                                                <ul class="link_list">
                                                    <li class="link_list_item"><a href="https://solace.com/products/" target="_blank" class="footer-link">Products</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://solace.com/company/" target="_blank" class="footer-link">Company</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://www.solace.dev/" target="_blank" class="footer-link">Developers</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://solace.com/support/" target="_blank" class="footer-link">Support</a>
                                                    </li>
                                                    <li class="link_list_item"><a href="https://solace.com/contact/" target="_blank" class="footer-link">Contact Us</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </footer>
                                    </div>
                                    <!-- JIRA issue collector -->
                                    <script>/*<![CDATA[*/// Requires jQuery!
jQuery.ajax({
    url: "https://sol-jira.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/o2joag/b/24/e73395c53c3b10fde2303f4bf74ffbf6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=076e0808",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS = {
"triggerFunction": function(showCollectorDialog) {
//Requires that jQuery is available!
$("#docsFeedbackTrigger").click(function(e) {
e.preventDefault();
showCollectorDialog();
});
},
fieldValues: {
recordWebInfo: '1', // field Name
recordWebInfoConsent: ['1'] // field Id
}
};
/*]]>*/</script>
                                    <script src="../../Resources/Scripts/thumbnail.js">
                                    </script>
                                    <!-- Script for Launching offsite links in new tab -->
                                    <script type="text/javascript">/*<![CDATA[*/$("a[href^='http']").attr("target","_blank");/*]]>*/</script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>