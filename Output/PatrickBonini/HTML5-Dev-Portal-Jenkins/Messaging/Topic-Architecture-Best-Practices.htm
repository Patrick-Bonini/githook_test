<?xml version="1.0"?>
<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Side_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="msapplication-config" content="../Skins/Favicons/browserconfig.xml"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png"/>
    <meta charset="utf-8"/>
    <meta http-equiv="Cache-control" content="no-cache"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <title>Topic Architecture Best Practices</title>
    <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" /> -->
    <!--style to display feedback button correctly in IE-->
    <!-- Google Tag Manager -->
    <!-- End Google Tag Manager -->
    <!-- links to get the EDA styling to work -->
    <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True"/>
    <link href="../Resources/Stylesheets/MainStyles.min.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"/>
    <style>@media screen and (min-width: 0\0)
{
	.feedback-button
	{
		margin-right: -40px;
		top: 50%;
		border-radius: 9px 9px 0px 0px;
	}

	#canvas
	{
		position: relative;
	}
}

@media print
{
	#plugin
	{
		overflow: visible !important;
	}
}

</style>
    <link href="../Resources/Stylesheets/eda_styles.css" rel="stylesheet" type="text/css"/>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,300" rel="stylesheet" type="text/css"/>
    <style>/*&lt;meta /&gt;*/

.button.print-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, transparent);
}

.needs-pie
{
	behavior: url('../Resources/Scripts/PIE-no-motw.htc');
}

</style>
    <link href="../Resources/TableStyles/Table_Num.css" rel="stylesheet" data-mc-stylesheet-type="table"/>
    <link rel="apple-touch-icon" sizes="180x180" href="../Skins/Favicons/apple-touch-icon.png"/>
    <link rel="shortcut icon" href="../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="96x96" href="../Skins/Favicons/favicon-96x96.png"/>
    <link rel="icon" sizes="32x32" href="../Skins/Favicons/favicon-32x32.png"/>
    <link rel="icon" sizes="16x16" href="../Skins/Favicons/favicon-16x16.png"/>
    <script src="../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
    <script src="../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
    <script src="../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
    <script src="../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
    <script src="../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    <script src="https://cmp.osano.com/AzZrhlTmT5f216Foa/84ba7dc4-a4e5-4b02-b120-977eb6f052d4/osano.js">
        </script>
    <script type="text/javascript">/*<![CDATA[*/(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KLSDFH');
		/*]]>*/</script>
    <script type="text/javascript" src="../Skins/Default/Scripts/TopicToolBar.js">
        </script>
  </head>
  <!-- Top Orange and Darkgrey header-->
  <!-- Div for EDA banner -->
  <div class="eda_banner">
    <p>Register Now for EDA Summit 2024 - Virtual Event <a href="https://edasummit.com/" target="_blank">Register for Free</a></p>
  </div>
  <!-- end Div for EDA banner -->
  <div class="top-nav">
    <div class="main_list">
      <ul class="top-navlinks">
        <li>
          <a href="https://solace.com/support/" target="_blank">Support</a>
        </li>
        <li>
          <a href="https://solace.com/contact/" target="_blank">Contact Us</a>
        </li>
      </ul>
    </div>
    <div class="container-fluid">
      <div class="src-li">
        <div id="srchWrapTwo">
          <form class="search" action="#">
            <div class="search-bar search-bar-container needs-pie">
              <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
              <div class="search-filter-wrapper">
                <span class="invisible-label" id="search-filters-label">Filter: </span>
                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                </div>
                <div class="search-filter-content" id="sf-content">
                  <ul>
                    <li>
                      <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                        <span id="filterSelectorLabel-00001">All Files</span>
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
              <div class="search-submit-wrapper" dir="ltr">
                <div class="search-submit" title="Search" role="button" tabindex="0">
                  <span class="invisible-label">Submit Search</span>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
      <span class="tool-tip" tooltip-position="left" tooltip="To search for CLI commands, events, or APIs, navigate to the related sections.">i</span>
      <!-- Sept. 28, 2022 - This is being moved to under div class= top-nav
			<div class="main_list">
				<ul class="top-navlinks">
					<li><a href="https://solace.com/support/" target="_blank">Support</a></li>
					<li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li>
				</ul>
			</div> -->
    </div>
    <!-- Sept. 27, 2022 - The commented out content below used to provide the products, company, etc., links in the top header, next to the search field. -->
    <!-- <div class="main_list"><ul class="top-navlinks"><li><a href="https://solace.com/products/" target="_blank">Products</a></li><li><a href="https://solace.com/company/" target="_blank">Company</a></li><li><a href="https://www.solace.dev/" target="_blank">Developers</a></li><li><a href="https://solace.com/support/" target="_blank">Support</a></li><li><a href="https://solace.com/contact/" target="_blank">Contact Us</a></li></ul></div> -->
  </div>
  <body>
    <div class="foundation-wrap off-canvas-wrapper">
      <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
        <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
          <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
        </aside>
        <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
          <div data-sticky-container="" class="title-bar-container">
            <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1000px)" data-mc-ignore="true">
              <a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
              <div class="middle title-bar-section outer-row clearfix">
                <div class="menu-icon-container relative clearfix">
                  <div class="central-account-wrapper">
                    <div class="central-dropdown">
                      <a class="central-account-drop">
                        <span class="central-account-image"/>
                        <span class="central-account-text">Account</span>
                      </a>
                      <div class="central-dropdown-content">
                        <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                        <hr class="central-separator"/>
                        <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                      </div>
                    </div>
                  </div>
                  <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas">
                    <span/>
                  </button>
                </div>
              </div>
              <div class="title-bar-layout outer-row">
                <div class="logo-wrapper">
                  <a class="logo" href="../index.html" alt="Logo"/>
                </div>
                <div class="navigation-wrapper nocontent">
                  <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                    <li class="placeholder" style="visibility:hidden">
                      <a>placeholder</a>
                    </li>
                  </ul>
                </div>
                <div class="central-account-wrapper">
                  <div class="central-dropdown">
                    <a class="central-account-drop">
                      <span class="central-account-image"/>
                      <span class="central-account-text">Account</span>
                    </a>
                    <div class="central-dropdown-content">
                      <a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                      <hr class="central-separator"/>
                      <a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                    </div>
                  </div>
                </div>
                <div class="nav-search-wrapper">
                  <div class="nav-search row">
                    <form class="search" action="#">
                      <div class="search-bar search-bar-container needs-pie">
                        <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search the docs"/>
                        <div class="search-filter-wrapper">
                          <span class="invisible-label" id="search-filters-label">Filter: </span>
                          <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                          <div class="search-filter-content" id="sf-content">
                            <ul>
                              <li>
                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001">
                                  <span id="filterSelectorLabel-00001">All Files</span>
                                </button>
                              </li>
                            </ul>
                          </div>
                        </div>
                        <div class="search-submit-wrapper" dir="ltr">
                          <div class="search-submit" title="Search" role="button" tabindex="0">
                            <span class="invisible-label">Submit Search</span>
                          </div>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </nav>
          </div>
          <div class="main-section">
            <div class="row outer-row sidenav-layout">
              <nav class="sidenav-wrapper">
                <div class="sidenav-container">
                  <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                </div>
              </nav>
              <div class="body-container">
                <div data-mc-content-body="True">
                  <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic Print NextTopic;">
                    <div class="button-group-container-left">
                      <button class="button needs-pie print-button" title="Print">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Print">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie previous-topic-button" title="Navigate previous topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate previous">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                      <button class="button needs-pie next-topic-button" title="Navigate next topic" disabled="true">
                        <div>
                          <div role="img" class="button-icon-wrapper" aria-label="Navigate next">
                            <div class="button-icon"> </div>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                  <!-- Google Tag Manager (noscript) -->
                  <noscript>
                    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLSDFH" height="0" width="0" style="display:none;visibility:hidden"/>
                  </noscript>
                  <!-- End Google Tag Manager (noscript) -->
                  <div id="content">
                    <div id="contentBody">
                      <div class="row collapse">
                        <div xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="ContentRow">
                          <div>
                            <div xmlns="" class="nocontent">
                              <div class="MCBreadcrumbsBox_MCBreadcrumbsSelf_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="4" data-mc-toc="True">
                                <span class="MCBreadcrumbsPrefix"> </span>
                              </div>
                            </div>
                            <div xmlns="" role="main" id="mc-main-content">
                              <h1 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Topic_Architecture_Best_Practices" data-mc-generated-bookmark="TOC"/><a xmlns="" name="aanchor64"/><MadCap:concept term="Cloud;Appliance;Software"/>Topic Architecture Best Practices</h1>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Event-driven architecture, <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><a href="https://solace.com/use-cases/microservices/" target="_blank" class="link-offsite">event-driven microservices</a></MadCap:conditionalText>, and event-driven integration are valuable application design patterns. The key advantage of these systems is that applications can collaborate by asynchronously reacting to events instead of relying on synchronous polling or orchestration for signaling. The publish-subscribe message exchange pattern is a common way to deliver events. A well-architected topic hierarchy:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li> effectively routes events across an event-driven system and ensures consumer applications have the flexibility to selectively consume only the events they want</li>
                                <li>allows applications to efficiently attract and consume events and get the most out of <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput">Solace </MadCap:conditionalText>smart topics </li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A rich, well-defined topic architecture is key to maximizing the value of event-driven architecture. It offers many benefits for routing, filtering, and governance. In addition, the topic architecture can be designed and captured in <a href="../Cloud/Event-Portal/event-portal-overview.htm" class="link-internal"><span class="mc-variable Product-Names.eventportal_product_long variable">PubSub+&#xA0;Event Portal</span></a>, allowing for event discovery and runtime management.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For more information and background about topics, see:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <a href="../Get-Started/what-are-topics.htm" class="MCXref xref">Understanding Topics</a>
                                </li>
                                <li><a href="../Get-Started/event-mesh-basics.htm" class="MCXref xref">What Is Event-Driven Architecture?</a>, for general information about events and messaging</li>
                                <li>
                                  <a href="topic-use-cases.htm" class="MCXref xref">Topic Architecture Case Studies</a>
                                </li>
                                <li>
                                  <a href="Wildcard-Charaters-Topic-Subs.htm#top" class="MCXref xref">Wildcard Characters in Topic Subscriptions</a>
                                </li>
                                <li data-mc-conditions="SAP.SapHideFromOutput"><a href="https://www.youtube.com/watch?v=PP1nNlgERQI" target="_blank" class="link-offsite">All about Solace topics!</a>&#xA0;(Video)</li>
                                <li data-mc-conditions="SAP.SapHideFromOutput"><a href="https://solace.com/blog/when-topics-arent-just-publish-subscribe" target="_blank" class="link-offsite">When Topics Aren't Just Publish/Subscribe: Explaining Topics and Subscriptions in Solace</a> (<span class="mc-variable Variables.CompanyName variable">Solace</span> Blog)</li>
                                <li data-mc-conditions="SAP.SapHideFromOutput"><a href="https://solace.com/blog/controlling-info-flow-with-topics" target="_blank" class="link-offsite">Controlling Information Flow with Topics</a> (<span class="mc-variable Variables.CompanyName variable">Solace</span> Blog)</li>
                                <li data-mc-conditions="SAP.SapHideFromOutput"><a href="https://solace.com/blog/tag/event-driven-architecture/" target="_blank" class="link-offsite">Solace Blog</a>, for discussions relating to event-driven architecture</li>
                              </ul>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a xmlns="" name="Topic_Architecture_Definitions" data-mc-generated-bookmark="TOC"/><a name="topic-bp-definitions"/>Topic Architecture Definitions</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">You should be familiar with the following  event-driven architecture terminology.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Event" data-mc-generated-bookmark="TOC"/>Event</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">An <i>event</i> can be broadly described as something that happened within your organization, particularly a change in state of some kind of object. Events can have a variety of forms, but all have the common component of an action that has occurred on an object. For example:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <p>In a system of microservices, an event is a change or result emitted by one microservice and consumed by another whenever a state update occurs. For example, a customer places an order or opens an account. In these systems, each microservice acts independently and sends change notifications asynchronously. Microservices are loosely coupled, so the publishers do not need to know who needs to receive notifications, but instead use smart topics to explicitly describe which object has changed and how.</p>
                                </li>
                                <li>
                                  <p>In an IoT system, an event represents a state change of a real-world object. For example, an event could be a notification that the temperature of a sensor has crossed a threshold. Again, these change notifications or events need to be distributed to all interested systems.</p>
                                </li>
                                <li>
                                  <p>In a data system, an event represents a create, update, or delete operation. As a result of a create operation, a backend may update the database and emit a completion event. The difference in event-driven architecture is that, unlike a database, the event mesh is an open and distributed system where the events can be distributed to all the interested applications. This removes the need for applications to poll for changes in the database.</p>
                                </li>
                              </ul>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Event_Topic" data-mc-generated-bookmark="TOC"/>Event Topic</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">To achieve enterprise-wide distribution of reusable events in event-driven architectures, the events need to be routable to interested applications. This is achieved via a smart event topic. The smart event topic is additional information (or metadata) in the messaging layer header, which is set by the application that produced the event. Topics allow event brokers to make intelligent routing decisions without deserializing, decoding, and interpreting the entire event. <a href="https://solace.com/what-is-an-event-broker/" target="_blank" class="link-offsite" data-mc-conditions="SAP.SapHideFromOutput">Event brokers</a> don't need to understand the entire event to take action; they just need to know how to act on the event's topic information. This is similar to the way IP routers direct internet traffic without inspecting the payload or even the upper-level headers. However, unlike a URL or IP address, the event topic does not describe a destination, but instead describes the content of the message payload. To get value out of the event topics, they must follow a well-defined topic taxonomy which clearly defines the various hierarchical topic levels set by the producing application.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Event_Subscription" data-mc-generated-bookmark="TOC"/>Event Subscription</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">While the event topic is metadata attached to the published event to allow for movement through an <a href="https://solace.com/blog/event-mesh/" target="_blank" class="link-offsite" data-mc-conditions="SAP.SapHideFromOutput">event mesh</a>, the <i>subscription</i> is the mechanism for client applications to register interest in events. Upon matching event topics to consumer subscriptions, the system can weave dynamic forwarding paths across the mesh to deliver the correct events to each consumer. Unlike event topics, a single event topic subscription can be configured to attract numerous event topics via wildcards, which allow for fine-grained filtering of events flowing through the event mesh.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Topic_Taxonomy_Example" data-mc-generated-bookmark="TOC"/>Topic Taxonomy Example</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">At its core, an event is an <b>action that has occurred</b> or state that has changed on an <b>object</b>. The topic for an event should describe the event. A basic topic hierarchy, or more formally the topic taxonomy, must describe the object (noun) and the action taken or state changed (verb). Some additional properties may also be included in the topic to enrich the hierarchy. In simplistic terms, a good topic hierarchy takes the form <code><span class="topicnoun">Noun</span>/<span class="topicverb">Verb</span>/<span class="topicproperty">Properties</span></code>.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Consider the topic architecture for Example Airline (EA), who are designing a new application to track flights. The domain would be <code><span class="topicdomain">ops</span>/<span class="topicdomain">flights</span>/</code> for flight operations. The <code>ObjectType</code> in this case is a <code><span class="topicnoun">flight</span></code>, thus flight would be the noun. Various different actions may occur on these flights, for instance, a flight might start <code><span class="topicverb">boarding</span></code> or be <code><span class="topicverb">delayed</span></code>. To differentiate between different flights, <code><span class="topicproperty">flightNumber</span></code> can be included in the topic. Subscribers may also want to receive information for flights at specific airports, so <code><span class="topicproperty">origin</span></code> and <code><span class="topicproperty">destination</span></code> would be good candidates to include in the topic. Putting it all together, we get <code><span class="topicnoun">flight</span>/<span class="topicverb">[status]</span>/<span class="topicproperty">[flightNumber]</span>/<span class="topicproperty">[origin]</span>/<span class="topicproperty">[destination]</span></code> as a basic topic architecture.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Within the applications at Example Airline (EA), when a state change occurs, the following events are published:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Flight EA 1234 is boarding: <code><span class="topicnoun">flight</span>/<span class="topicverb">boarding</span>/<span class="topicproperty">ea1234</span>/<span class="topicproperty">jfk</span>/<span class="topicproperty">ord</span></code></li>
                                <li>Flight EA 9999 is delayed: <code><span class="topicnoun">flight</span>/<span class="topicverb">delayed</span>/<span class="topicproperty">ea9999</span>/<span class="topicproperty">yow</span>/<span class="topicproperty">sin</span></code></li>
                                <li>Flight EA 1010 took off: <code><span class="topicnoun">flight</span>/<span class="topicverb">wheelsUp</span>/<span class="topicproperty">ea1010</span>/<span class="topicproperty">ewr</span>/<span class="topicproperty">ord</span></code></li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">This topic architecture allows subscribers to receive events for:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>All flights leaving JFK <code><span class="topicnoun">flight</span>/<span class="topicverb">wheelsUp</span>/*/<span class="topicproperty">jfk</span>/&gt;</code></li>
                                <li>All delayed flights for the airline <code><span class="topicnoun">flight</span>/<span class="topicverb">delayed</span>/&gt;</code></li>
                                <li>All events for flight EA 1010 <code><span class="topicnoun">flight</span>/*/<span class="topicproperty">ea1010</span>/&gt;</code></li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">As time goes on, you may require more properties, event payloads may evolve, and new applications may come online. To ensure that the system is future-proof, each distinct event should be versioned. In addition, each event topic should be prefixed with its data owner or domain. The domain indicates which department owns the defined event. In this case operations (ops), as well as the application domain to which the event belongs, which in this case is flights.  This practice allows for future growth of the enterprise, either by adding a baggage application within the ops department, or onboarding an entirely new booking department&#x2019;s applications.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">As such, it gives us a final topic taxonomy of <code><span class="topicdomain">ops</span>/<span class="topicdomain">flights</span>/<span class="topicnoun">flight</span>/<span class="topicverb">[status]</span>/<span class="topicproperty">[version]</span>/<span class="topicproperty">[flightNumber]</span>/<span class="topicproperty">[origin]</span>/<span class="topicproperty">[destination]</span></code>, where the <code><span class="topicproperty">v1</span></code> publisher may publish <code><span class="topicdomain">ops</span>/<span class="topicdomain">flights</span>/<span class="topicnoun">flight</span>/<span class="topicverb">boarding</span>/<span class="topicproperty">v1</span>/<span class="topicproperty">ea1234</span>/<span class="topicproperty">jfk</span>/<span class="topicproperty">ord</span></code> for the boarding example above. The following events may then be added to an event catalog for discovery:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <code><span class="topicdomain">ops</span>/<span class="topicdomain">flights</span>/<span class="topicnoun">flight</span>/<span class="topicverb">boarding</span>/<span class="topicproperty">v1</span>/<span class="topicproperty">{flightNumber}</span>/<span class="topicproperty">{origin}</span>/<span class="topicproperty">{destination}</span></code>
                                </li>
                                <li>
                                  <code><span class="topicdomain">ops</span>/<span class="topicdomain">flights</span>/<span class="topicnoun">flight</span>/<span class="topicverb">delayed</span>/<span class="topicproperty">v1</span>/<span class="topicproperty">{flightNumber}</span>/<span class="topicproperty">{origin}</span>/<span class="topicproperty">{destination}</span></code>
                                </li>
                                <li>
                                  <code><span class="topicdomain">ops</span>/<span class="topicdomain">flights</span>/<span class="topicnoun">flight</span>/<span class="topicverb">wheelsUp</span>/<span class="topicproperty">v1</span>/<span class="topicproperty">{flightNumber}</span>/<span class="topicproperty">{origin}</span>/<span class="topicproperty">{destination}</span></code>
                                </li>
                              </ul>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a xmlns="" name="Benefits_of_a_Rich_Topic_Architecture" data-mc-generated-bookmark="TOC"/><a name="topic-bp-benefits"/>Benefits of a Rich Topic Architecture</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">These key benefits result from a well-designed topic architecture:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>
                                  <p>Routing, filtering, and governance can occur at multiple levels, as data flows across the event mesh. For example, a decision can be made on which events are allowed to cross geographical boundaries, but once a topic is in the geography, secondary decisions can be made on which consumers can receive the events.</p>
                                </li>
                                <li>
                                  <p>Gathering information across events is easier. For example, wildcards enable receiving all event types pertaining to an orderID, or all new orders regardless of originator or location.</p>
                                </li>
                                <li>
                                  <p>When events are documented well, for instance, with <span class="mc-variable Product-Names.eventportal_product_long variable">PubSub+&#xA0;Event Portal</span>, a well-defined topic hierarchy makes onboarding new team members and new applications much easier.</p>
                                </li>
                                <li>
                                  <p>Relationships between events and business domains are easy to understand. For example, the topic hierarchy could contain levels from business unit, to application domain, to action; you might see a hierarchy like finance/payroll/pay-adjustment.</p>
                                </li>
                                <li>
                                  <p>Explicit need for orchestration is removed. With the proper use of event-driven architecture, complex tasks can be choreographed and consistently completed in a highly scalable and more robust way. For example, a new order for an online store may trigger an inventory data change, a payment or billing change, and a shipping change. Any failure in inventory or billing causes a shipping cancellation. This set of events allows the billing, inventory, and shipping applications to scale independently and execute in an asynchronous manner.</p>
                                </li>
                                <li>
                                  <p>Barriers to data movement are removed by using an event mesh and a well-defined topic hierarchy because data can selectively flow between application domains, while data can still be governed and access-controlled. An enterprise-wide topic architecture allows events to flow across application domains. For example, a marketing application may want to receive operations events, and with a well-defined topic architecture and a few tweaks to access control, this can happen without operations having to make any changes.</p>
                                </li>
                                <li>
                                  <p>Event versioning offers several benefits: it reduces the risk of regression, enables the development of canary application instances, facilitates blue/green deployment scenarios, and future-proofs the system against business requirement changes. New event versions can be added as requirements change, without risking existing applications even if non-backward compatible changes are necessary.</p>
                                </li>
                                <li>
                                  <p>Adding properties to the topic hierarchy allows for fine-grained filtering. This filtering ensures that consumers  only receive the events that they need. It also ensures  the system is more efficient by reducing the workload on applications and keeping egress data costs down.</p>
                                </li>
                                <li>
                                  <p>Multiple topic levels allow you to create access control rules that are level-specific and can contain topic wildcards. This flexibility makes it simple to specify data entitlements at each level of the hierarchy. For example, including a sensor ID in the topic hierarchy allows access control lists to use <a href="../Security/Granting-Clients-Access.htm" class="link-internal" target="_blank" data-mc-conditions="SAP.SapHideFromOutput">substitution expressions</a> to ensure that one sensor cannot publish data pretending to be from another sensor.</p>
                                </li>
                              </ul>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="with-rule"><a xmlns="" name="Best_Practices_for_Designing_a_Topic_Hierarchy" data-mc-generated-bookmark="TOC"/><a name="topic-bp-design"/>Best Practices for Designing a Topic Hierarchy</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A well-designed topic hierarchy should follow the topic structure that we outline. We recommend that you follow this structure for all event topics across your organization. To see how these best practices can be put into use, see <a href="topic-use-cases.htm" class="MCXref xref">Topic Architecture Case Studies</a>.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Event_Topic_Structure" data-mc-generated-bookmark="TOC"/><a name="event-topic-structure"/>Event Topic Structure</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The first step to defining a topic hierarchy is to identify the business objects participating in the event-driven microservice or event-driven integration. Next, the key actions or state changes that can occur to these objects should be identified. The combined object and action is generally referred to as the topic root, along with other information such as the business domain, and the version of the event. Then, for each of these topic roots, the optional properties specific to the object or action that occurred should be identified. This additional information is generally referred to as the properties of the event. You can decide whether to add a field to a topic, consider whether it would be useful for routing, apply filtering, and enforce access control.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Consider the following examples:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>If we're creating a topic hierarchy for an event system that updates the city bus positions, we could have a topic hierarchy of <code><span class="topicdomain">mobile</span>/<span class="topicnoun">bus</span>/<span class="topicverb">locUpdate</span>/<span class="topicproperty">v1</span>/<span class="topicproperty">&lt;routeNumber&gt;</span>/<span class="topicproperty">&lt;busNumber&gt;</span>/<span class="topicproperty">&lt;location&gt;</span></code> . In this example, the <code><span class="topicproperty">routeNumber</span></code>, <code><span class="topicproperty">busNumber</span></code>, and <code><span class="topicproperty">location</span></code> are all properties of the <code><span class="topicverb">locUpdate</span></code> action. There are many more bus numbers than there are route numbers so <code><span class="topicproperty">busNumber</span></code> follows after <code><span class="topicproperty">routeNumber</span></code>. Similarly, there are more locations for a bus than the number of buses, so <code><span class="topicproperty">location</span></code> goes after <code><span class="topicproperty">busNumber</span></code>.</li>
                              </ul>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>If we're building a topic hierarchy for an event system that updates purchase orders per city, we could have a hierarchy of <code><span class="topicdomain">store</span>/<span class="topicnoun">order</span>/<span class="topicverb">created</span>/<span class="topicproperty">v1</span>/<span class="topicproperty">&lt;locality&gt;</span>/<span class="topicproperty">&lt;objectID&gt;</span></code>. In this case, the <code><span class="topicproperty">objectID</span></code> could be either the purchase order or the SKU of the purchase, and the location could be picked from an enumeration of possible cities. In a successful business, usually there are more sales than sales locations, so in this case, the <code><span class="topicproperty">objectID</span></code> is the property with more variability.</li>
                              </ul>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Parts_of_the_Event_Topic" data-mc-generated-bookmark="TOC"/><a name="parts-of-event-structure"/>Parts of the Event Topic</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">A well-defined event topic has two main parts:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>The <b>event topic root</b> contains enough information to describe the type of event that has occurred. Each event topic root is a static field that describes the type of event. The list of event topic roots forms a catalog of events that can be produced and consumed. This catalog can be captured in <span class="mc-variable Product-Names.eventportal_product_long variable">PubSub+&#xA0;Event Portal</span> by adding all of your events to <a href="../Cloud/Event-Portal/event-portal-designer.htm" class="link-internal" target="_blank">Designer</a>. Each event topic root describes the event in as much detail as necessary to map it to a single data schema.</li>
                                <li>The <b>event topic properties</b> are optional fields that further describe a particular event. This part of the topic has fields that are dynamically filled when the producer publishes the event. These fields are used to describe the specific, or unique attributes of this event instance that could be used for routing and filtering. Examples of this are the object ID, and location from the preceding city bus example, or the flight number, origin, and destination from the preceding airline example. It is not uncommon for these fields to also be encoded in the event payload, but only the fields that are helpful for routing, filtering, or governance should be included in the topic.</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="Note">While the topic hierarchy should be rich, it's important that it also be concise. A topic is limited to a maximum of 250 characters, and 128 topic levels. The topic root containing the domain, noun, and verb and one or more important properties should use literal values rather than variables and should be concise. We recommend that you include properties in the topic root literals only if they are valuable for  routing, filtering, or governance.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Event_Topic_Root" data-mc-generated-bookmark="TOC"/><a name="event-topic-root"/>Event Topic Root</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The event topic root of an event should have the following form:</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <code><span class="topicdomain">Domain</span>/<span class="topicnoun">ObjectType</span>/<span class="topicverb">Verb</span>/<span class="topicproperty">Version</span>/</code>
                              </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">The fields in the event topic root are described in the following table:</p>
                              <table xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
                                <col class="TableStyle-Table_Num-Column-Column1" style="width: 175px;"/>
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <thead>
                                  <tr class="TableStyle-Table_Num-Head-Header1">
                                    <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Field</th>
                                    <th class="TableStyle-Table_Num-HeadD-Column1-Header1">Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
                                      <code>
                                        <span class="topicdomain">Domain</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>Identifies the organizational element responsible for the system. This should describe the system&#x2019;s responsibility (e.g., <code><span class="topicdomain">operations</span></code> or <code><span class="topicdomain">booking</span></code>), as well as clearly identify the event&#x2019;s owner (e.g., <code><span class="topicdomain">op</span></code> or <code><span class="topicdomain">hr</span></code>). Using multiple domain levels ensures that event names do not collide as the enterprise grows, and ensures that a clear data owner can be identified for each event.  </p>
                                      <p>Encoding domain information into the topic hierarchy enables multiple domains to seamlessly share the same mesh, which in turn allows for collaboration between domains. It also enables the governance needed for multiple business units to share the same event mesh and provides clear ownership of the event, which is essential for effective reuse of events and ensures accessibility, evolution, and data quality of the events.</p>
                                      <p>The Domain should clearly identify the organizational owner of the event, and should take the form <code><span class="topicdomain">dataSystem/applicationDomain</span></code>(e.g., <code><span class="topicdomain">finance/payroll</span></code> or <code><span class="topicdomain">marketing/rewards</span></code>). The <code><span class="topicdomain">dataSystem</span></code> should be as wide as possible to enable event reuse, and the <code><span class="topicdomain">applicationDomain</span></code> should differentiate different potential applications within the same department. The organization name may be included in the form <code><span class="topicdomain">organizationName/dataSystem/applicationDomain</span></code> to enable multi-vendor systems, and future-proof the Domain against acquisitions or mergers.</p>
                                      <p>Examples: <code><span class="topicdomain">operations/flights, acme/rideshare/billing</span></code></p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
                                      <code>
                                        <span class="topicnoun">ObjectType</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>Identifies the type of the object (referred to as the noun)&#xA0;being acted on. This object may be very general, for instance, an order, or it can be more specific if significantly different handling has to happen for different products (e.g., securities trades versus mutual funds). </p>
                                      <p>Examples: <code><span class="topicnoun">customer</span></code>, <code><span class="topicnoun">order</span></code>, <code><span class="topicnoun">inventory</span></code>, <code><span class="topicnoun">payment</span></code></p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
                                      <code>
                                        <span class="topicverb">Verb</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>Describes the action that has been taken or the state that has changed on the object and can be typical CRUD operations or another verb describing the action taken. The verb for the field is typically in past tense.</p>
                                      <p>Examples: <code><span class="topicverb">created</span></code>, <code><span class="topicverb">deleted</span></code>, <code><span class="topicverb">exceeded</span></code>, <code><span class="topicverb">pickedUp</span></code>, <code><span class="topicverb">paid</span></code></p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyB-Column1-Body1">
                                      <code>
                                        <span class="topicproperty">Version</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
                                      <p>Identifies the version of the event. This field can be used for routing purposes, and is necessary for distinguishing major changes to the topic hierarchy or major changes to the schema of the payload. Including the version in the topic hierarchy enables blue/green or canary deployments, for instance, the regular production consumers might subscribe to version 1, while canary consumers subscribe to version 2. This version should simply take the form <code><span class="topicproperty">v1</span></code>, <code><span class="topicproperty">v2</span></code>, etc.</p>
                                      <p>Examples: <code><span class="topicproperty">v1</span></code>, <code><span class="topicproperty">v2</span></code></p>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Event_Topic_Properties" data-mc-generated-bookmark="TOC"/><a name="event-topic-properties"/>Event Topic Properties</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Beyond the event topic root, properties can be added to the event topic hierarchy to make the topic more granular. Properties are specific to each use case, and not applicable to all use cases. A&#xA0;property should be included only if it is useful for subscriber filtering, event routing, or access control. Some common properities might be location information, product, customer IDs, or specifiers for the type of data. You can include properties are are also present in the event payload, though we recommend that you include only the properties that are important for routing, filtering, or governance should be included in the topic.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Event topic properties should be ordered in terms of cardinality: from <b>least specific</b> to <b>most specific</b>. Consider potential event topic properties on a sale order event that encode both the city in which the sale occurred and the order ID of the placed order. There are likely more orders placed than cities in which the enterprise operates, therefore it would make sense that the city comes before the order ID in the topic hierarchy.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For each property in your topic hierarchy, it is also important to consider the structure of the data. Particularly, the value space of the property should be clearly documented, whether that be a freeform string, an enumeration, an ID format, an integer or a floating point number. For instance, if including an airport field in your event topic properties, the format for the airport code should be documented as well as information on where to find the most up-to-date list of airports used by your application.</p>
                              <table xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/Table_Num.css');" class="TableStyle-Table_Num" cellspacing="0">
                                <col class="TableStyle-Table_Num-Column-Column1" style="width: 184px;"/>
                                <col class="TableStyle-Table_Num-Column-Column1"/>
                                <thead>
                                  <tr class="TableStyle-Table_Num-Head-Header1">
                                    <th class="TableStyle-Table_Num-HeadE-Column1-Header1">Field

</th>
                                    <th class="TableStyle-Table_Num-HeadD-Column1-Header1">
Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
                                      <code>
                                        <span class="topicproperty">ObjectID</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>A unique identifier for the object instance that was acted on. There may be more than one <code><span class="topicproperty">ObjectID</span></code>, for instance, if an order is placed by a customer, the <code><span class="topicproperty">orderId</span></code> and <code><span class="topicproperty">customerId</span></code> may both be included. Only the IDs that are helpful for routing, filtering, or governance should be included. </p>
                                      <p>Examples: <code><span class="topicproperty">orderID</span></code>, <code><span class="topicproperty">sensorID</span></code>, <code><span class="topicproperty">customerID</span></code>, <code><span class="topicproperty">routeNumber</span></code>, <code><span class="topicproperty">productSKU</span></code></p>
                                      <p>Some uses of <code><span class="topicproperty">ObjectID</span></code> might include subscribing to receive all notifications for a particular route number, or using access control to only allow IoT sensors to publish updates for their own <code><span class="topicproperty">sensorID</span></code>.</p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
                                      <code>
                                        <span class="topicproperty">Locality</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>The geographical or structural location at which the event occurred. The local may be a single level like a country, region, or transit stop number, or may require multiple levels such as latitude/longitude, region/location, origin/destination, etc. </p>
                                      <p>Depending on how specific the locality is, it may be included near the beginning of the properties section (e.g.,  country codes such as <span class="topicproperty">US</span> or <span class="topicproperty">UK</span>), or it may appear near the end of the properties section (e.g., coordinates such as  latitude and longitude).</p>
                                      <p>Some uses of locality might be for geofencing (received data via latitude and longitude), or ensuring data sovereignty laws are respected based on the region information.</p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyH-Column1-Body1">
                                      <code>
                                        <span class="topicproperty">Category</span>
                                      </code>
                                    </td>
                                    <td class="TableStyle-Table_Num-BodyG-Column1-Body1">
                                      <p>Often, data falls into certain categories. These categories might not be different enough to be differentiated in the <code><span class="topicnoun">ObjectType</span></code> field described in the Topic Root, but may still be valuable information in the topic. For instance, a ride share app may have various vehicle types, or there may be specific follow-on actions for certain products and not others.</p>
                                      <p>Some uses of <code><span class="topicproperty">Category</span></code> may be only receiving updates for a certain subset of data rather than the whole set, such as providing reports for  a certain aspect of a product.</p>
                                    </td>
                                  </tr>
                                  <tr class="TableStyle-Table_Num-Body-Body1">
                                    <td class="TableStyle-Table_Num-BodyB-Column1-Body1"><code><span class="topicproperty">HandlingInstruction</span></code>(advanced)</td>
                                    <td class="TableStyle-Table_Num-BodyA-Column1-Body1">
                                      <p>In advanced use cases, additional handling information may need to be included in the event topic, such as information about the payload or importance of the event so that routing and filtering decisions may be made. </p>
                                      <p>For example, if your system emits events onto the event mesh through a connector that converts data sources into event streams that have different encoding types,  such as <code>json</code> or <code>protobuf</code>, it may be important to include this information in the event topic  to differentiate between the two. A handling Instruction may be useful if you have separate instances of the application that process the events based on the encoding.</p>
                                      <p>This field may be promoted to the event topic root (e.g., before the version field) if different handlings may need to be versioned separately. For instance, if the <code>json</code> encoding may change independent of the <code>protobuf</code> encoding,  the <code>json</code> encoding can be version bumped without impacting <code>protobuf</code> consumers.</p>
                                      <p>If the only users of <code><span class="topicproperty">HandlingInstructions</span></code> are instructing consumers on how to handle the event, consider using <a href="../API/API-Developer-Guide/Creating-Custom-Header-Fields.htm" class="link-internal">message properties</a> instead. <code><span class="topicproperty">HandlingInstructions</span></code> should only be included if the field is helpful for routing, filtering, or governance, or in cases where using message properties is not possible. For instance, when using off the shelf connectors that do not support message properties.</p>
                                      <p>&#xA0;</p>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Complete_Event_Topic" data-mc-generated-bookmark="TOC"/><a name="complete-event-topic"/>Complete Event Topic</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Putting together an event topic root and event topic properties creates an event topic that describes the event with a series of fields from least specific to most specific. This leads to a topic template of:</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <code><span class="topicdomain">Domain</span>/<span class="topicnoun">ObjectType</span>/<span class="topicverb">Verb</span>/<span class="topicproperty">Version</span>/<span class="topicproperty">Properties...</span></code>
                              </p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Keep in mind that these are best practices that need to be tailored to each individual use case, and that any level can be skipped or expanded to multiple levels if there is a benefit to routing, filtering, or access control. After a decision has been made on which fields are included or omitted from the topic architecture, it must be applied consistently across the object-type domain. The levels of the topic must be used systematically and have unchanging meanings, otherwise routing and filtering will provide inconsistent results. In addition, do not skimp on the root of the topic structure, particularly the domain; being too specific too early in the hierarchy often leads to topics that can seem out of context to read and can make the merging of systems very difficult.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Documenting_an_Event" data-mc-generated-bookmark="TOC"/>Documenting an Event</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Each event should be well-documented, and each individual topic level should be clearly defined in terms of the format of the data. Documenting events in this way is often referred to as cataloging. Cataloging events has the benefit of clearly stating which properties are available on an event, and how each individual property functions. It is also important for event discovery which allows existing events to be reused by new applications. All of this can be done in <a href="../Cloud/Event-Portal/event-portal-lp.htm" target="_blank" class="MCXref xref">PubSub+&#xA0;Event Portal</a></p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For each event topic level, the value space should be clearly defined (e.g., integer, floating-point number, enumeration, or string format). For example, a property may contain airport codes, and the list of possible codes should be enumerated or linked to a source of truth. Furthermore, the events within an organization should follow a consistent pattern, such as camelCase for all naming within the event topic architecture. Using camelCase is recommended because snake_case requires additional characters for the same semantics. These decisions should be documented so that all events in the system follow a consistent format.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Subscription_Exceptions" data-mc-generated-bookmark="TOC"/>Subscription Exceptions</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span> event brokers support negative subscriptions, prefixed with an exclamation mark <code>!</code>, which exclude the specified topic from a larger subscription set. Consider the case where a specific flight number&#x2019;s data needs debugging. It may be helpful to have one instance of an application handle that particular flight number, EX1234, and have another instance of the application handle all other flight numbers. The application instance handling the specific flight  can subscribe to <code>flight/ex1234</code>, and the instance handling all other flights can subscribe to <code>flight/*</code> and exclude flight EX1234 with the subscription <code>!flight/ex1234</code>.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">If you are designing a solution where special handling is always required, it's a best practice to have a separate topic level to encode the property. This ensures that the subscribers don't need to closely coordinate in order to prevent losing data. We also recommend enabling <code>reject-msg-to-sender-on-no-subscription-match</code> on client profiles that use negative subscriptions to ensure that excluded messages are not lost.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Subscription exceptions are supported only for Guaranteed messaging.<MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"> For more information, see <a href="Guaranteed-Msg/System-Level-Subscription-Exception-Config.htm" class="MCXref xref">System-Level Subscription Exception Configuration</a>.</MadCap:conditionalText></p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Null_Values" data-mc-generated-bookmark="TOC"/>Null Values</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There may be occasions where a topic level may be null. If this occurs within your taxonomy, first consider if the field is still useful for routing, access control, or governance, and if it's not, simply remove the level from the taxonomy. If it is still valuable, consider if a reasonable default can be used. If not, a null value should be defined, both so your application can subscribe to any topics containing this value, and so you can apply access control and governance configurations to the topic.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Choosing a null value may be as simple as choosing a reasonable default, often referred to as a <i>sentinel</i> value. Some examples of sentinel values are:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>defaulting to 0 for a numerical field</li>
                                <li>defining a default value for enumerations</li>
                                <li>defaulting to customer ID to 0000 when no customer is logged in</li>
                              </ul>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> Free-form strings are the most complex and need to be considered on a case-by-case basis. <code>_null_</code> is a good starting point if <code>_</code> cannot occur naturally within the value space of the field. It is important to be aware of user input in this case, and ensure that the input cannot overlap with the null value (e.g., <code>_</code> must be an invalid character in the user input). <a href="SMF-Topics.htm" class="link-internal">Special characters in SMF</a>, such as <code>#</code>, <code>_</code>, <code>*</code>, and <code>&gt;</code>, should be avoided in the chosen null value.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Regardless of the value chosen, whether sentinel or a special null, it must be documented, along with the event as a possible value for the field.</p>
                              <h2 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Topic_Architecture_Anti-Patterns" data-mc-generated-bookmark="TOC"/><a name="antipatterns"/>Topic Architecture Anti-Patterns</h2>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">There are a number of patterns that should be avoided when designing a topic architecture. A few common anti-patterns are outlined.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Don't_Use_Message_Properties_for_Filtering" data-mc-generated-bookmark="TOC"/>Don't Use Message Properties for Filtering</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Many legacy messaging systems rely on features, such as <MadCap:conditionalText data-mc-conditions="SAP.SAPTempHide"><a href="../API/Solace-JMS-API/Selectors.htm" class="link-internal">JMS selectors</a></MadCap:conditionalText> , to filter data going to consumers based on user-defined message properties. <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><span class="mc-variable Product-Names.pubsub_brand_only variable">PubSub+</span></MadCap:conditionalText> has legacy support for selectors, however filtering based on selectors is an anti-pattern. Selectors cause a number of architectural problems, such as mixing the responsibilities of filtering with event content resulting in complicating the event schema. Furthermore, access control, routing, and governance decisions cannot be made based on message properties. In general, selectors should be avoided, and the routing, filtering or governance information should be encoded into the topic hierarchy. Message properties should be used only to communicate metadata about an event to consumers of that event.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Don't_Include_Tracing_Information_in_the_Topic_Hierarchy_for_Tracing_Use_Cases" data-mc-generated-bookmark="TOC"/>Don't Include Tracing Information in the Topic Hierarchy for Tracing Use Cases</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Tracing information from an event,  such as TraceID, SpanID, or any other tracing data,  should not be included in the topic hierarchy. Instead, <span class="mc-variable Variables.CompanyName variable">Solace</span> native support for <a href="../Features/Distributed-Tracing/Distributed-Tracing-Overview.htm" class="link-internal">Distributed Tracing</a> should be used along with a tracing backend to enable tracing use cases. Including the TraceID in the topic hierarchy uses up valuable space in the topic string, and provides less visibility than <MadCap:conditionalText data-mc-conditions="SAP.SapHideFromOutput"><span class="mc-variable Variables.CompanyName variable">Solace</span></MadCap:conditionalText> Distributed Tracing. The TraceID is also not useful for routing, filtering, or governance because it is an arbitrary value that changes for each message.</p>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Don't_Include_Deployment_Environment_Names_in_the_Topic_Hierarchy" data-mc-generated-bookmark="TOC"/>Don't Include Deployment Environment Names in the Topic Hierarchy</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">Environment designators, such as <code>dev</code>, <code>qa</code>, or <code>prod</code> should not be used in your topic hierarchy. If you include  environment information in your topic hierarchy, it causes several problems:</p>
                              <ul xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
                                <li>Forces your application code to change as you promote it from your development environment into pre-production or production. At minimum, you would need an environment variable or some other way for publishers to put the right environment into the topic, meaning that your configuration would not be static.</li>
                                <li>Requires that you to change your configuration in many areas such as access-control lists (ACLs), topic subscriptions, message replay configuration, replication configuration, distributed tracing, and so on. Consequently, your infrastructure as code and CI/CD pipelines may deviate from best practices and require modifications based on the target environment.</li>
                                <li>Prevents you from using <span class="mc-variable Product-Names.eventportal_product_long variable">PubSub+&#xA0;Event Portal</span> to track the promotion of events across development environments. It's important to recognize that <span class="mc-variable Product-Names.eventportal_product_short variable">Event Portal</span> conforms to industry-accepted infrastructure as code methodologies, such as where you promote a single artifact across development environments.</li>
                              </ul>
                              <h3 xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><a xmlns="" name="Don't_Include_Spaces_or_Other_Special_Characters_in_Topics" data-mc-generated-bookmark="TOC"/>Don't Include Spaces or Other Special Characters in Topics</h3>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd"> Avoid using non-alphanumeric characters in the topic taxonomy, such as spaces and special characters. Including spaces makes the topic more difficult to read, and also makes the topics less reusable, as well uses up characters unnecessarily. Furthermore, <code>*</code>, <code>&gt;</code> and <code>!</code> should be avoided on any published topics as they are treated as literals when you publish the topic, but are treated as special characters in topic subscriptions. For this reason, it is very difficult to subscribe to events when topics contain these characters.</p>
                              <p xmlns="http://www.madcapsoftware.com/Schemas/MadCap.xsd">For similar reasons, avoid snake_case when possible because using separator characters is less efficient than other naming conventions. For this reason, you should use PascalCase or camelCase instead.</p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="no-print">
                      <div>
                        <a href="#" id="docsFeedbackTrigger" class="docs-issue-collector">Provide feedback</a>
                      </div>
                    </div>
                    <footer class="my-4 pt-4 text-center no-print">
                      <div class="footer-txt text-center no-print">
                        <ul class="list-inline ">
                          <li class="list-inline-item text-muted"><a href="../Resources/Documentation-Set.htm" class="doc-set-footer-link MCXref xref xrefdoc-set-footer-link">Documentation Coverage</a>: <span class="mc-variable Variables.DocumentSetNumber variable">2024.09.16.0001</span></li>
                          <li class="list-inline-item text-muted">Last Updated: <span class="mc-variable Variables.MonthDayYear variable">September 16, 2024</span></li>
                          <li class="list-inline-item text-muted" style="font-size:13px;"> &#xA9;  <span class="mc-variable Variables.CompanyNameLegal variable">Solace Corporation</span></li>
                        </ul>
                      </div>
                      <div class="footer-icons">
                        <ul class="list-inline">
                          <li class="list-inline-item">
                            <a href="https://facebook.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../Resources/Images/Social-Media/facebook_22x21.png" class="Hyperlinked" alt="Facebook" title="Solace Facebook Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.linkedin.com/company/20219" target="_blank" class="social-media-icon">
                              <img src="../Resources/Images/Social-Media/LinkedIn_22x21.png" class="Hyperlinked" alt="LinkedIn" title="Solace LinkedIn Page" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://twitter.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../Resources/Images/Social-Media/Twitter_22x21.png" class="Hyperlinked" alt="Twitter" title="Solace Twitter Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.youtube.com/user/SolaceSystems" target="_blank" class="social-media-icon">
                              <img src="../Resources/Images/Social-Media/youtube_22x21.png" class="Hyperlinked" alt="YouTube" title="Solace YouTube Channel" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://www.instagram.com/solacedotcom/" target="_blank" class="social-media-icon">
                              <img src="../Resources/Images/Social-Media/instagram_22x21.png" class="Hyperlinked" alt="Instagram" title="Solace Instagram Feed" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                          <li class="list-inline-item">
                            <a href="https://medium.com/solacedotcom" target="_blank" class="social-media-icon">
                              <img src="../Resources/Images/Social-Media/medium_22x21.png" class="Hyperlinked" alt="Medium" title="Solace Medium Blog" style="width: 22;height: 21;"/>
                            </a>
                          </li>
                        </ul>
                      </div>
                      <div class="footer_link_menu">
                        <ul class="link_list">
                          <li class="link_list_item">
                            <a href="https://solace.com/products/" target="_blank" class="footer-link">Products</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/company/" target="_blank" class="footer-link">Company</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://www.solace.dev/" target="_blank" class="footer-link">Developers</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/support/" target="_blank" class="footer-link">Support</a>
                          </li>
                          <li class="link_list_item">
                            <a href="https://solace.com/contact/" target="_blank" class="footer-link">Contact Us</a>
                          </li>
                        </ul>
                      </div>
                    </footer>
                  </div>
                  <!-- JIRA issue collector -->
                  <script>/*<![CDATA[*/// Requires jQuery!
jQuery.ajax({
    url: "https://sol-jira.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e-T/o2joag/b/24/e73395c53c3b10fde2303f4bf74ffbf6/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=076e0808",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS = {
"triggerFunction": function(showCollectorDialog) {
//Requires that jQuery is available!
$("#docsFeedbackTrigger").click(function(e) {
e.preventDefault();
showCollectorDialog();
});
},
fieldValues: {
recordWebInfo: '1', // field Name
recordWebInfoConsent: ['1'] // field Id
}
};
/*]]>*/</script>
                  <script src="../Resources/Scripts/thumbnail.js">
                                    </script>
                  <!-- Script for Launching offsite links in new tab -->
                  <script type="text/javascript">/*<![CDATA[*/$("a[href^='http']").attr("target","_blank");/*]]>*/</script>
                </div>
              </div>
            </div>
          </div>
          <a data-close="true"/>
        </div>
      </div>
    </div>
  </body>
</html>
